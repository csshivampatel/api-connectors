[
  {
    "operation": "Creates a file request",
    "description": "",
    "operationId": "FileRequestsCreate",
    "operationApiType": "POST",
    "operationPath": "/file_requests/create",
    "operationSummary": "Create File Request",
    "operationDescription": "Creates a file request for this user",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Delete File Requests",
    "description": "",
    "operationId": "FileRequestsCreate",
    "operationApiType": "POST",
    "operationPath": "/file_requests/delete",
    "operationSummary": "Delete File Requests",
    "operationDescription": "Delete a batch of closed file requests.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Get a List of File Requests",
    "description": "",
    "operationId": "FileRequestsList",
    "operationApiType": "POST",
    "operationPath": "/file_requests/list_v2",
    "operationSummary": "Get a List of File Requests",
    "operationDescription": "Returns a list of file requests owned by this user. For apps with the app folder permission, this will only return file requests with destinations in the app folder.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Update a file request",
    "description": "",
    "operationId": "FileRequestsUpdate",
    "operationApiType": "POST",
    "operationPath": "/file_requests/update",
    "operationSummary": "Update a file request.",
    "operationDescription": "Update a file request.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Copy File or Folder",
    "description": "",
    "operationId": "FilesCopyV2",
    "operationApiType": "POST",
    "operationPath": "/files/copy_v2",
    "operationSummary": "Copy File or Folder",
    "operationDescription": "Copy a file or folder to a different location in the user's Dropbox.\nIf the source path is a folder all its contents will be copied.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Copy Multiple Files or Folders",
    "description": "",
    "operationId": "FilesCopyBatch",
    "operationApiType": "POST",
    "operationPath": "/files/copy_batch_v2",
    "operationSummary": "Copy Multiple Files or Folders",
    "operationDescription": "Copy multiple files or folders to different locations at once in the user's Dropbox. This route will replace copy_batch:1. The main difference is this route will return status for each entry, while copy_batch:1 raises failure if any entry fails. This route will either finish synchronously, or return a job ID and do the async copy job in background. Please use copy_batch/check:2 to check the job status.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Delete File or Folder",
    "description": "",
    "operationId": "FilesDeleteV2",
    "operationApiType": "POST",
    "operationPath": "/files/delete_v2",
    "operationSummary": "Delete File or Folder",
    "operationDescription": "Delete the file or folder at a given path.\nIf the path is a folder, all its contents will be deleted too.\nA successful response indicates that the file or folder was deleted. The returned metadata will be the corresponding :type:`FileMetadata` or :type:`FolderMetadata` for the item at time of deletion, and not a :type:`DeletedMetadata` object.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Delete  Multiple Files/Folders",
    "description": "",
    "operationId": "FilesDeleteBatch",
    "operationApiType": "POST",
    "operationPath": "/files/delete_batch",
    "operationSummary": "Delete  Multiple Files/Folders",
    "operationDescription": "Delete multiple files/folders at once.\nThis route is asynchronous, which returns a job ID immediately and runs the delete batch asynchronously. Use :route:`delete_batch/check` to check the job status.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Download File",
    "description": "",
    "operationId": "FilesDownload",
    "operationApiType": "POST",
    "operationPath": "/files/download",
    "operationSummary": "Download File",
    "operationDescription": "Download a file from a user's Dropbox.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Download Folder as a Zip File",
    "description": "",
    "operationId": "FilesDownloadZip",
    "operationApiType": "POST",
    "operationPath": "/files/download_zip",
    "operationSummary": "Download Folder as a Zip File",
    "operationDescription": "Download a folder from the user's Dropbox, as a zip file. The folder must be less than 1 GB in size and have fewer than 10,000 total files. The input cannot be a single file.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Get Metadata For a File or Folder",
    "description": "",
    "operationId": "FilesGetMetadata",
    "operationApiType": "POST",
    "operationPath": "/files/get_metadata",
    "operationSummary": "Get Metadata For a File or Folder",
    "operationDescription": "Returns the metadata for a file or folder.\nNote: Metadata for the root folder is unsupported.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Get Temporary File Upload Link",
    "description": "",
    "operationId": "FilesGetTemporaryUploadLink",
    "operationApiType": "POST",
    "operationPath": "/files/get_temporary_upload_link",
    "operationSummary": "Get Temporary File Upload Link",
    "operationDescription": "Get a one-time use temporary upload link to upload a file to a Dropbox location. This endpoint acts as a delayed upload.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Get Contents of a Folder",
    "description": "",
    "operationId": "FilesListFolder",
    "operationApiType": "POST",
    "operationPath": "/files/list_folder",
    "operationSummary": "Get Contents of a Folder",
    "operationDescription": "Starts returning the contents of a folder. If the result's :field:`ListFolderResult.has_more` field is :val:`true`, call :route:`list_folder/continue` with the returned :field:`ListFolderResult.cursor` to retrieve more entries.\nIf you're using :field:`ListFolderArg.recursive` set to :val:`true` to keep a local cache of the contents of a Dropbox account, iterate through each entry in order and process them as follows to keep your local state in sync:\nFor each :type:`FileMetadata`, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it and remove all its children.\nFor each :type:`FolderMetadata`, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it but leave the children as they are. Check the new entry's :field:`FolderSharingInfo.read_only` and set all its children's read-only statuses to match.\nFor each :type:`DeletedMetadata`, if your local state has something at the given path, remove it and all its children. If there's nothing at the given path, ignore this entry.\nNote: :type:`auth.RateLimitError` may be returned if multiple :route:`list_folder` or :route:`list_folder/continue` calls with same parameters are made simultaneously by same API app for same user. If your app implements retry logic, please hold off the retry until the previous request finishes.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Move File/Folder",
    "description": "",
    "operationId": "FilesMoveV2",
    "operationApiType": "POST",
    "operationPath": "/files/move_v2",
    "operationSummary": "Move File/Folder",
    "operationDescription": "Move a file or folder to a different location in the user's Dropbox.\nIf the source path is a folder all its contents will be moved.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Move Multiple Files/Folders",
    "description": "",
    "operationId": "FilesMoveBatch",
    "operationApiType": "POST",
    "operationPath": "/files/move_batch_v2",
    "operationSummary": "Move Multiple Files/Folders",
    "operationDescription": "Move multiple files or folders to different locations at once in the user's Dropbox.\nThis route is 'all or nothing', which means if one entry fails, the whole transaction will abort.\nThis route will return job ID immediately and do the async moving job in background. Please use :route:`move_batch/check` to check the job status.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Upload File",
    "description": "",
    "operationId": "FilesUpload",
    "operationApiType": "POST",
    "operationPath": "/files/upload",
    "operationSummary": "Upload File",
    "operationDescription": "Create a new file with the contents provided in the request.\nDo not use this to upload a file larger than 150 MB. Instead, create an upload session with :route:`upload_session/start`.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "Download the Shared Link File",
    "description": "",
    "operationId": "SharingGetSharedLinkFile",
    "operationApiType": "POST",
    "operationPath": "/sharing/get_shared_link_file",
    "operationSummary": "Download the Shared Link File",
    "operationDescription": "Download the shared link's file from a user's Dropbox.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  },
  {
    "operation": "List Shared Links of User",
    "description": "",
    "operationId": "SharingListSharedLinks",
    "operationApiType": "POST",
    "operationPath": "/sharing/list_shared_links",
    "operationSummary": "List Shared Links of User",
    "operationDescription": "List shared links of this user.\nIf no path is given, returns a list of all shared links for the current user.\nIf a non-empty path is given, returns a list of all shared links that allow access to the given path - direct links to the given path and links to parent folders of the given path. Links to parent folders can be suppressed by setting direct_only to true.",
    "deprecated": false,
    "adapterProperties": [
      {
        "name": "AdapterMode",
        "key": "",
        "value": "API"
      }
    ],
    "parameters": []
  }
]
