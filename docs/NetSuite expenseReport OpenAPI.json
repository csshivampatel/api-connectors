{
  "openapi": "3.0.1",
  "info": {
    "title": "NetSuite REST Record API",
    "description": "NetSuite REST Record API generated 2024-05-24 at 12:34:59 UTC for account TSTDRV1303059, user joe.klug@peregrineconnect.com with role Neuron ESB Integration.",
    "termsOfService": "http://www.netsuite.com/portal/resource/terms-of-service.shtml",
    "contact": {
      "name": "Oracle NetSuite",
      "url": "http://www.netsuite.com",
      "email": "info@netsuite.com"
    },
    "version": "v1",
    "x-framework": {
      "name": "oracle-netsuite-suitetalk-rest"
    }
  },
  "servers": [
    {
      "url": "https://tstdrv1303059.suitetalk.api.netsuite.com/services/rest/record/v1"
    }
  ],
  "paths": {
    "/expenseReport": {
      "get": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Get list of records.",
        "operationId": "expenseReportGET",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query that is used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit used to specify the number of results on a single page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset used for selecting a specific page of results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of records.",
            "content": {
              "application/vnd.oracle.resource+json; type=collection": {
                "schema": {
                  "$ref": "#/components/schemas/expenseReportCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Insert record.",
        "operationId": "expenseReportPOST",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/expenseReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Inserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/expenseReport/{id}": {
      "get": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Get record.",
        "operationId": "expenseReportGET2",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expandSubResources",
            "in": "query",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "simpleEnumFormat",
            "in": "query",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "examples": {
              "multiple fields": {
                "value": "field1,field2"
              },
              "single field": {
                "value": "field"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved record.",
            "headers": {
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/expenseReport"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Insert or update record.",
        "operationId": "expenseReportPUT",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "External identifier.",
            "schema": {
              "type": "string",
              "pattern": "eid:(.+)"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/expenseReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Upserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Remove record.",
        "operationId": "expenseReportDELETE",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed record."
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ExpenseReport"
        ],
        "summary": "Update record.",
        "operationId": "expenseReportPATCH",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/expenseReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "nsResourceCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nsResource"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "nsResource": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Internal identifier",
            "type": "string"
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "externalId": {
            "title": "External identifier",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          }
        }
      },
      "nsError": {
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "readOnly": true,
            "description": "A URI reference to the documentation about the problem type.",
            "format": "URI"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "readOnly": true,
            "description": "A human-readable description of the problem type."
          },
          "status": {
            "title": "Status",
            "type": "integer",
            "readOnly": true,
            "description": "The HTTP status code generated by the server the request originates from.",
            "format": "int32"
          },
          "o:errorDetails": {
            "type": "array",
            "readOnly": true,
            "description": "An array containing one or more problem types.",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "title": "Detail",
                  "type": "string",
                  "readOnly": true,
                  "description": "A detailed, human-readable description of the problem occurrence."
                },
                "o:errorPath": {
                  "title": "Error Path",
                  "type": "string",
                  "readOnly": true,
                  "description": "The JSON path that indicates where the problem occurs within the request body.",
                  "format": "JSONPath"
                },
                "o:errorUrl": {
                  "title": "Error URL",
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI of the first element in the request URL where the problem occurs.",
                  "format": "URI"
                },
                "o:errorHeader": {
                  "title": "Error Header",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the HTTP header where the problem occurs."
                },
                "o:errorQueryParam": {
                  "title": "Error Query Parameter",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the query parameter where the problem occurs."
                },
                "o:errorCode": {
                  "title": "Error Code",
                  "type": "string",
                  "readOnly": true,
                  "description": "The application-specific error code. Similar problem types are grouped together."
                }
              }
            }
          }
        }
      },
      "nsLink": {
        "type": "object",
        "properties": {
          "rel": {
            "title": "Relationship",
            "type": "string",
            "readOnly": true
          },
          "href": {
            "title": "Hypertext Reference",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "expenseReport-accountingBookDetailElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "exchangeRate": {
            "title": "Exchange Rate",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "accountingBook": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subsidiary": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "expenseReport-expenseCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/expenseReport-expenseElement"
            }
          }
        }
      },
      "expenseReport": {
        "type": "object",
        "properties": {
          "custbody1": {
            "title": "Actual Usage",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody3": {
            "title": "Contract Start Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody4": {
            "title": "Roll Back",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "tranDate": {
            "title": "Date",
            "type": "string",
            "description": "NetSuite inserts today&apos;s date as the date of this expense report. You can type or pick another date.",
            "format": "date",
            "nullable": true
          },
          "custbody_sii_code_issued_inv": {
            "title": "SII Code Issued Inv",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "memo": {
            "title": "Purpose",
            "type": "string",
            "description": "Enter the purpose of the entire expense report.",
            "nullable": true
          },
          "policyviolated": {
            "title": "Policy violated",
            "type": "boolean"
          },
          "advance": {
            "title": "Advance to Apply",
            "type": "number",
            "description": "Enter any advance that should be applied to any reimbursement for these expenses.",
            "format": "double",
            "nullable": true
          },
          "custbody_opp_prjredflags": {
            "title": "Potential Red Flags",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_collections_activity_date": {
            "title": "Collections Activity Date",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_date_of_taxable_supply": {
            "title": "Date of Taxable Supply",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "id": {
            "title": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "custbody_powf_pm_ok": {
            "title": "Project Manager Approval",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_sii_land_register": {
            "title": "Land register/Cadaster reference",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "expensereportexchangerate": {
            "title": "Exchange Rate",
            "type": "number",
            "description": "Select an exchange rate for this expense report.",
            "format": "double",
            "nullable": true
          },
          "custbody_cash_register": {
            "title": "Cash Register",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody5": {
            "title": "PS Project Baseline Set",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody6": {
            "title": "Project Created",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody7": {
            "title": "Notes",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "A",
                  "B",
                  "C",
                  "D",
                  "E",
                  "V",
                  "F",
                  "G",
                  "H",
                  "I",
                  "J"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "custbody_svb_sched_in_process": {
            "title": "SVB Schedule In Process",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_powf_ctrl_dt": {
            "title": "Controller Approval Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "createdDate": {
            "title": "Date Created",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "custbody_collections_promised_pmt_date": {
            "title": "Collections Promised Payment Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_code": {
            "title": "SII Code",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_svb_schedule_is_intercompany": {
            "title": "Schedule Is Intercompany",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_adjustment_journal": {
            "title": "Adjustment Journal",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_my_import_declaration_num": {
            "title": "Import Declaration No.",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_establishment_code": {
            "title": "Establishment Code",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_country_of_origin": {
            "title": "Country of Origin",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_not_reported_in_time": {
            "title": "Billing Record Cannot Be Submitted On Time",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_opp_prjrequirements": {
            "title": "Key Requirements",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "prevDate": {
            "title": "Previous Effective Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "custbody_itr_nexus": {
            "title": "ITR Nexus",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "customForm": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "46",
                  "230"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "currencyPrecision": {
            "title": "Currency Precision",
            "type": "string",
            "nullable": true
          },
          "custbody_document_date": {
            "title": "Document Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_powf_pm_dt": {
            "title": "Project Manager Approval Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_report_timestamp": {
            "title": "Report Timestamp",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "corporatecard": {
            "title": "Corporate Card",
            "type": "number",
            "description": "The amount shown has been charged to a corporate credit card and will be reimbursed directly to the card issuer.",
            "format": "double",
            "nullable": true
          },
          "complete": {
            "title": "Complete",
            "type": "boolean",
            "description": "This field shows if this report is complete. Only complete reports are submitted for approval and processing. Note: Once an expense report is marked complete, you can no longer make changes to it."
          },
          "custbody_sii_is_third_party": {
            "title": "Issued By Third Party",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_esc_last_modified_date": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_invoice_date": {
            "title": "Invoice Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_svb_error_logs": {
            "title": "Shared Vendor Bill Error Logs",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_credit_terms": {
            "title": "Terms",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_registration_msg": {
            "title": "Registration Message",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "custbody_sii_accounting_date": {
            "title": "Accounting Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_opp_prjstart": {
            "title": "Desired Start Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sale_billexpdetail": {
            "title": "Billable Expense Detail",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_opportunity_link": {
            "title": "Opportunity Link",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_4110_customregnum": {
            "title": "Customs Registration Number",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_ref_no": {
            "title": "Reference No.",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_article_72_73": {
            "title": "Simplified Invoice Article 7.2 7.3",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_4599_sg_import_permit_num": {
            "title": "Import Permit No.",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_doc_num_summ_invoice": {
            "title": "Last Document Number Of Summary Invoice",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "totalbasecurrency": {
            "title": "Total in Base Currency",
            "type": "string",
            "description": "This amount is the total of the expense lines converted to the subsidiary&apos;s base currency at the expense report exchange rate.",
            "nullable": true
          },
          "custbody_sii_external_reference": {
            "title": "External Reference",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_itr_doc_number": {
            "title": "Document Number",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "reimbursable": {
            "title": "Reimbursable Expenses",
            "type": "number",
            "description": "This is the total of reimbursable expenses from the line items below.",
            "format": "double",
            "nullable": true
          },
          "custbody_2663_reference_num": {
            "title": "ACH/EFT Reference No.",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sesc_approved": {
            "title": "Approved",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custbody_esc_created_date": {
            "title": "Created Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "total": {
            "title": "Expenses Total",
            "type": "number",
            "description": "NetSuite will keep track of the total expenses as you add and edit line items below.",
            "format": "double",
            "nullable": true
          },
          "custbody_sii_article_61d": {
            "title": "Invoice With No Counterpart Article 6.1.d",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "advance2": {
            "title": "Advance to Apply",
            "type": "number",
            "description": "This is the total of any advances applied to this expense report.",
            "format": "double",
            "nullable": true
          },
          "custbody_nondeductible_processed": {
            "title": "Non-Deductible Tax Adjusted",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "nonreimbursable": {
            "title": "Non-reimbursable Expenses (Tax Excl.)",
            "type": "number",
            "description": "This is the total of any line items below marked as non-reimbursable.",
            "format": "double",
            "nullable": true
          },
          "custbody_reminder": {
            "title": "Reminder",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "tranId": {
            "title": "Exp. Rept. #",
            "type": "string",
            "description": "NetSuite increases the largest expense report number by one. If you wish, you can type another number. The next expense number will revert to the standard pattern. You can enter a maximum of 45 characters in this field.",
            "nullable": true
          },
          "custbody_counterparty_vat": {
            "title": "Counterparty VAT Number",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_refno_originvoice": {
            "title": "Reference No. of Original Invoice",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "amount": {
            "title": "Total Reimbursable Amount",
            "type": "number",
            "description": "The number NetSuite enters here represents the total of all line items minus any advances and lines marked as non-reimbursable.",
            "format": "double",
            "nullable": true
          },
          "custbody_opp_prjopentemplate": {
            "title": "View template",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_collections_note_id": {
            "title": "Collections Note Id",
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "lastModifiedDate": {
            "title": "Date Last Modified",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountingapproval": {
            "title": "Accounting Approval",
            "type": "boolean",
            "description": "If you have the appropriate accounting authority to approve this report indicating it is ready to pay, place a check mark in this box."
          },
          "supervisorapproval": {
            "title": "Supervisor Approval",
            "type": "boolean",
            "description": "If you have the appropriate authority as a supervisor to approve this report, place a check mark in this box."
          },
          "custbody_collections_note": {
            "title": "Collections Notes",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custbody_sii_operation_date": {
            "title": "Operation Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "usemulticurrency": {
            "title": "Use Multicurrency",
            "type": "boolean",
            "description": "Check this box if you want to enter expenses in foreign currencies on this expense report. This box is checked by default if you have enabled the Use Multicurrency Expense Reports preference on the General subtab at Home &gt; Set Preferences. Foreign amounts are translated into base currency amounts. Note that exchange rates and converted amounts displayed on expense lines are provided as approximations only. Actual reimbursement amounts will be based on rates at the time of reimbursement."
          },
          "duedate": {
            "title": "Date Due",
            "type": "string",
            "description": "Enter the due date of the expense report.",
            "format": "date",
            "nullable": true
          },
          "custbody_powf_ctrl_ok": {
            "title": "Controller Approval",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "custbody_nondeductible_ref_tran": {
            "$ref": "#/components/schemas/nsResourceCollection"
          },
          "custbody_sii_registration_status": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_regime_code": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_spcl_scheme_code_purchase": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_orig_invoice": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody2": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_nexus_notc": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_regime_code_of_supply": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_correction_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "advanceaccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_esc_campaign_category": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_opp_prjtemplate": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subsidiary": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_powf_ctrl": {
            "$ref": "#/components/schemas/nsResource"
          },
          "accountingBookDetail": {
            "$ref": "#/components/schemas/expenseReport-accountingBookDetailCollection"
          },
          "custbody_sii_exempt_details": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_svb_vend_bill_link": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_nondeductible_ref_genjrnl": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_powf_pm": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_svb_allocation_journal": {
            "$ref": "#/components/schemas/nsResourceCollection"
          },
          "expensereportcurrency": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_4599_mx_operation_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "expense": {
            "$ref": "#/components/schemas/expenseReport-expenseCollection"
          },
          "custbody_sii_property_location": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_delivery_terms": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_transaction_region": {
            "$ref": "#/components/schemas/nsResource"
          },
          "entity": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/nsResource"
              }
            ]
          },
          "class": {
            "$ref": "#/components/schemas/nsResource"
          },
          "department": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_mode_of_transport": {
            "$ref": "#/components/schemas/nsResource"
          },
          "postingPeriod": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_issued_inv_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_received_inv_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_orig_bill": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_spcl_scheme_code_sales": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_collections_performed_by": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_notc": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_collections_activity": {
            "$ref": "#/components/schemas/nsResource"
          },
          "location": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_registration_code": {
            "$ref": "#/components/schemas/nsResource"
          },
          "account": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_sii_intra_txn_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "acctcorpcardexp": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custbody_svb_vb_to_bell_dist_sched": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": [
          "custbody1",
          "custbody2",
          "custbody3",
          "custbody4",
          "tranDate",
          "custbody_sii_code_issued_inv",
          "memo",
          "custbody_sii_property_location",
          "custbody_sii_spcl_scheme_code_purchase",
          "custbody_nondeductible_ref_tran",
          "custbody_esc_campaign_category",
          "custbody_opp_prjredflags",
          "custbody_collections_activity_date",
          "custbody_date_of_taxable_supply",
          "id",
          "custbody_collections_activity",
          "custbody_nexus_notc",
          "custbody_powf_pm_ok",
          "custbody_sii_land_register",
          "custbody_sii_exempt_details",
          "postingPeriod",
          "custbody_cash_register",
          "custbody_powf_ctrl",
          "custbody_sii_orig_invoice",
          "custbody5",
          "custbody6",
          "custbody7",
          "custbody_svb_sched_in_process",
          "custbody_powf_ctrl_dt",
          "createdDate",
          "custbody_sii_spcl_scheme_code_sales",
          "custbody_collections_promised_pmt_date",
          "custbody_sii_intra_txn_type",
          "custbody_powf_pm",
          "custbody_sii_code",
          "custbody_svb_schedule_is_intercompany",
          "custbody_adjustment_journal",
          "custbody_my_import_declaration_num",
          "custbody_establishment_code",
          "custbody_sii_registration_code",
          "custbody_country_of_origin",
          "custbody_sii_not_reported_in_time",
          "custbody_opp_prjtemplate",
          "custbody_opp_prjrequirements",
          "custbody_svb_vb_to_bell_dist_sched",
          "custbody_itr_nexus",
          "custbody_document_date",
          "custbody_powf_pm_dt",
          "custbody_report_timestamp",
          "entity",
          "custbody_regime_code_of_supply",
          "custbody_sii_is_third_party",
          "custbody_sii_invoice_date",
          "custbody_svb_error_logs",
          "custbody_credit_terms",
          "custbody_sii_registration_msg",
          "externalId",
          "custbody_sii_accounting_date",
          "custbody_opp_prjstart",
          "custbody_regime_code",
          "custbody_opportunity_link",
          "custbody_4110_customregnum",
          "custbody_4599_mx_operation_type",
          "custbody_sii_ref_no",
          "custbody_sii_article_72_73",
          "custbody_4599_sg_import_permit_num",
          "custbody_delivery_terms",
          "custbody_doc_num_summ_invoice",
          "custbody_sii_external_reference",
          "custbody_itr_doc_number",
          "custbody_2663_reference_num",
          "custbody_sesc_approved",
          "custbody_transaction_region",
          "custbody_nondeductible_ref_genjrnl",
          "custbody_mode_of_transport",
          "custbody_collections_performed_by",
          "custbody_sii_article_61d",
          "custbody_sii_orig_bill",
          "custbody_svb_allocation_journal",
          "custbody_nondeductible_processed",
          "custbody_sii_received_inv_type",
          "custbody_svb_vend_bill_link",
          "tranId",
          "custbody_counterparty_vat",
          "custbody_refno_originvoice",
          "custbody_collections_note_id",
          "lastModifiedDate",
          "custbody_collections_note",
          "custbody_sii_issued_inv_type",
          "custbody_sii_registration_status",
          "custbody_sii_correction_type",
          "custbody_sii_operation_date",
          "duedate",
          "custbody_powf_ctrl_ok",
          "custbody_notc"
        ]
      },
      "expenseReportCollection": {
        "type": "object",
        "properties": {
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "title": "Items",
            "type": "array",
            "description": "An array field that represents a collection of elements, for example, sublist lines, multiselect items, or search results.",
            "items": {
              "$ref": "#/components/schemas/expenseReport"
            }
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "expenseReport-accountingBookDetailCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/expenseReport-accountingBookDetailElement"
            }
          }
        }
      },
      "expenseReport-expenseElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "custcol_svb_bill_distr_exclude": {
            "title": "Bill Distribution Exclude",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "memo": {
            "title": "Memo",
            "type": "string",
            "nullable": true
          },
          "custcol_establishment_code": {
            "title": "Establishment Code",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol9": {
            "title": "Display Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_5892_eutriangulation": {
            "title": "EU Triangulation",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "grossAmt": {
            "title": "Gross Amt",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "custcol1": {
            "title": "Terms",
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_statistical_value": {
            "title": "Statistical Value",
            "type": "number",
            "format": "double",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_2663_isperson": {
            "title": "Is Person",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "custcol_sii_annual_prorate": {
            "title": "Annual Prorate",
            "type": "number",
            "format": "double",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "custcol_country_of_origin_name": {
            "title": "Country of Origin",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_svb_vend_bill_lineno": {
            "title": "Line #",
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_svb_dist_alloc_det_hidden": {
            "title": "Recent Distribution Details [Hidden]",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "isnonreimbursable": {
            "title": "Non-reimbursable",
            "type": "boolean"
          },
          "custcol_sii_service_date": {
            "title": "Service Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "receipt": {
            "title": "Receipt",
            "type": "boolean"
          },
          "line": {
            "type": "string",
            "nullable": true
          },
          "custcol_adjustment_field": {
            "title": "Adjustment Field",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custcol_statistical_value_base_curr": {
            "title": "Statistical Value - Base Currency",
            "type": "number",
            "format": "double",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "expensedate": {
            "title": "Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "custcol_country_of_origin_code": {
            "title": "Country of Origin Code",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "rate": {
            "title": "Rate",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "custcol_2663_lastname": {
            "title": "Last Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "linked": {
            "type": "boolean"
          },
          "custcol_counterparty_vat": {
            "title": "Counterparty VAT Number",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "amount": {
            "title": "Amount",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isBillable": {
            "title": "Billable",
            "type": "boolean"
          },
          "quantity": {
            "title": "Quantity",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "raterequired": {
            "type": "boolean"
          },
          "custcol_2663_firstname": {
            "title": "First Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "corporatecreditcard": {
            "title": "Corporate Card",
            "type": "boolean"
          },
          "refnumber": {
            "title": "Ref No.",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "custcol_2663_companyname": {
            "title": "Company Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "department": {
            "$ref": "#/components/schemas/nsResource"
          },
          "customer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/nsResource"
              }
            ]
          },
          "custcol_statistical_procedure_purc": {
            "$ref": "#/components/schemas/nsResource"
          },
          "currency": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_2663_eft_file_format": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_nature_of_transaction_codes": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_adjustment_tax_code": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_far_trn_relatedasset": {
            "$ref": "#/components/schemas/nsResource"
          },
          "expenseaccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "category": {
            "$ref": "#/components/schemas/nsResource"
          },
          "expmediaitem": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_statistical_procedure_sale": {
            "$ref": "#/components/schemas/nsResource"
          },
          "location": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_emirate": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_sii_exempt_line_details": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_nondeductible_account": {
            "$ref": "#/components/schemas/nsResource"
          },
          "importedemployeeexpense": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_expense_code_of_supply": {
            "$ref": "#/components/schemas/nsResource"
          },
          "class": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custcol_svb_item_exp_account": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      }
    },
    "securitySchemes": {
      "OAuth_1.0_authorization": {
        "type": "apiKey",
        "description": "OAuth 1.0 - https://tools.ietf.org/html/rfc5849",
        "name": "authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "OAuth_1.0_authorization": []
    }
  ]
}