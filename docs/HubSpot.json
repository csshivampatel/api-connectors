{
  "swagger":"2.0",
  "info":{
     "title":"HubSpot API",
     "description":"Neuron ESB Provided Swagger Interface to interact with HubSpot Rest API",
    "contact": {
      "name": "Peregrine Support",
      "url": "https://www.peregrineconnect.com/"
    },
     "license":{
        "name":"MIT"
     },
     "version":"v1"
  },
  "host":"api.hubapi.com",
  "schemes":[
     "Https"
  ],
  "consumes":[
     "application/json"
  ],
  "produces":[
     "application/json"
  ],
  "paths":{
     "/crm/v3/pipelines/{objectType}": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Retrieve all pipelines",
      "description": "Return all pipelines for the object type specified by `{objectType}`.",
      "operationId": "get-/crm/v3/pipelines/{objectType}_getAll",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/CollectionResponsePipelineNoPaging"
          }
      }
      }
      },
      "post": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Create a pipeline",
      "description": "Create a new pipeline with the provided property values. The entire pipeline object, including its unique ID, will be returned in the response.",
      "operationId": "post-/crm/v3/pipelines/{objectType}_create",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelineInput"
      },
      "required": true
      }
    ],
      "responses": {
      "201": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/Pipeline"
          }
      }
      }
      }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Return a pipeline by ID",
      "description": "Return a single pipeline object identified by its unique pipelineId.",
      "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}_getById",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/Pipeline"
          }
      }
      }
      },
      "put": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Replace a pipeline",
      "description": "Replace all the properties of an existing pipeline with the values provided. This will overwrite any existing pipeline stages. The updated pipeline will be returned in the response.",
      "operationId": "put-/crm/v3/pipelines/{objectType}/{pipelineId}_replace",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "validateReferencesBeforeDelete",
      "in": "query",
      "required": false,
      "style": "form",
      "explode": true,
      "schema": {
      "type": "boolean",
      "default": false
      }
      },
      {
         "name": "validateDealStageUsagesBeforeDelete",
         "in": "query",
         "type": "boolean"
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelineInput"
      },
      "required": true
      }
    ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/Pipeline"
          }
      }
      }
      },
      "delete": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Delete a pipeline",
      "description": "Delete the pipeline identified by pipelineId.",
      "operationId": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}_archive",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "validateReferencesBeforeDelete",
      "in": "query",
      "required": false,
      "style": "form",
      "explode": true,
      "schema": {
      "type": "boolean",
      "default": false
      }
      },
      {
         "name": "validateDealStageUsagesBeforeDelete",
         "in": "query",
         "type": "boolean"
      }
      ],
      "responses": {
      "204": {
      "description": "No content"
      }
      }
      },
      "patch": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Update a pipeline",
      "description": "Perform a partial update of the pipeline identified by pipelineId. The updated pipeline will be returned in the response.",
      "operationId": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}_update",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "validateReferencesBeforeDelete",
      "in": "query",
      "required": false,
      "style": "form",
      "explode": true,
      "schema": {
      "type": "boolean",
      "default": false
      }
      },
      {
         "name": "validateDealStageUsagesBeforeDelete",
         "in": "query",
         "type": "boolean"
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelinePatchInput"
      },
      "required": true
      }
    ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/Pipeline"
          }
      }
      }
      }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/audit": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Return an audit of all changes to the pipeline",
      "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline identified by pipelineId.",
      "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/audit_getAudit",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/CollectionResponsePublicAuditInfoNoPaging"
          }
      }
      }
      }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Return all stages of a pipeline",
      "description": "Return all the stages associated with the pipeline identified by pipelineId.",
      "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_getAll",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/CollectionResponsePipelineStageNoPaging"
          }
      }
      }
      },
      "post": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Create a pipeline stage",
      "description": "Create a new stage associated with the pipeline identified by pipelineId. The entire stage object, including its unique ID, will be returned in the response.",
      "operationId": "post-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_create",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelineStageInput"
      },
      "required": true
      }
    ],
      "responses": {
      "201": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/PipelineStage"
          }
      }
      }
      }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Return a pipeline stage by ID",
      "description": "Return the stage identified by `{stageId}` associated with the pipeline identified by pipelineId.",
      "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_getById",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "stageId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/PipelineStage"
          }
      }
      }
      },
      "put": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Replace a pipeline stage",
      "description": "Replace all the properties of an existing pipeline stage with the values provided. The updated stage will be returned in the response.",
      "operationId": "put-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_replace",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },       
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "stageId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelineStageInput"
      },
      "required": true
      }
    ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/PipelineStage"
          }
      }
      }
      },
      "delete": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Delete a pipeline stage",
      "description": "Delete the pipeline stage identified by stageId associated with the pipeline identified by pipelineId.",
      "operationId": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_archive",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "stageId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "204": {
      "description": "No content"
      }
      }
      },
      "patch": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Update a pipeline stage",
      "description": "Perform a partial update of the pipeline stage identified by stageId associated with the pipeline identified by pipelineId. Any properties not included in this update will keep their existing values. The updated stage will be returned in the response.",
      "operationId": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_update",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },       
         {
            "$ref": "#/parameters/contentType"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "pipelineId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "stageId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/PipelineStagePatchInput"
      },
      "required": true
      }
    ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/PipelineStage"
          }
      }
      }
      }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit": {
      "get": {
      "tags": [
      "CRM Pipelines API"
      ],
      "summary": "Return an audit of all changes to the pipeline stage",
      "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline stage identified by stageId.",
      "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit_getAudit",
      "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
      {
      "name": "objectType",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      },
      {
      "name": "stageId",
      "in": "path",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "string"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/CollectionResponsePublicAuditInfoNoPaging"
          }
      }
      }
      }
      },    
     "/marketing/v3/transactional/single-email/send":{
      "post":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Send a single transactional email asynchronously.",
         "description":"Asynchronously send a transactional email. Returns the status of the email send with a statusId that can be used to continuously query for the status using the Email Send Status API.",
         "operationId":"post-/marketing/v3/transactional/single-email/send_sendEmail",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/PublicSingleSendRequestEgg"
               },
               "required":true
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/EmailSendStatusView"
               }
            }
         }
      }
   },
   "/marketing/v3/transactional/smtp-tokens":{
      "get":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Query SMTP API tokens by campaign name or an emailCampaignId.",
         "description":"Query multiple SMTP API tokens by campaign name or a single token by emailCampaignId.",
         "operationId":"get-/marketing/v3/transactional/smtp-tokens_getTokensPage",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"campaignName",
               "in":"query",
               "description":"A name for the campaign tied to the SMTP API token.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"emailCampaignId",
               "in":"query",
               "description":"Identifier assigned to the campaign provided during the token creation.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"after",
               "in":"query",
               "description":"Starting point to get the next set of results.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"limit",
               "in":"query",
               "description":"Maximum number of tokens to return.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/CollectionResponseSmtpApiTokenViewForwardPaging"
               }
            }
         }
      },
      "post":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Create a SMTP API token.",
         "description":"Create a SMTP API token.",
         "operationId":"post-/marketing/v3/transactional/smtp-tokens_createToken",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },       
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "description":"A request object that includes the campaign name tied to the token and whether contacts should be created for email recipients.",
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/SmtpApiTokenRequestEgg"
               },
               "required":true
            }
         ],
         "responses":{
            "201":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/SmtpApiTokenView"
               }
            }
         }
      }
   },
   "/marketing/v3/transactional/smtp-tokens/{tokenId}":{
      "get":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Query a single token by ID.",
         "description":"Query a single token by ID.",
         "operationId":"get-/marketing/v3/transactional/smtp-tokens/{tokenId}_getTokenById",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"tokenId",
               "in":"path",
               "description":"Identifier generated when a token is created.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/SmtpApiTokenView"
               }
            }
         }
      },
      "delete":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Delete a single token by ID.",
         "description":"Delete a single token by ID.",
         "operationId":"delete-/marketing/v3/transactional/smtp-tokens/{tokenId}_archiveToken",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"tokenId",
               "in":"path",
               "description":"Identifier generated when a token is created.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset":{
      "post":{
         "tags":[
            "Transactional Email API"
         ],
         "summary":"Reset the password of an existing token.",
         "description":"Allows the creation of a replacement password for a given token. Once the password is successfully reset, the old password for the token will be invalid.",
         "operationId":"post-/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset_resetPassword",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"tokenId",
               "in":"path",
               "description":"Identifier generated when a token is created.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/SmtpApiTokenView"
               }
            }
         }
      }
   },
     "/oauth/v1/access-tokens/{token}":{
        "get":{
           "tags":[
              "AUTH API"
           ],
           "summary":"Get Access Token",
           "operationId":"get-/oauth/v1/access-tokens/{token}_getAccessToken",
           "parameters":[
              {
                 "name":"token",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/AccessTokenInfoResponse"
                 }
              }
           }
        }
     },
     "/oauth/v1/refresh-tokens/{token}":{
        "get":{
           "tags":[
              "AUTH API"
           ],
           "summary":"Get Refresh Token",
           "operationId":"get-/oauth/v1/refresh-tokens/{token}_getRefreshToken",
           "parameters":[
              {
                 "name":"token",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/RefreshTokenInfoResponse"
                 }
              }
           }
        },
        "delete":{
           "tags":[
              "AUTH API"
           ],
           "summary":"Archive Refresh Token",
           "operationId":"delete-/oauth/v1/refresh-tokens/{token}_archiveRefreshToken",
           "parameters":[
              {
                 "name":"token",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "default": {
                "description": "Error"
              }
           }
        }
     },
     "/oauth/v1/token":{
        "post":{
           "tags":[
              "AUTH API"
           ],
           "summary":"Create Token",
           "operationId":"post-/oauth/v1/token_createToken",
           "consumes": [
            "application/x-www-form-urlencoded"
           ],
           "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },
            {
                "name": "body",
                "in": "formData",
                "schema": {
                    "properties":{
                        "grant_type":{
                           "type":"string",
                           "enum":[
                              "authorization_code",
                              "refresh_token"
                           ]
                        },
                        "code":{
                           "type":"string"
                        },
                        "redirect_uri":{
                           "type":"string"
                        },
                        "client_id":{
                           "type":"string"
                        },
                        "client_secret":{
                           "type":"string"
                        },
                        "refresh_token":{
                           "type":"string"
                        }
                     }
                }
            }
           ],
          "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/TokenResponseIF"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Record marketing Event Subscription State",
           "description":"Record a subscription state between multiple HubSpot contacts and a marketing event, using HubSpot contact ids.",
           "operationId":"post-/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create_create",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "description":"The id of the marketing event",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"subscriberState",
                 "in":"path",
                 "description":"The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "description":"The account id associated with the marketing event",
                 "required":false,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "description":"The details of the contacts to subscribe to the event. Parameters of join and left time if state is Attended.",
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventSubscriber"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/BatchResponseSubscriberVidResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Record Marketing Event Subscription State Using Contact Email",
           "description":"Record a subscription state between multiple HubSpot contacts and a marketing event, using contact email addresses. If contact is not present it will be automatically created. If you set params ",
           "operationId":"post-/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create_createByEmail",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "description":"The id of the marketing event",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"subscriberState",
                 "in":"path",
                 "description":"The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "description":"The account id associated with the marketing event",
                 "required":false,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "description":"The details of the contacts to subscribe to the event. Parameters of join and left time if state is Attended.",
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventEmailSubscriber"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/BatchResponseSubscriberEmailResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Create Marketing Event",
           "description": "Create Marketing Event",
           "operationId":"post-/marketing/v3/marketing-events/events_create",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventCreateRequestParams"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventDefaultResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/delete":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Delete Marketing Events",
           "description": "Batch Delete Marketing Events",
           "operationId":"post-/marketing/v3/marketing-events/events/delete_archiveBatch",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"body",
                 "in":"body",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventExternalUniqueIdentifier"
                 }
              }
           ],
           "responses":{
              
           }
        }
     },
     "/marketing/v3/marketing-events/events/search":{
        "get":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Search Marketing Events",
           "description": "Search Marketing Events",
           "operationId":"get-/marketing/v3/marketing-events/events/search_doSearch",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
              {
                 "name":"q",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/upsert":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Upsert Marketing Events",
           "description": "Upsert Marketing Events",
           "operationId":"post-/marketing/v3/marketing-events/events/upsert_doUpsert",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"body",
                 "in":"body",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventCreateRequestParams"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/BatchResponseMarketingEventPublicDefaultResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/{externalEventId}":{
        "get":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Get Marketing Event By Id",
           "description": "Get Marketing Event By Id",
           "operationId":"get-/marketing/v3/marketing-events/events/{externalEventId}_getById",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventPublicReadResponse"
                 }
              }
           }
        },
        "put":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Create or Update a Marketing Event",
           "description": "Create or update a marketing event",
           "operationId":"put-/marketing/v3/marketing-events/events/{externalEventId}_replace",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },       
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventCreateRequestParams"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventPublicDefaultResponse"
                 }
              }
           }
        },
        "delete":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Delete a Marketing Event",
           "description": "Delete a Marketing Event",
           "operationId":"delete-/marketing/v3/marketing-events/events/{externalEventId}_archive",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "204":{
                 "description":"No content"
              }
           }
        },
        "patch":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Update a Marketing Event",
           "description": "Update a Marketing Event",
           "operationId":"patch-/marketing/v3/marketing-events/events/{externalEventId}_update",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },       
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventUpdateRequestParams"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventPublicDefaultResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/{externalEventId}/cancel":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Cancel a Marketing Event",
           "description": "Cancel a Marketing Event",
           "operationId":"post-/marketing/v3/marketing-events/events/{externalEventId}/cancel_doCancel",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventDefaultResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/{externalEventId}/complete":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Complete a Marketing Event",
           "description": "Complete a Marketing Event",
           "operationId":"post-/marketing/v3/marketing-events/events/{externalEventId}/complete_complete",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventCompleteRequestParams"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/MarketingEventDefaultResponse"
                 }
              }
           }
        }
     },
     "/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Email Upsert a Marketing Event",
           "description": "Email Upsert a Marketing Event",
           "operationId":"post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert_doEmailUpsertById",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"subscriberState",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventEmailSubscriber"
                 },
                 "required":true
              }
           ],
           "responses":{
              
           }
        }
     },
     "/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert":{
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Upsert Marketing Event by Id",
           "description": "Upsert Marketing Event by Id",
           "operationId":"post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert_doUpsertById",
           "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
              {
                 "name":"externalEventId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"subscriberState",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"externalAccountId",
                 "in":"query",
                 "required":true,
                 "style":"form",
                 "explode":true,
                 "schema":{
                    "type":"string"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/BatchInputMarketingEventSubscriber"
                 },
                 "required":true
              }
           ],
           "responses":{
              "default": {
                "description": "Error"
              }
           }
        }
     },
     "/marketing/v3/marketing-events/{appId}/settings":{
        "get":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Get All Marketing Events Settings",
           "description": "Get All Marketing Events Settings",
           "operationId":"get-/marketing/v3/marketing-events/{appId}/settings_getAll",
           "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
              {
                 "name":"appId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"integer",
                    "format":"int32"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/EventDetailSettings"
                 }
              }
           }
        },
        "post":{
           "tags":[
              "Marketing Events API"
           ],
           "summary":"Create Marketing Events Settings",
           "description": "Create Marketing Events Settings",
           "operationId":"post-/marketing/v3/marketing-events/{appId}/settings_create",
           "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "$ref": "#/parameters/hapikey"
            },
              {
                 "name":"appId",
                 "in":"path",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"integer",
                    "format":"int32"
                 }
              },
              {
                 "name":"body",
                 "in":"body",
                 "schema":{
                    "$ref":"#/definitions/EventDetailSettingsUrl"
                 },
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/EventDetailSettings"
                 }
              }
           }
        }
     },
     "/automation/v4/actions/callbacks/complete":{
      "post":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Complete a batch of callbacks",
         "description":"Completes the given action callbacks.",
         "operationId":"post-/automation/v4/actions/callbacks/complete_completeBatch",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },       
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "description":"The result of the completed action.",
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/BatchInputCallbackCompletionBatchRequest"
               },
               "required":true
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/automation/v4/actions/callbacks/{callbackId}/complete":{
      "post":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Complete a callback",
         "description":"Completes the given action callback.",
         "operationId":"post-/automation/v4/actions/callbacks/{callbackId}/complete_complete",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },        
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "name":"callbackId",
               "in":"path",
               "description":"The ID of the target app.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/CallbackCompletionRequest"
               },
               "required":true
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/automation/v4/actions/{appId}":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get all custom workflow actions",
         "description":"Returns a list of all custom workflow actions.",
         "operationId":"get-/automation/v4/actions/{appId}_getPage",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"limit",
               "in":"query",
               "description":"Maximum number of results per page.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "name":"after",
               "in":"query",
               "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"archived",
               "in":"query",
               "description":"Whether to include archived custom actions.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"boolean",
                  "default":false
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/CollectionResponseExtensionActionDefinitionForwardPaging"
               }
            }
         }
      },
      "post":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Create new custom workflow action",
         "description":"Creates a new custom workflow action.",
         "operationId":"post-/automation/v4/actions/{appId}_create",
         "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "description":"The custom workflow action to create.",
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/ExtensionActionDefinitionInput"
               },
               "required":true
            }
         ],
         "responses":{
            "201":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ExtensionActionDefinition"
               }
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get a sigle custom workflow action",
         "description":"Returns a single custom workflow action with the specified ID.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}_getById",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"archived",
               "in":"query",
               "description":"Whether to include archived custom actions.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"boolean",
                  "default":false
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ExtensionActionDefinition"
               }
            }
         }
      },
      "delete":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Archive a single custom workflow action",
         "description":"Archives a single custom workflow action with the specified ID. Workflows that currently use this custom action will stop attempting to execute the action, and all future executions will be marked as a failure.",
         "operationId":"delete-/automation/v4/actions/{appId}/{definitionId}_archive",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      },
      "patch":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Update a custom workflow action",
         "description":"Updates a custom workflow action with new values for the specified fields.",
         "operationId":"patch-/automation/v4/actions/{appId}/{definitionId}_update",
         "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "description":"The custom workflow action fields to be updated.",
               "name":"body",
               "in":"body",
               "schema":{
                  "$ref":"#/definitions/ExtensionActionDefinitionPatch"
               },
               "required":true
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ExtensionActionDefinition"
               }
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}/functions":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get all functions associated with a custom workflow action",
         "description":"Returns a list of all functions that are associated with the given custom workflow action.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}/functions_getPage",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/CollectionResponseActionFunctionIdentifierNoPaging"
               }
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get a custom workflow action function by type",
         "description":"Returns the given function for a custom workflow action.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_getByFunctionType",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ActionFunction"
               }
            }
         }
      },
      "put":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Create or replace a custom workflow action function by type",
         "description":"Creates or replaces a function for a custom workflow action.",
         "operationId":"put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_createOrReplaceByFunctionType",
         "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "description":"The function source code. Must be valid JavaScript code.",
               "name":"body",
               "in":"body",
               "schema":{
                  "type":"string"
               },
               "required":true
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ActionFunctionIdentifier"
               }
            }
         }
      },
      "delete":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Delete a custom workflow action function by type",
         "description":"Delete a function for a custom workflow action. This will remove the function itself as well as removing the association between the function and the custom action. This can't be undone.",
         "operationId":"delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}_archiveByFunctionType",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get a custom workflow action function by id",
         "description":"Returns the given function for a custom workflow action.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_getById",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"functionId",
               "in":"path",
               "description":"The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ActionFunction"
               }
            }
         }
      },
      "put":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Create or replace a custom workflow action function by id",
         "description":"Creates or replaces a function for a custom workflow action.",
         "operationId":"put-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_createOrReplace",
         "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"functionId",
               "in":"path",
               "description":"The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "description":"The function source code. Must be valid JavaScript code.",
               "name":"body",
               "in":"body",
               "schema":{
                  "type":"string"
               },
               "required":true
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ActionFunctionIdentifier"
               }
            }
         }
      },
      "delete":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Archive a custom workflow action function by id",
         "description":"Delete a function for a custom workflow action. This will remove the function itself as well as removing the association between the function and the custom action. This can't be undone.",
         "operationId":"delete-/automation/v4/actions/{appId}/{definitionId}/functions/{functionType}/{functionId}_archive",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"functionType",
               "in":"path",
               "description":"The type of function. This determines when the function will be called.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string",
                  "enum":[
                     "PRE_ACTION_EXECUTION",
                     "PRE_FETCH_OPTIONS",
                     "POST_FETCH_OPTIONS"
                  ]
               }
            },
            {
               "name":"functionId",
               "in":"path",
               "description":"The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}/revisions":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get all revisions for a custom workflow action",
         "description":"Returns a list of revisions for a custom workflow action.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}/revisions_getPage",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"limit",
               "in":"query",
               "description":"Maximum number of results per page.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            {
               "name":"after",
               "in":"query",
               "description":"JSON property of a paged response containing more results.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/CollectionResponseActionRevisionForwardPaging"
               }
            }
         }
      }
   },
   "/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}":{
      "get":{
         "tags":[
            "Custom Workflow Actions API"
         ],
         "summary":"Get a revision for a custom worflow action",
         "description":"Returns the given version of a custom workflow action.",
         "operationId":"get-/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}_getById",
         "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
            {
               "name":"definitionId",
               "in":"path",
               "description":"The ID of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"revisionId",
               "in":"path",
               "description":"The version of the custom workflow action.",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"appId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                  "$ref":"#/definitions/ActionRevision"
               }
            }
         }
      }
   },
   "/conversations/v3/visitor-identification/tokens/create":{
    "post":{
       "tags":[
          "Visitor Identification API"
       ],
       "summary":"Generate a new visitor identification token",
       "description":"Generates a new visitor identification token. This token will be unique every time this endpoint is called, even if called with the same email address. This token is temporary and will expire after 12 hours",
       "operationId":"post-/visitor-identification/v3/tokens/create_generateToken",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/IdentificationTokenGenerationRequest"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/IdentificationTokenResponse"
             }
          }
       }
    }
 },
 "/crm/v3/extensions/cards/sample-response": {
  "get": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Get sample card detail response",
  "description": "Returns an example card detail response. This is the payload with displayed details for a card that will be shown to a user. An app should send this in response to the data fetch request.",
  "operationId": "get-/crm/v3/extensions/cards/sample-response_getCardsSampleResponse",
  "responses": {
  "200": {
  "description": "successful operation",
  "schema": {
      "$ref": "#/definitions/IntegratorCardPayloadResponse"
      }
  }
  }
  }
  },
  "/crm/v3/extensions/cards/{appId}": {
  "get": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Get all cards",
  "description": "Returns a list of cards for a given app.",
  "operationId": "get-/crm/v3/extensions/cards/{appId}_getAll",
  "parameters": [
   {
      "$ref": "#/parameters/hapikey"
   },
  {
  "name": "appId",
  "in": "path",
  "description": "The ID of the target app.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "integer",
  "format": "int32"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "successful operation",
  "schema": {
      "$ref": "#/definitions/CardListResponse"
      }
  }
  }
  },
  "post": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Create a new card",
  "description": "Defines a new card that will become active on an account when this app is installed.",
  "operationId": "post-/crm/v3/extensions/cards/{appId}_create",
  "parameters": [
   {
      "$ref": "#/parameters/contentType"
   },
   {
      "$ref": "#/parameters/hapikey"
   },
  {
  "name": "appId",
  "in": "path",
  "description": "The ID of the target app.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "integer",
  "format": "int32"
  }
  },
  {
  "description": "The new card definition.",
  "name": "body",
  "in": "body",
  "schema": {
  "$ref": "#/definitions/CardCreateRequest"
  },
  "required": true
  }
],
  "responses": {
  "201": {
  "description": "successful operation",
  "schema": {
      "$ref": "#/definitions/CardResponse"
      }
  }
  }
  }
  },
  "/crm/v3/extensions/cards/{appId}/{cardId}": {
  "get": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Get a card.",
  "description": "Returns the definition for a card with the given ID.",
  "operationId": "get-/crm/v3/extensions/cards/{appId}/{cardId}_getById",
  "parameters": [
   {
      "$ref": "#/parameters/hapikey"
   },
  {
  "name": "appId",
  "in": "path",
  "description": "The ID of the target app.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "integer",
  "format": "int32"
  }
  },
  {
  "name": "cardId",
  "in": "path",
  "description": "The ID of the target card.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "successful operation",
  "schema": {
      "$ref": "#/definitions/CardResponse"
      }
  }
  }
  },
  "delete": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Delete a card",
  "description": "Permanently deletes a card definition with the given ID. Once deleted, data fetch requests for this card will no longer be sent to your service. This can't be undone.",
  "operationId": "delete-/crm/v3/extensions/cards/{appId}/{cardId}_archive",
  "parameters": [
   {
      "$ref": "#/parameters/hapikey"
   },
  {
  "name": "appId",
  "in": "path",
  "description": "The ID of the target app.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "integer",
  "format": "int32"
  }
  },
  {
  "name": "cardId",
  "in": "path",
  "description": "The ID of the card to delete.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "204": {
  "description": "No content"
  }
  }
  },
  "patch": {
  "tags": [
  "CRM Cards API"
  ],
  "summary": "Update a card",
  "description": "Update a card definition with new details.",
  "operationId": "patch-/crm/v3/extensions/cards/{appId}/{cardId}_update",
  "parameters": [
   {
      "$ref": "#/parameters/contentType"
   },
   {
      "$ref": "#/parameters/hapikey"
   },
  {
  "name": "appId",
  "in": "path",
  "description": "The ID of the target app.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "integer",
  "format": "int32"
  }
  },
  {
  "name": "cardId",
  "in": "path",
  "description": "The ID of the card to update.",
  "required": true,
  "style": "simple",
  "explode": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "description": "Card definition fields to be updated.",
  "name": "body",
  "in": "body",
  "schema": {
  "$ref": "#/definitions/CardPatchRequest"
  },
  "required": true
  }
],
  "responses": {
  "200": {
  "description": "successful operation",
  "schema": {
      "$ref": "#/definitions/CardResponse"
      }
  }
  }
  }
  },
  "/crm/v3/objects/products":{
    "get":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"List Products",
       "description":"Read a page of products. Control what is returned via the `properties` query param.",
       "operationId":"get-/crm/v3/objects/products_getPage",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },
          {
             "name":"limit",
             "in":"query",
             "description":"The maximum number of results to display per page.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"integer",
                "format":"int32",
                "default":10
             }
          },
          {
             "name":"after",
             "in":"query",
             "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"properties",
             "in":"query",
             "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"propertiesWithHistory",
             "in":"query",
             "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"associations",
             "in":"query",
             "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
             }
          }
       }
    },
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Create a Product",
       "description":"Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.",
       "operationId":"post-/crm/v3/objects/products_create",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/SimplePublicObjectInput"
             },
             "required":true
          }
       ],
       "responses":{
          "201":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/batch/archive":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Archive a batch of products by ID",
       "operationId":"post-/crm/v3/objects/products/batch/archive_archive",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/BatchInputSimplePublicObjectId"
             },
             "required":true
          }
       ],
       "responses":{
          "204":{
             "description":"No content"
          }
       }
    }
 },
 "/crm/v3/objects/products/batch/create":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Create a batch of products",
       "operationId":"post-/crm/v3/objects/products/batch/create_create",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
             },
             "required":true
          }
       ],
       "responses":{
          "201":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/batch/read":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Read a batch of products by internal ID, or unique property values",
       "operationId":"post-/crm/v3/objects/products/batch/read_read",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },       
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/batch/update":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Update a batch of products",
       "operationId":"post-/crm/v3/objects/products/batch/update_update",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/merge":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Merge two products with same type",
       "operationId":"post-/crm/v3/objects/products/merge_merge",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/PublicMergeInput"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/search":{
    "post":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Search Product",
       "operationId":"post-/crm/v3/objects/products/search_doSearch",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/PublicObjectSearchRequest"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
             }
          }
       }
    }
 },
 "/crm/v3/objects/products/{productId}":{
    "get":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Read Product By Id",
       "description":"Read an Object identified by productId.",
       "operationId":"get-/crm/v3/objects/products/{productId}_getById",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },
          {
             "name":"productId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"properties",
             "in":"query",
             "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"propertiesWithHistory",
             "in":"query",
             "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"associations",
             "in":"query",
             "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          },
          {
             "name":"idProperty",
             "in":"query",
             "description":"The name of a property whose values are unique for this object type",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObjectWithAssociations"
             }
          }
       }
    },
    "delete":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Archive Product",
       "description":"Move an Object identified by productId to the recycling bin.",
       "operationId":"delete-/crm/v3/objects/products/{productId}_archive",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },
          {
             "name":"productId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          }
       ],
       "responses":{
          "204":{
             "description":"No content"
          }
       }
    },
    "patch":{
       "tags":[
          "CRM Products API"
       ],
       "summary":"Update Product",
       "description":"Perform a partial update of an Object identified by productId.",
       "operationId":"patch-/crm/v3/objects/products/{productId}_update",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },       
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"productId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"idProperty",
             "in":"query",
             "description":"The name of a property whose values are unique for this object type",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/SimplePublicObjectInput"
             },
             "required":true
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
          }
       }
    }
 }, 
  "/crm/v3/objects/companies": {
    "get": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "List Companies",
    "description": "Read a page of companies. Control what is returned via the properties query param.",
    "operationId": "get-/crm/v3/objects/companies_getPage",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },
    {
    "name": "limit",
    "in": "query",
    "description": "The maximum number of results to display per page.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 10
    }
    },
    {
    "name": "after",
    "in": "query",
    "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "properties",
    "in": "query",
    "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "propertiesWithHistory",
    "in": "query",
    "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "associations",
    "in": "query",
    "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "archived",
    "in": "query",
    "description": "Whether to return only results that have been archived.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "boolean",
    "default": false
    }
    }
    ],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
        }
    }
    }
    },
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Create Company With Given Properties",
    "description": "Create a company with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard companies is provided.",
    "operationId": "post-/crm/v3/objects/companies_create",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/SimplePublicObjectInput"
    },
    "required": true
    }
],
    "responses": {
    "201": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/SimplePublicObject"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/batch/archive": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Archive a batch of companies by ID",
    "operationId": "post-/crm/v3/objects/companies/batch/archive_archive",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },       
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/BatchInputSimplePublicObjectId"
    },
    "required": true
    }
],
    "responses": {
    "204": {
    "description": "No content"
    }
    }
    }
    },
    "/crm/v3/objects/companies/batch/create": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Create a batch of companies",
    "operationId": "post-/crm/v3/objects/companies/batch/create_create",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/BatchInputSimplePublicObjectInput"
    },
    "required": true
    }
],
    "responses": {
    "201": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObject"
        }
    },
    "207": {
    "description": "multiple statuses",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/batch/read": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Read a batch of companies by internal ID, or unique property values",
    "operationId": "post-/crm/v3/objects/companies/batch/read_read",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },       
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "archived",
    "in": "query",
    "description": "Whether to return only results that have been archived.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "boolean",
    "default": false
    }
    },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/BatchReadInputSimplePublicObjectId"
    },
    "required": true
    }
],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObject"
        }
    },
    "207": {
    "description": "multiple statuses",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/batch/update": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Update a batch of companies",
    "operationId": "post-/crm/v3/objects/companies/batch/update_update",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/BatchInputSimplePublicObjectBatchInput"
    },
    "required": true
    }
],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObject"
        }
    },
    "207": {
    "description": "multiple statuses",
    "schema": {
        "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/merge": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Merge two companies with same type",
    "operationId": "post-/crm/v3/objects/companies/merge_merge",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/PublicMergeInput"
    },
    "required": true
    }
],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/SimplePublicObject"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/search": {
    "post": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Search Company",
    "operationId": "post-/crm/v3/objects/companies/search_doSearch",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/PublicObjectSearchRequest"
    },
    "required": true
    }
],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
        }
    }
    }
    }
    },
    "/crm/v3/objects/companies/{companyId}": {
    "get": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Get Company by Id",
    "description": "Read an Object identified by companyId.",
    "operationId": "get-/crm/v3/objects/companies/{companyId}_getById",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },
    {
    "name": "companyId",
    "in": "path",
    "required": true,
    "style": "simple",
    "explode": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "properties",
    "in": "query",
    "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "propertiesWithHistory",
    "in": "query",
    "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "associations",
    "in": "query",
    "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    },
    {
    "name": "archived",
    "in": "query",
    "description": "Whether to return only results that have been archived.",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "boolean",
    "default": false
    }
    },
    {
    "name": "idProperty",
    "in": "query",
    "description": "The name of a property whose values are unique for this object type",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/SimplePublicObjectWithAssociations"
        }
    }
    }
    },
    "delete": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Archive a Company",
    "description": "Move an Object identified by `{companyId}` to the recycling bin.",
    "operationId": "delete-/crm/v3/objects/companies/{companyId}_archive",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },
    {
    "name": "companyId",
    "in": "path",
    "required": true,
    "style": "simple",
    "explode": false,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "204": {
    "description": "No content"
    }
    }
    },
    "patch": {
    "tags": [
    "CRM Companies API"
    ],
    "summary": "Update a Company",
    "description": "Perform a partial update of an Object identified by companyId.",
    "operationId": "patch-/crm/v3/objects/companies/{companyId}_update",
    "parameters": [
      {
         "$ref": "#/parameters/authorization"
      },        
      {
         "$ref": "#/parameters/contentType"
      },
    {
    "name": "companyId",
    "in": "path",
    "required": true,
    "style": "simple",
    "explode": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "idProperty",
    "in": "query",
    "description": "The name of a property whose values are unique for this object type",
    "required": false,
    "style": "form",
    "explode": true,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "body",
    "in": "body",
    "schema": {
    "$ref": "#/definitions/SimplePublicObjectInput"
    },
    "required": true
    }
],
    "responses": {
    "200": {
    "description": "successful operation",
    "schema": {
        "$ref": "#/definitions/SimplePublicObject"
        }
    }
    }
    }
    },    
    "/crm/v3/extensions/calling/{appId}/settings": {
      "get": {
      "tags": [
      "CRM Calling Extensions API"
      ],
      "summary": "Get calling settings",
      "description": "Returns the calling extension settings configured for your app.",
      "operationId": "get-/crm/v3/extensions/calling/{appId}/settings_getById",
      "parameters": [
         {
            "$ref": "#/parameters/hapikey"
         },
      {
      "name": "appId",
      "in": "path",
      "description": "The ID of the target app.",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "integer",
      "format": "int32"
      }
      }
      ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/SettingsResponse"
          }
      }
      }
      },
      "post": {
      "tags": [
      "CRM Calling Extensions API"
      ],
      "summary": "Configure a calling extension",
      "description": "Used to set the menu label, target iframe URL, and dimensions for your calling extension.",
      "operationId": "post-/crm/v3/extensions/calling/{appId}/settings_create",
      "parameters": [
         {
            "$ref": "#/parameters/contentType"
         },
         {
            "$ref": "#/parameters/hapikey"
         },
      {
      "name": "appId",
      "in": "path",
      "description": "The ID of the target app.",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "integer",
      "format": "int32"
      }
      },
      {
      "description": "Settings state to create with.",
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/SettingsRequest"
      },
      "required": true
      }
  ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/SettingsResponse"
          }
      }
      }
      },
      "delete": {
      "tags": [
      "CRM Calling Extensions API"
      ],
      "summary": "Delete calling settings",
      "description": "Deletes this calling extension. This will remove your service as an option for all connected accounts.",
      "operationId": "delete-/crm/v3/extensions/calling/{appId}/settings_archive",
      "parameters": [
         {
            "$ref": "#/parameters/hapikey"
         },
      {
      "name": "appId",
      "in": "path",
      "description": "The ID of the target app.",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "integer",
      "format": "int32"
      }
      }
      ],
      "responses": {
      "204": {
      "description": "No content"
      }
      }
      },
      "patch": {
      "tags": [
      "CRM Calling Extensions API"
      ],
      "summary": "Update calling settings",
      "description": "Updates existing calling extension settings.",
      "operationId": "patch-/crm/v3/extensions/calling/{appId}/settings_update",
      "parameters": [
         {
            "$ref": "#/parameters/contentType"
         },
         {
            "$ref": "#/parameters/hapikey"
         },
      {
      "name": "appId",
      "in": "path",
      "description": "The ID of the target app.",
      "required": true,
      "style": "simple",
      "explode": false,
      "schema": {
      "type": "integer",
      "format": "int32"
      }
      },
      {
      "description": "Updated details for the settings.",
      "name": "body",
      "in": "body",
      "schema": {
      "$ref": "#/definitions/SettingsPatchRequest"
      },
      "required": true
      }
  ],
      "responses": {
      "200": {
      "description": "successful operation",
      "schema": {
          "$ref": "#/definitions/SettingsResponse"
          }
      }
      }
      }
      },
      "/crm/v3/imports/": {
        "get": {
        "tags": [
        "CRM Imports API"
        ],
        "summary": "Get active imports",
        "description": "Returns a paged list of active imports for this account.",
        "operationId": "get-/crm/v3/imports/_getPage",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "after",
        "in": "query",
        "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "before",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "limit",
        "in": "query",
        "description": "The maximum number of results to display per page.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "integer",
        "format": "int32"
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/CollectionResponsePublicImportResponse"
            }
        }
        }
        },
        "post": {
        "tags": [
        "CRM Imports API"
        ],
        "summary": "Start a new import",
        "description": "Begins importing data from the specified file resources. This uploads the corresponding file and uses the import request object to convert rows in the files to objects.",
        "operationId": "post-/crm/v3/imports/_create",
        "parameters": [
        {
        "name": "body",
        "in": "body",
        "schema": {
        "properties": {
        "files": {
        "type": "string",
        "description": "A list of files containing the data to import",
        "format": "binary"
        },
        "importRequest": {
        "type": "string",
        "description": "JSON formatted metadata about the import. This includes a name for the import and the column mappings for each file. See the overview tab for more on the required format."
        }
        }
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/PublicImportResponse"
            }
        }
        }
        }
        },
        "/crm/v3/imports/{importId}": {
        "get": {
        "tags": [
        "CRM Imports API"
        ],
        "summary": "Get the information on any import",
        "description": "A complete summary of an import record, including any updates.",
        "operationId": "get-/crm/v3/imports/{importId}_getById",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "importId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "integer",
        "format": "int64"
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/PublicImportResponse"
            }
        }
        }
        }
        },
        "/crm/v3/imports/{importId}/cancel": {
        "post": {
        "tags": [
        "CRM Imports API"
        ],
        "summary": "Cancel an active import",
        "description": "This allows a developer to cancel an active import.",
        "operationId": "post-/crm/v3/imports/{importId}/cancel_cancel",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "importId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "integer",
        "format": "int64"
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/ActionResponse"
            }
        }
        }
        }
        },
        "/crm/v3/imports/{importId}/errors": {
        "get": {
        "tags": [
        "CRM Imports API"
        ],
        "summary": "Get Import Errors",
        "operationId": "get-/crm/v3/imports/{importId}/errors_getErrors",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "after",
        "in": "query",
        "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "limit",
        "in": "query",
        "description": "The maximum number of results to display per page.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "integer",
        "format": "int32"
        }
        },
        {
        "name": "importId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "integer",
        "format": "int64"
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/CollectionResponsePublicImportErrorForwardPaging"
            }
        }
        }
        }
        },
        "/crm/v3/schemas": {
          "get": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Get all schemas",
          "description": "Returns all object schemas that have been defined for your account.",
          "operationId": "get-/crm-object-schemas/v3/schemas_getAll",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },
          {
          "name": "archived",
          "in": "query",
          "description": "Whether to return only results that have been archived.",
          "required": false,
          "style": "form",
          "explode": true,
          "schema": {
          "type": "boolean",
          "default": false
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
              "$ref": "#/definitions/CollectionResponseObjectSchemaNoPaging"
          }
          }
          }
          },
          "post": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Create a new schema",
          "description": "Define a new object schema, along with custom properties and associations. The entire object schema, including its object type ID, properties, and associations will be returned in the response.",
          "operationId": "post-/crm-object-schemas/v3/schemas_create",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },
          {
          "description": "Object schema definition, including properties and associations.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/ObjectSchemaEgg"
          },
          "required": true
          }
          ],
          "responses": {
          "201": {
          "description": "successful operation",
          "schema": {
              "$ref": "#/definitions/ObjectSchema"
              }
          }
          }
          }
          },
          "/crm/v3/schemas/{objectType}": {
          "get": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Get an existing schema",
          "description": "Returns an existing object schema.",
          "operationId": "get-/crm-object-schemas/v3/schemas/{objectType}_getById",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },
          {
          "name": "objectType",
          "in": "path",
          "description": "Fully qualified name or object type ID of your schema.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
              "$ref": "#/definitions/ObjectSchema"
          }
          }
          }
          },
          "delete": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Delete a schema",
          "description": "Deletes a schema. Any existing records of this schema must be deleted first. Otherwise this call will fail.",
          "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}_archive",
          "parameters": [
          {
          "name": "objectType",
          "in": "path",
          "description": "Fully qualified name or object type ID of your schema.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "archived",
          "in": "query",
          "description": "Whether to return only results that have been archived.",
          "required": false,
          "style": "form",
          "explode": true,
          "schema": {
          "type": "boolean",
          "default": false
          }
          }
          ],
          "responses": {
          "204": {
          "description": "No content"
          }
          }
          },
          "patch": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Update a schema",
          "description": "Update the details for an existing object schema.",
          "operationId": "patch-/crm-object-schemas/v3/schemas/{objectType}_update",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },
          {
          "name": "objectType",
          "in": "path",
          "description": "Fully qualified name or object type ID of your schema.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "description": "Attributes to update in your schema.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/ObjectTypeDefinitionPatch"
          },
          "required": true
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
              "$ref": "#/definitions/ObjectTypeDefinition"
              }
          }
          }
          }
          },
          "/crm/v3/schemas/{objectType}/associations": {
          "post": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Create Association for Schema",
          "description": "Defines a new association between the primary schema's object type and other object types.",
          "operationId": "post-/crm-object-schemas/v3/schemas/{objectType}/associations_createAssociation",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },
          {
          "name": "objectType",
          "in": "path",
          "description": "Fully qualified name or object type ID of your schema.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "description": "Attributes that define the association.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/AssociationDefinitionEgg"
          },
          "required": true
          }
          ],
          "responses": {
          "201": {
          "description": "successful operation",
          "schema": {
              "$ref": "#/definitions/AssociationDefinition"
              }
          }
          }
          }
          },
          "/crm/v3/schemas/{objectType}/associations/{associationIdentifier}": {
          "delete": {
          "tags": [
          "CRM Schemas API"
          ],
          "summary": "Remove Association fom Schema",
          "description": "Removes an existing association from a schema.",
          "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}/associations/{associationIdentifier}_archiveAssociation",
          "parameters": [
          {
          "name": "objectType",
          "in": "path",
          "description": "Fully qualified name or object type ID of your schema.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "associationIdentifier",
          "in": "path",
          "description": "Unique ID of the association to remove.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          }
          ],
          "responses": {
          "204": {
          "description": "No content"
          }
          }
          }
          },
          "/crm/v3/schemas/{objectType}/purge": {
            "delete": {
            "tags": [
            "CRM Schemas API"
            ],
            "summary": "Archive an Purged Object Schema",
            "description": "delets a purged object schema.",
            "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}/purge",
            "parameters": [
            {
            "name": "objectType",
            "in": "path",
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
            "type": "string"
            }
            }
            ],
            "responses": {
            "204": {
            "description": "No content"
            }
            }
            }
        },
          "/crm/v3/properties/{objectType}":{
            "get":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Read all properties",
               "description":"Read all existing properties for the specified object type and HubSpot account.",
               "operationId":"get-/crm/v3/properties/{objectType}_getAll",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"archived",
                     "in":"query",
                     "description":"Whether to return only results that have been archived.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"boolean",
                        "default":false
                     }
                  },
                  {
                     "name": "properties",
                     "in": "header",
                     "type": "string"
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/CollectionResponseProperty"
                   }
                  }
               }
            },
            "post":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Create a property",
               "description":"Create and return a copy of a new property for the specified object type.",
               "operationId":"post-/crm/v3/properties/{objectType}_create",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PropertyCreate"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "201":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/Property"
                   }
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/batch/archive":{
            "post":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Archive a batch of properties",
               "description":"Archive a provided list of properties. This method will return a 204 No Content response on success regardless of the initial state of the property (e.g. active, already archived, non-existent).",
               "operationId":"post-/crm/v3/properties/{objectType}/batch/archive_archive",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchInputPropertyName"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/batch/create":{
            "post":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Create a batch of properties",
               "description":"Create a batch of properties using the same rules as when creating an individual property.",
               "operationId":"post-/crm/v3/properties/{objectType}/batch/create_create",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchInputPropertyCreate"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "201":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseProperty"
                   }
                  },
                  "207":{
                     "description":"multiple statuses",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseProperty"
                   }
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/batch/read":{
            "post":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Read a batch of properties",
               "description":"Read a provided list of properties.",
               "operationId":"post-/crm/v3/properties/{objectType}/batch/read_read",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchReadInputPropertyName"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseProperty"
                   }
                  },
                  "207":{
                     "description":"multiple statuses",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseProperty"
                   }
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/groups":{
            "get":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Read all property groups",
               "description":"Read all existing property groups for the specified object type and HubSpot account.",
               "operationId":"get-/crm/v3/properties/{objectType}/groups_getAll",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/CollectionResponsePropertyGroup"
                   }
                  }
               }
            },
            "post":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Create a property group",
               "description":"Create and return a copy of a new property group.",
               "operationId":"post-/crm/v3/properties/{objectType}/groups_create",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PropertyGroupCreate"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "201":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/PropertyGroup"
                   }
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/groups/{groupName}":{
            "get":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Read a property group",
               "description":"Read a property group identified by {groupName}.",
               "operationId":"get-/crm/v3/properties/{objectType}/groups/{groupName}_getByName",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"groupName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/PropertyGroup"
                   }
                  }
               }
            },
            "delete":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Archive a property group",
               "description":"Move a property group identified by {groupName} to the recycling bin.",
               "operationId":"delete-/crm/v3/properties/{objectType}/groups/{groupName}_archive",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"groupName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  }
               ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            },
            "patch":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Update a property group",
               "description":"Perform a partial update of a property group identified by {groupName}. Provided fields will be overwritten.",
               "operationId":"patch-/crm/v3/properties/{objectType}/groups/{groupName}_update",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"groupName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PropertyGroupUpdate"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/PropertyGroup"
                   }
                  }
               }
            }
         },
         "/crm/v3/properties/{objectType}/{propertyName}":{
            "get":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Read a property",
               "description":"Read a property identified by {propertyName}.",
               "operationId":"get-/crm/v3/properties/{objectType}/{propertyName}_getByName",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"propertyName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"archived",
                     "in":"query",
                     "description":"Whether to return only results that have been archived.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"boolean",
                        "default":false
                     }
                  },
                  {
                     "name": "properties",
                     "in": "header",
                     "type": "string"
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/Property"
                   }
                  }
               }
            },
            "delete":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Archive a property",
               "description":"Move a property identified by {propertyName} to the recycling bin.",
               "operationId":"delete-/crm/v3/properties/{objectType}/{propertyName}_archive",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"propertyName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  }
               ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            },
            "patch":{
               "tags":[
                  "CRM Properties API"
               ],
               "summary":"Update a property",
               "description":"Perform a partial update of a property identified by {propertyName}. Provided fields will be overwritten.",
               "operationId":"patch-/crm/v3/properties/{objectType}/{propertyName}_update",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },        
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"objectType",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"propertyName",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PropertyUpdate"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/Property"
                   }
                  }
               }
            }
         },
         "/crm/v3/owners/":{
          "get":{
             "tags":[
                "CRM Owners API"
             ],
             "summary":"Get a page of owners",
             "operationId":"get-/crm/v3/owners/_getPage",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"email",
                   "in":"query",
                   "description":"Filter by email address (optional)",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"after",
                   "in":"query",
                   "description":"The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"limit",
                   "in":"query",
                   "description":"The maximum number of results to display per page.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"integer",
                      "format":"int32",
                      "default":100
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/CollectionResponsePublicOwnerForwardPaging"
                   }
                }
             }
          }
       },
       "/crm/v3/owners/{ownerId}":{
          "get":{
             "tags":[
                "CRM Owners API"
             ],
             "summary":"Read an owner by given id or userId",
             "operationId":"get-/crm/v3/owners/{ownerId}_getById",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"ownerId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"integer",
                      "format":"int32"
                   }
                },
                {
                   "name":"idProperty",
                   "in":"query",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string",
                      "enum":[
                         "id",
                         "userId"
                      ],
                      "default":"id"
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/PublicOwner"
                   }
                }
             }
          }
       },
       "/crm/v3/objects/quotes": {
        "get": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Read a page of quote",
        "description": "Read a page of quotes. Control what is returned via the `properties query param.",
        "operationId": "get-/crm/v3/objects/quotes_getPage",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "limit",
        "in": "query",
        "description": "The maximum number of results to display per page.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "integer",
        "format": "int32",
        "default": 10
        }
        },
        {
        "name": "after",
        "in": "query",
        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "properties",
        "in": "query",
        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "propertiesWithHistory",
        "in": "query",
        "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "associations",
        "in": "query",
        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "archived",
        "in": "query",
        "description": "Whether to return only results that have been archived.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "boolean",
        "default": false
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
            }
        }
        }
        },
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Create a quote with the given properties",
        "description": "Create a quote with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard quotes is provided.",
        "operationId": "post-/crm/v3/objects/quotes_create",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/SimplePublicObjectInput"
        },
        "required": true
        }
    ],
        "responses": {
        "201": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/SimplePublicObject"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/batch/archive": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Archive a batch of quotes by ID",
        "operationId": "post-/crm/v3/objects/quotes/batch/archive_archive",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/BatchInputSimplePublicObjectId"
        },
        "required": true
        }
    ],
        "responses": {
        "204": {
        "description": "No content"
        }
        }
        }
        },
        "/crm/v3/objects/quotes/batch/create": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Create a batch of quotes",
        "operationId": "post-/crm/v3/objects/quotes/batch/create_create",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/BatchInputSimplePublicObjectInput"
        },
        "required": true
        }
    ],
        "responses": {
        "201": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObject"
            }
        },
        "207": {
        "description": "multiple statuses",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/batch/read": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Read a batch of quotes",
        "description": "Read a batch of quotes by internal ID, or unique property values",
        "operationId": "post-/crm/v3/objects/quotes/batch/read_read",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },        
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "archived",
        "in": "query",
        "description": "Whether to return only results that have been archived.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "boolean",
        "default": false
        }
        },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/BatchReadInputSimplePublicObjectId"
        },
        "required": true
        }
    ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObject"
            }
        },
        "207": {
        "description": "multiple statuses",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/batch/update": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Update a batch of quotes",
        "description": "Update a batch of quotes",
        "operationId": "post-/crm/v3/objects/quotes/batch/update_update",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/BatchInputSimplePublicObjectBatchInput"
        },
        "required": true
        }
    ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObject"
            }
        },
        "207": {
        "description": "multiple statuses",
        "schema": {
            "$ref": "#/definitions/BatchResponseSimplePublicObjectWithErrors"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/merge": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Merge two quotes with same type",
        "description": "Merge two quotes with same type",
        "operationId": "post-/crm/v3/objects/quotes/merge_merge",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/PublicMergeInput"
        },
        "required": true
        }
    ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/SimplePublicObject"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/search": {
        "post": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Search quote",
        "description": "Search quote",
        "operationId": "post-/crm/v3/objects/quotes/search_doSearch",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/PublicObjectSearchRequest"
        },
        "required": true
        }
    ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
            }
        }
        }
        }
        },
        "/crm/v3/objects/quotes/{quoteId}": {
        "get": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Read a quote",
        "description": "Read an Object identified by quoteId}. quoteId refers to the internal object ID by default, or optionally any unique property value as specified by the idProperty query param. Control what is returned via the properties query param.",
        "operationId": "get-/crm/v3/objects/quotes/{quoteId}_getById",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "quoteId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "properties",
        "in": "query",
        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "propertiesWithHistory",
        "in": "query",
        "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "associations",
        "in": "query",
        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "array",
        "items": {
        "type": "string"
        }
        }
        },
        {
        "name": "archived",
        "in": "query",
        "description": "Whether to return only results that have been archived.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "boolean",
        "default": false
        }
        },
        {
        "name": "idProperty",
        "in": "query",
        "description": "The name of a property whose values are unique for this object type",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        }
        ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/SimplePublicObjectWithAssociations"
            }
        }
        }
        },
        "delete": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Archive a quote",
        "description": "Move an Object identified by quoteId to the recycling bin.",
        "operationId": "delete-/crm/v3/objects/quotes/{quoteId}_archive",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },
        {
        "name": "quoteId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "string"
        }
        }
        ],
        "responses": {
        "204": {
        "description": "No content"
        }
        }
        },
        "patch": {
        "tags": [
        "CRM Quotes API"
        ],
        "summary": "Update a quote",
        "description": "Perform a partial update of an Object identified by quoteId. quoteId refers to the internal object ID by default, or optionally any unique property value as specified by the idProperty query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
        "operationId": "patch-/crm/v3/objects/quotes/{quoteId}_update",
        "parameters": [
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
        {
        "name": "quoteId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "idProperty",
        "in": "query",
        "description": "The name of a property whose values are unique for this object type",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
        "type": "string"
        }
        },
        {
        "name": "body",
        "in": "body",
        "schema": {
        "$ref": "#/definitions/SimplePublicObjectInput"
        },
        "required": true
        }
    ],
        "responses": {
        "200": {
        "description": "successful operation",
        "schema": {
            "$ref": "#/definitions/SimplePublicObject"
            }
        }
        }
        }
        },        
        "/crm/v3/objects/deals":{
          "get":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Read a page of deals",
             "description":"Read a page of deals. Control what is returned via the `properties` query param.",
             "operationId":"get-/crm/v3/objects/deals_getPage",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"limit",
                   "in":"query",
                   "description":"The maximum number of results to display per page.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"integer",
                      "format":"int32",
                      "default":10
                   }
                },
                {
                   "name":"after",
                   "in":"query",
                   "description":"The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"properties",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"propertiesWithHistory",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"associations",
                   "in":"query",
                   "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                   }
                }
             }
          },
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Create a deal with the given properties",
             "description":"Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.",
             "operationId":"post-/crm/v3/objects/deals_create",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/SimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "201":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/batch/archive":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Archive a batch of deals by ID",
             "operationId":"post-/crm/v3/objects/deals/batch/archive_archive",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectId"
                },
                "required":true
             }
            ],
             "responses":{
                "204":{
                   "description":"No content"
                }
             }
          }
       },
       "/crm/v3/objects/deals/batch/create":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Create a batch of deals",
             "description": "Create a batch of deals",
             "operationId":"post-/crm/v3/objects/deals/batch/create_create",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "201":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/batch/read":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Read a batch of deals by internal ID, or unique property values",
             "description": "Read a batch of deals by internal ID, or unique property values",
             "operationId":"post-/crm/v3/objects/deals/batch/read_read",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/batch/update":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Update a batch of deals",
             "operationId":"post-/crm/v3/objects/deals/batch/update_update",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/merge":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Merge two deals with same type",
             "operationId":"post-/crm/v3/objects/deals/merge_merge",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/PublicMergeInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/search":{
          "post":{
             "tags":[
                "CRM Deals API"
             ],
             "summary": "Search deal",
             "description": "Search deal",
             "operationId":"post-/crm/v3/objects/deals/search_doSearch",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/PublicObjectSearchRequest"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/deals/{dealId}":{
          "get":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Read a deal",
             "description":"Read an Object identified by dealId. dealId refers to the internal object ID by default, or optionally any unique property value as specified by the idProperty query param. Control what is returned via the properties query param.",
             "operationId":"get-/crm/v3/objects/deals/{dealId}_getById",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
                {
                   "name":"dealId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"properties",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"propertiesWithHistory",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"associations",
                   "in":"query",
                   "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                },
                {
                   "name":"idProperty",
                   "in":"query",
                   "description":"The name of a property whose values are unique for this object type",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObjectWithAssociations"
                 }
                }
             }
          },
          "delete":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Archive a deal",
             "description":"Move an Object identified by dealId to the recycling bin.",
             "operationId":"delete-/crm/v3/objects/deals/{dealId}_archive",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
                {
                   "name":"dealId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "204":{
                   "description":"No content"
                }
             }
          },
          "patch":{
             "tags":[
                "CRM Deals API"
             ],
             "summary":"Update a deal",
             "description":"Perform a partial update of an Object identified by dealId. dealId refers to the internal object ID by default, or optionally any unique property value as specified by the idProperty query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
             "operationId":"patch-/crm/v3/objects/deals/{dealId}_update",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"dealId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"idProperty",
                   "in":"query",
                   "description":"The name of a property whose values are unique for this object type",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/SimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },       
        "/crm/v3/timeline/events": {
          "post": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Create a single event",
          "description": "Creates an instance of a timeline event based on an event template. Once created, this event is immutable on the object timeline and cannot be modified. If the event template was configured to update object properties via objectPropertyName, this call will also attempt to updates those properties, or add them if they don't exist.",
          "operationId": "post-/integrators/timeline/v3/events_create",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
          {
           "name": "body",
           "in": "body",
          "description": "The timeline event definition.",
          "schema": {
           "$ref": "#/definitions/TimelineEvent"
           },
          "required": true
          }
       ],
          "responses": {
          "201": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventResponse"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/events/batch/create": {
          "post": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Creates multiple events",
          "description": "Creates multiple instances of timeline events based on an event template. Once created, these event are immutable on the object timeline and cannot be modified. If the event template was configured to update object properties via `objectPropertyName`, this call will also attempt to updates those properties, or add them if they don't exist.",
          "operationId": "post-/integrators/timeline/v3/events/batch/create_createBatch",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
          {
          "description": "The timeline event definition.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/BatchInputTimelineEvent"
          },
          "required": true
          }
       ],
          "responses": {
          "201": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/BatchResponseTimelineEventResponse"
           }
          },
          "207": {
          "description": "multiple statuses",
          "schema": {
           "$ref": "#/definitions/BatchResponseTimelineEventResponseWithErrors"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/events/{eventTemplateId}/{eventId}": {
          "get": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Gets the event",
          "description": "This returns the previously created event. It contains all existing info for the event, but not necessarily the CRM object.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}_getById",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "eventId",
          "in": "path",
          "description": "The event ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventResponse"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/events/{eventTemplateId}/{eventId}/detail": {
          "get": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Gets the detailTemplate as rendered",
          "description": "This will take the `detailTemplate` from the event template and return an object rendering the specified event. If the template references `extraData` that isn't found in the event, it will be ignored and we'll render without it.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail_getDetailById",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "eventId",
          "in": "path",
          "description": "The event ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/EventDetail"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/events/{eventTemplateId}/{eventId}/render": {
          "get": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Renders the header or detail as HTML",
          "description": "This will take either the `headerTemplate` or `detailTemplate` from the event template and render for the specified event as HTML. If the template references `extraData` that isn't found in the event, it will be ignored and we'll render without it.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/render_getRenderById",
          "parameters": [
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name": "accept",
               "in": "header",
               "type": "string"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "eventId",
          "in": "path",
          "description": "The event ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "detail",
          "in": "query",
          "description": "Set to 'true', we want to render the `detailTemplate` instead of the `headerTemplate`.",
          "required": false,
          "style": "form",
          "explode": true,
          "schema": {
          "type": "boolean"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
          "type": "string"
          }
          }
          }
          }
          },
          "/crm/v3/timeline/{appId}/event-templates": {
          "get": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "List all event templates for your app",
          "description": "Use this to list all event templates owned by your app.",
          "operationId": "get-/integrators/timeline/v3/{appId}/event-templates_getAll",
          "parameters": [
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/CollectionResponseTimelineEventTemplateNoPaging"
           }
          }
          }
          },
          "post": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Create an event template for your app",
          "description": "Event templates define the general structure for a custom timeline event. This includes formatted copy for its heading and details, as well as any custom property definitions. The event could be something like viewing a video, registering for a webinar, or filling out a survey. A single app can define multiple event templates. Event templates will be created for contacts by default, but they can be created for companies, tickets, and deals as well. Each event template contains its own set of tokens and `Markdown` templates. These tokens can be associated with any CRM object properties via the `objectPropertyName` field to fully build out CRM objects. You must create an event template before you can create events.",
          "operationId": "post-/integrators/timeline/v3/{appId}/event-templates_create",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },            
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          },
          {
          "description": "The new event template definition.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/TimelineEventTemplateCreateRequest"
          },
          "required": true
          }
       ],
          "responses": {
          "201": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventTemplate"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/{appId}/event-templates/{eventTemplateId}": {
          "get": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Gets a specific event template for your app",
          "description": "View the current state of a specific template and its tokens.",
          "operationId": "get-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_getById",
          "parameters": [
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          }
          ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventTemplate"
           }
          }
          }
          },
          "put": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Update an existing event template",
          "description": "Updates an existing template and its tokens. This is primarily used to update the headerTemplate/detailTemplate, and those changes will take effect for existing events. You can also update or replace all the tokens in the template here instead of doing individual API calls on the `/tokens` endpoint.",
          "operationId": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_update",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },            
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          },
          {
          "description": "The updated event template definition.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/TimelineEventTemplateUpdateRequest"
          },
          "required": true
          }
       ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventTemplate"
           }
          }
          }
          },
          "delete": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Deletes an event template for the app",
          "description": "This will delete the event template. All associated events will be removed from search results and the timeline UI. This action can't be undone, so it's highly recommended that you stop using any associated events before deleting a template.",
          "operationId": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_archive",
          "parameters": [
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          }
          ],
          "responses": {
          "204": {
          "description": "No content"
          }
          }
          }
          },
          "/crm/v3/timeline/{appId}/event-templates/{eventTemplateId}/tokens": {
          "post": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Adds a token to an existing event template",
          "description": "Once you've defined an event template, it's likely that you'll want to define tokens for it as well. You can do this on the event template itself or update individual tokens here. Event type tokens allow you to attach custom data to events displayed in a timeline or used for list segmentation. You can also use `objectPropertyName` to associate any CRM object properties. This will allow you to fully build out CRM objects. Token names should be unique across the template.",
          "operationId": "post-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens_create",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },            
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          },
          {
          "description": "The new token definition.",
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/TimelineEventTemplateToken"
          },
          "required": true
          }
       ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventTemplateToken"
           }
          }
          }
          }
          },
          "/crm/v3/timeline/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}": {
          "put": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Updates an existing token on an event template",
          "description": "This will update the existing token on an event template. Name and type can't be changed on existing tokens.",
          "operationId": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_update",
          "parameters": [
            {
               "$ref": "#/parameters/contentType"
            },            
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "tokenName",
          "in": "path",
          "description": "The token name.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          },
          {
          "name": "body",
          "in": "body",
          "schema": {
          "$ref": "#/definitions/TimelineEventTemplateTokenUpdateRequest"
          },
          "required": true
          }
       ],
          "responses": {
          "200": {
          "description": "successful operation",
          "schema": {
           "$ref": "#/definitions/TimelineEventTemplateToken"
           }
          }
          }
          },
          "delete": {
          "tags": [
          "CRM Timeline Events API"
          ],
          "summary": "Removes a token from the event template",
          "description": "This will remove the token from an existing template. Existing events and CRM objects will still retain the token and its mapped object properties, but new ones will not. The timeline will still display this property for older CRM objects if it's still referenced in the template `Markdown`. New events will not. Any lists or reports referencing deleted tokens will no longer return new contacts, but old ones will still exist in the lists.",
          "operationId": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_archive",
          "parameters": [
            {
               "$ref": "#/parameters/hapikey"
            },
          {
          "name": "eventTemplateId",
          "in": "path",
          "description": "The event template ID.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "tokenName",
          "in": "path",
          "description": "The token name.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "string"
          }
          },
          {
          "name": "appId",
          "in": "path",
          "description": "The ID of the target app.",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
          "type": "integer",
          "format": "int32"
          }
          }
          ],
          "responses": {
          "204": {
          "description": "No content"
          }
          }
          }
          },
          "/crm/v3/objects/contacts":{
            "get":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Read a page of contacts",
               "description":"Read a page of contacts. Control what is returned via the properties query param.",
               "operationId":"get-/crm/v3/objects/contacts_getPage",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"limit",
                     "in":"query",
                     "description":"The maximum number of results to display per page.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"integer",
                        "format":"int32",
                        "default":10
                     }
                  },
                  {
                     "name":"after",
                     "in":"query",
                     "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"properties",
                     "in":"query",
                     "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"propertiesWithHistory",
                     "in":"query",
                     "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"associations",
                     "in":"query",
                     "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"archived",
                     "in":"query",
                     "description":"Whether to return only results that have been archived.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"boolean",
                        "default":false
                     }
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                   }
                  }
               }
            },
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Create a contact with the given properties",
               "description":"Create a contact with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contacts is provided.",
               "operationId":"post-/crm/v3/objects/contacts_create",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/SimplePublicObjectInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "201":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/SimplePublicObject"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/batch/archive":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Archive a batch of contacts",
               "description": "Archive a batch of contacts by ID",
               "operationId":"post-/crm/v3/objects/contacts/batch/archive_archive",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchInputSimplePublicObjectId"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/batch/create":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Create a batch of contacts",
               "description": "Create a batch of contacts",
               "operationId":"post-/crm/v3/objects/contacts/batch/create_create",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "201":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObject"
                   }
                  },
                  "207":{
                     "description":"multiple statuses",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/batch/read":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Read a batch of contacts",
               "description": "Read a batch of contacts by internal ID, or unique property values",
               "operationId":"post-/crm/v3/objects/contacts/batch/read_read",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"archived",
                     "in":"query",
                     "description":"Whether to return only results that have been archived.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"boolean",
                        "default":false
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObject"
                   }
                  },
                  "207":{
                     "description":"multiple statuses",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/batch/update":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Update a batch of contacts",
               "description": "Update a batch of contacts",
               "operationId":"post-/crm/v3/objects/contacts/batch/update_update",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObject"
                   }
                  },
                  "207":{
                     "description":"multiple statuses",
                     "schema":{
                      "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/gdpr-delete":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"GDPR DELETE Contact",
               "description":"Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
               "operationId":"post-/crm/v3/objects/contacts/gdpr-delete_purge",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PublicGdprDeleteInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/merge":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Merge two contacts with same type",
               "description": "Merge two contacts with same type",
               "operationId":"post-/crm/v3/objects/contacts/merge_merge",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
              {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PublicMergeInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/SimplePublicObject"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/search":{
            "post":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary": "Search Contacts",
               "description": "Search Contacts",
               "operationId":"post-/crm/v3/objects/contacts/search_doSearch",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/PublicObjectSearchRequest"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                   }
                  }
               }
            }
         },
         "/crm/v3/objects/contacts/{contactId}":{
            "get":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Read a Contact",
               "description":"Read an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID. Control what is returned via the `properties` query param.",
               "operationId":"get-/crm/v3/objects/contacts/{contactId}_getById",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"contactId",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
                  {
                     "name":"properties",
                     "in":"query",
                     "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"propertiesWithHistory",
                     "in":"query",
                     "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"associations",
                     "in":"query",
                     "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     }
                  },
                  {
                     "name":"archived",
                     "in":"query",
                     "description":"Whether to return only results that have been archived.",
                     "required":false,
                     "style":"form",
                     "explode":true,
                     "schema":{
                        "type":"boolean",
                        "default":false
                     }
                  }
               ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/SimplePublicObjectWithAssociations"
                   }
                  }
               }
            },
            "delete":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Archive a Contact",
               "description":"Move an Object identified by `{contactId}` to the recycling bin.",
               "operationId":"delete-/crm/v3/objects/contacts/{contactId}_archive",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },
                  {
                     "name":"contactId",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  }
               ],
               "responses":{
                  "204":{
                     "description":"No content"
                  }
               }
            },
            "patch":{
               "tags":[
                  "CRM Contacts API"
               ],
               "summary":"Update a Contact",
               "description":"Perform a partial update of an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
               "operationId":"patch-/crm/v3/objects/contacts/{contactId}_update",
               "parameters":[
                  {
                     "$ref": "#/parameters/authorization"
                  },                  
                  {
                     "$ref": "#/parameters/contentType"
                  },
                  {
                     "name":"contactId",
                     "in":"path",
                     "required":true,
                     "style":"simple",
                     "explode":false,
                     "schema":{
                        "type":"string"
                     }
                  },
               {
                  "name": "body",
                     "in": "body",
                        "schema":{
                           "$ref":"#/definitions/SimplePublicObjectInput"
                  },
                  "required":true
               }
              ],
               "responses":{
                  "200":{
                     "description":"successful operation",
                     "schema":{
                      "$ref":"#/definitions/SimplePublicObject"
                   }
                  }
               }
            }
         },         
         "/crm/v3/objects/{objectType}":{
          "get":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Get Objects of Given Type",
             "description":"Read a page of objects. Control what is returned via the `properties` query param.",
             "operationId":"get-/crm/v3/objects/{objectType}_getPage",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"limit",
                   "in":"query",
                   "description":"The maximum number of results to display per page.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"integer",
                      "format":"int32",
                      "default":10
                   }
                },
                {
                   "name":"after",
                   "in":"query",
                   "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"properties",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"propertiesWithHistory",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"associations",
                   "in":"query",
                   "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                 }
                }
             }
          },
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Create Object of Given Type",
             "description":"Create a CRM object with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard objects is provided.",
             "operationId":"post-/crm/v3/objects/{objectType}_create",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/SimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "201":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/batch/archive":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Archive a Batch of Objects by ID",
             "description": "Archive a batch of objects by ID",
             "operationId":"post-/crm/v3/objects/{objectType}/batch/archive_archive",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectId"
                },
                "required":true
             }
            ],
             "responses":{
                "204":{
                   "description":"No content"
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/batch/create":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Create a Batch of Objects of Given Type",
             "description": "Create a batch of objects",
             "operationId":"post-/crm/v3/objects/{objectType}/batch/create_create",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "201":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/batch/read":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Read a Batch of Objects of Given Type",
             "description": "Read a batch of objects by internal ID, or unique property values",
             "operationId":"post-/crm/v3/objects/{objectType}/batch/read_read",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/batch/update":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Update a Batch of Objects of Given Type",
             "description": "Update a batch of objects",
             "operationId":"post-/crm/v3/objects/{objectType}/batch/update_update",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObject"
                 }
                },
                "207":{
                   "description":"multiple statuses",
                   "schema":{
                    "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/gdpr-delete":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"GDPR DELETE an Object Type",
             "description":"Permanently delete an object type and all associated content to follow GDPR.",
             "operationId":"post-/crm/v3/objects/{objectType}/gdpr-delete_purge",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/PublicGdprDeleteInput"
                },
                "required":true
             }
            ],
             "responses":{
                "204":{
                   "description":"No content"
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/merge":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Merge two Objects of Same Type",
             "description": "Merge two objects with same type",
             "operationId":"post-/crm/v3/objects/{objectType}/merge_merge",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/PublicMergeInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/search":{
          "post":{
             "tags":[
                "CRM Objects API"
             ],
             "summary": "Search Object of Given Type",
             "description": "Search object",
             "operationId":"post-/crm/v3/objects/{objectType}/search_doSearch",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/PublicObjectSearchRequest"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                 }
                }
             }
          }
       },
       "/crm/v3/objects/{objectType}/{objectId}":{
          "get":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Read an Object of Given Type",
             "description":"Read an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Control what is returned via the `properties` query param.",
             "operationId":"get-/crm/v3/objects/{objectType}/{objectId}_getById",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"objectId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"properties",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"propertiesWithHistory",
                   "in":"query",
                   "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"associations",
                   "in":"query",
                   "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   }
                },
                {
                   "name":"archived",
                   "in":"query",
                   "description":"Whether to return only results that have been archived.",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"boolean",
                      "default":false
                   }
                },
                {
                   "name":"idProperty",
                   "in":"query",
                   "description":"The name of a property whose values are unique for this object type",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObjectWithAssociations"
                 }
                }
             }
          },
          "delete":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Archive an Object of Given Type",
             "description":"Move an Object identified by `{objectId}` to the recycling bin.",
             "operationId":"delete-/crm/v3/objects/{objectType}/{objectId}_archive",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"objectId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "204":{
                   "description":"No content"
                }
             }
          },
          "patch":{
             "tags":[
                "CRM Objects API"
             ],
             "summary":"Update an Object of Given Type",
             "description":"Perform a partial update of an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
             "operationId":"patch-/crm/v3/objects/{objectType}/{objectId}_update",
             "parameters":[
               {
                  "$ref": "#/parameters/authorization"
               },               
               {
                  "$ref": "#/parameters/contentType"
               },
                {
                   "name":"objectType",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"objectId",
                   "in":"path",
                   "required":true,
                   "style":"simple",
                   "explode":false,
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"idProperty",
                   "in":"query",
                   "description":"The name of a property whose values are unique for this object type",
                   "required":false,
                   "style":"form",
                   "explode":true,
                   "schema":{
                      "type":"string"
                   }
                },
             {
                "name": "body",
                   "in": "body",
                      "schema":{
                         "$ref":"#/definitions/SimplePublicObjectInput"
                },
                "required":true
             }
            ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                    "$ref":"#/definitions/SimplePublicObject"
                 }
                }
             }
          }
       },       
       "/crm/v3/extensions/videoconferencing/settings/{appId}":{
        "get":{
           "tags":[
              "CRM Video Conference Extension API"
           ],
           "summary":"Get video conference settings",
           "description":"Return the settings for a video conference application with the specified ID.",
           "operationId":"get-/crm/v3/extensions/videoconferencing/settings/{appId}_getById",
           "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
              {
                 "name":"appId",
                 "in":"path",
                 "description":"The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"integer",
                    "format":"int32"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                  "$ref":"#/definitions/ExternalSettings"
               }
              }
           }
        },
        "put":{
           "tags":[
              "CRM Video Conference Extension API"
           ],
           "summary":"Update video conference settings",
           "description":"Updates the settings for a video conference application with the specified ID.",
           "operationId":"put-/crm/v3/extensions/videoconferencing/settings/{appId}_replace",
           "parameters":[
            {
               "$ref": "#/parameters/contentType"
            },            
            {
               "$ref": "#/parameters/hapikey"
            },            
              {
                 "name":"appId",
                 "in":"path",
                 "description":"The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"integer",
                    "format":"int32"
                 }
              },
           {
              "name": "body",
                 "in": "body",
                    "schema":{
                       "$ref":"#/definitions/ExternalSettings"
              },
              "required":true
           }
          ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                  "$ref":"#/definitions/ExternalSettings"
               }
              }
           }
        },
        "delete":{
           "tags":[
              "CRM Video Conference Extension API"
           ],
           "summary":"Delete video conference settings",
           "description":"Deletes the settings for a video conference application with the specified ID.",
           "operationId":"delete-/crm/v3/extensions/videoconferencing/settings/{appId}_archive",
           "parameters":[
            {
               "$ref": "#/parameters/hapikey"
            },
              {
                 "name":"appId",
                 "in":"path",
                 "description":"The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
                 "required":true,
                 "style":"simple",
                 "explode":false,
                 "schema":{
                    "type":"integer",
                    "format":"int32"
                 }
              }
           ],
           "responses":{
              "204":{
                 "description":"No content"
              }
           }
        }
     },
     "/crm/v3/objects/tickets":{
      "get":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"List Tickets",
         "description":"Read a page of tickets. Control what is returned via the `properties` query param.",
         "operationId":"get-/crm/v3/objects/tickets_getPage",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"limit",
               "in":"query",
               "description":"The maximum number of results to display per page.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"integer",
                  "format":"int32",
                  "default":10
               }
            },
            {
               "name":"after",
               "in":"query",
               "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"properties",
               "in":"query",
               "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"propertiesWithHistory",
               "in":"query",
               "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"associations",
               "in":"query",
               "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"archived",
               "in":"query",
               "description":"Whether to return only results that have been archived.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"boolean",
                  "default":false
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
             }
            }
         }
      },
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Create Ticket",
         "description":"Create a ticket with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard tickets is provided.",
         "operationId":"post-/crm/v3/objects/tickets_create",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
         {
            "name": "body",
               "in": "body",
                  "schema":{
                     "$ref":"#/definitions/SimplePublicObjectInput"
            },
            "required":true
         }
        ],
         "responses":{
            "201":{
               "description":"successful operation",
               "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
            }
         }
      }
   },
   "/crm/v3/objects/tickets/batch/archive":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Archive a Batch of Tickets",
         "description": "Archive a batch of tickets by Id",
         "operationId":"post-/crm/v3/objects/tickets/batch/archive_archive",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
         {
            "name": "body",
               "in": "body",
                  "schema":{
                     "$ref":"#/definitions/BatchInputSimplePublicObjectId"
            },
            "required":true
         }
        ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      }
   },
   "/crm/v3/objects/tickets/batch/create":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Create a Batch of Tickets",
         "description": "Create a batch of tickets",
         "operationId":"post-/crm/v3/objects/tickets/batch/create_create",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
         {
            "name": "body",
               "in": "body",
                  "schema":{
                     "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
            },
            "required":true
         }
        ],
         "responses":{
            "201":{
               "description":"successful operation",
               "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
            },
            "207":{
               "description":"multiple statuses",
               "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
            }
         }
      }
   },
   "/crm/v3/objects/tickets/batch/read":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Read a batch of tickets",
         "description":"Read a batch of tickets by internal ID, or unique property values",
         "operationId":"post-/crm/v3/objects/tickets/batch/read_read",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "name":"archived",
               "in":"query",
               "description":"Whether to return only results that have been archived.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"boolean",
                  "default":false
               }
            },
            {
            "name":"body",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
           },
            "required":true
         }
        ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/BatchResponseSimplePublicObject"
              }
            },
            "207":{
               "description":"multiple statuses",
               "schema":{
                 "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
              }
            }
         }
      }
   },
   "/crm/v3/objects/tickets/batch/update":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Update a batch of tickets",
         "description":"Update a batch of tickets",
         "operationId":"post-/crm/v3/objects/tickets/batch/update_update",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
           {
            "name":"body",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
           },
            "required":true
         }
        ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/BatchResponseSimplePublicObject"
              }
            },
            "207":{
               "description":"multiple statuses",
               "schema":{
                 "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
              }
            }
         }
      }
   },
   "/crm/v3/objects/tickets/merge":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Merge Two Tickets",
         "description":"Merge two tickets with same type",
         "operationId":"post-/crm/v3/objects/tickets/merge_merge",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
           {
           "name":"body",
              "in":"body",
                 "schema":{
                    "$ref":"#/definitions/PublicMergeInput"
        },
            "required":true
         }
        ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/SimplePublicObject"
              }
            }
         }
      }
   },
   "/crm/v3/objects/tickets/search":{
      "post":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary": "Search Ticket",
         "description": "Search Ticket",
         "operationId":"post-/crm/v3/objects/tickets/search_doSearch",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
            {
              "name":"body",
              "in":"body",
              "schema":{
                 "$ref":"#/definitions/PublicObjectSearchRequest"
              },
            "required":true
         }
        ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
              }
               }
            }
         }
   },
   "/crm/v3/objects/tickets/{ticketId}":{
      "get":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Get Ticket",
         "description":"Read an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Control what is returned via the `properties` query param.",
         "operationId":"get-/crm/v3/objects/tickets/{ticketId}_getById",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"ticketId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"properties",
               "in":"query",
               "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"propertiesWithHistory",
               "in":"query",
               "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"associations",
               "in":"query",
               "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            {
               "name":"archived",
               "in":"query",
               "description":"Whether to return only results that have been archived.",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"boolean",
                  "default":false
               }
            },
            {
               "name":"idProperty",
               "in":"query",
               "description":"The name of a property whose values are unique for this object type",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            }
         ],
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/SimplePublicObjectWithAssociations"
              }
            }
         }
      },
      "delete":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Archive Ticket",
         "description":"Move an Object identified by `{ticketId}` to the recycling bin.",
         "operationId":"delete-/crm/v3/objects/tickets/{ticketId}_archive",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },
            {
               "name":"ticketId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            }
         ],
         "responses":{
            "204":{
               "description":"No content"
            }
         }
      },
      "patch":{
         "tags":[
            "CRM Tickets API"
         ],
         "summary":"Update a Ticket.",
         "description":"Perform a partial update of an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
         "operationId":"patch-/crm/v3/objects/tickets/{ticketId}_update",
         "parameters":[
            {
               "$ref": "#/parameters/authorization"
            },            
            {
               "$ref": "#/parameters/contentType"
            },
            {
               "name":"ticketId",
               "in":"path",
               "required":true,
               "style":"simple",
               "explode":false,
               "schema":{
                  "type":"string"
               }
            },
            {
               "name":"idProperty",
               "in":"query",
               "description":"The name of a property whose values are unique for this object type",
               "required":false,
               "style":"form",
               "explode":true,
               "schema":{
                  "type":"string"
               }
            },
           {
              "name":"body",
              "in":"body",
              "schema":{
                 "$ref":"#/definitions/SimplePublicObjectInput"
              },
              "required":true
           }
     ],
         
         "responses":{
            "200":{
               "description":"successful operation",
               "schema":{
                 "$ref":"#/definitions/SimplePublicObject"
              }
            }
         }
      }
   },   
   "/crm/v3/objects/line_items":{
    "get":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"List Line Items",
       "description":"Read a page of line items. Control what is returned via the `properties` query param.",
       "operationId":"get-/crm/v3/objects/line-items_getPage",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },
          {
             "name":"limit",
             "in":"query",
             "description":"The maximum number of results to display per page.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"integer",
                "format":"int32",
                "default":10
             }
          },
          {
             "name":"after",
             "in":"query",
             "description":"The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"properties",
             "in":"query",
             "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"propertiesWithHistory",
             "in":"query",
             "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"associations",
             "in":"query",
             "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
               "$ref":"#/definitions/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
            }
          }
       }
    },
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Create a Line Item",
       "description":"Create a line item with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard line items is provided.",
       "operationId":"post-/crm/v3/objects/line-items_create",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
       {
          "name": "body",
             "in": "body",
                "schema":{
                   "$ref":"#/definitions/SimplePublicObjectInput"
          },
          "required":true
       }
   ],
       "responses":{
          "201":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
          }
       }
    }
 },
 "/crm/v3/objects/line_items/batch/archive":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Archive a batch of line items",
       "description":"Archive a batch of line items by ID",
       "operationId":"post-/crm/v3/objects/line-items/batch/archive_archive",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
       {
          "name":"body",
             "in":"body",
                "schema":{
                   "$ref":"#/definitions/BatchInputSimplePublicObjectId"
                },
          "required":true
       }
    ],
       "responses":{
          "204":{
             "description":"No content"
          }
       }
    }
 },
 "/crm/v3/objects/line_items/batch/create":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Create a batch of line items",
       "description":"Create a batch of line items",
       "operationId":"post-/crm/v3/objects/line-items/batch/create_create",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
       {
          "name":"body",
             "in":"body",
                "schema":{
                   "$ref":"#/definitions/BatchInputSimplePublicObjectInput"
                },
          "required":true
       }
    ],
       "responses":{
          "201":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }
       }
    }
 },
 "/crm/v3/objects/line_items/batch/read":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Read a batch of line items",
       "description":"Read a batch of line items by internal ID, or unique property values",
       "operationId":"post-/crm/v3/objects/line-items/batch/read_read",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          },
       {
          "name":"body",
             "in":"body",
                "schema":{
                   "$ref":"#/definitions/BatchReadInputSimplePublicObjectId"
                },
          "required":true
       }
    ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }
       }
    }
 },
 "/crm/v3/objects/line_items/batch/update":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Update a batch of line items",
       "description":"Update a batch of line items",
       "operationId":"post-/crm/v3/objects/line-items/batch/update_update",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
      {
          "name":"body",
             "in":"body",
                "schema":{
                   "$ref":"#/definitions/BatchInputSimplePublicObjectBatchInput"
                },
          "required":true
       }
    ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObject"
             }
          },
          "207":{
             "description":"multiple statuses",
             "schema":{
                "$ref":"#/definitions/BatchResponseSimplePublicObjectWithErrors"
             }
          }    
       }
    }
 },
 "/crm/v3/objects/line_items/merge":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Merge two line items",
       "description":"Merge two line items with same type",
       "operationId":"post-/crm/v3/objects/line-items/merge_merge",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"body",
                "in":"body",
                   "schema":{
                      "$ref":"#/definitions/PublicMergeInput"
                   },
                "required":true
       }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
              "schema":{
                      "$ref":"#/definitions/SimplePublicObject"
                   }
          }   
       }
    }
 },
 "/crm/v3/objects/line_items/search":{
    "post":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary": "Search line item",
       "description": "Search line item",
       "operationId":"post-/crm/v3/objects/line-items/search_doSearch",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
       {
          "name":"body",
             "in":"body",
             "schema":{
                "$ref":"#/definitions/PublicObjectSearchRequest"
             },
          "required":true
       }
    ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
             }
          }
       }
    }
 },
 "/crm/v3/objects/line_items/{lineItemId}":{
    "get":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Read a line item.",
       "description":"Read an Object identified by `{lineItemId}`. `{lineItemId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Control what is returned via the `properties` query param.",
       "operationId":"get-/crm/v3/objects/line-items/{lineItemId}_getById",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
          {
             "name":"lineItemId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"properties",
             "in":"query",
             "description":"A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"propertiesWithHistory",
             "in":"query",
             "description":"A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"associations",
             "in":"query",
             "description":"A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"array",
                "items":{
                   "type":"string"
                }
             }
          },
          {
             "name":"archived",
             "in":"query",
             "description":"Whether to return only results that have been archived.",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"boolean",
                "default":false
             }
          },
          {
             "name":"idProperty",
             "in":"query",
             "description":"The name of a property whose values are unique for this object type",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          }
       ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObjectWithAssociations"
             }
          }
       }
    },
    "delete":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Archive a line item.",
       "description":"Move an Object identified by `{lineItemId}` to the recycling bin.",
       "operationId":"delete-/crm/v3/objects/line-items/{lineItemId}_archive",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
          {
             "name":"lineItemId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          }
       ],
       "responses":{
          "204":{
             "description":"No content"
          }
       }
    },
    "patch":{
       "tags":[
          "CRM Line Items API"
       ],
       "summary":"Update a line item.",
       "description":"Perform a partial update of an Object identified by `{lineItemId}`. `{lineItemId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
       "operationId":"patch-/crm/v3/objects/line-items/{lineItemId}_update",
       "parameters":[
         {
            "$ref": "#/parameters/authorization"
         },         
         {
            "$ref": "#/parameters/contentType"
         },
          {
             "name":"lineItemId",
             "in":"path",
             "required":true,
             "style":"simple",
             "explode":false,
             "schema":{
                "type":"string"
             }
          },
          {
             "name":"idProperty",
             "in":"query",
             "description":"The name of a property whose values are unique for this object type",
             "required":false,
             "style":"form",
             "explode":true,
             "schema":{
                "type":"string"
             }
          },
       {
          "name":"body",
          "in":"body",
          "schema":{
             "$ref":"#/definitions/SimplePublicObjectInput"
          },
          "required":true
       }
    ],
       "responses":{
          "200":{
             "description":"successful operation",
             "schema":{
                "$ref":"#/definitions/SimplePublicObject"
             }
          }
       }
    }
 }, 
 "/webhooks/v3/{appId}/settings":{
  "get":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Get All Webhooks Settings",
     "description": "Get All Webhooks Settings",
     "operationId":"get-/webhooks/v3/{appId}/settings_getAll",
     "parameters":[
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        }
     ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSettingsResponse"
           }
        }
     }
  },
  "put":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Configure Webhooks Settings",
     "dscription": "Configure Webhooks Settings",
     "operationId":"put-/webhooks/v3/{appId}/settings_configure",
     "parameters":[
      {
         "$ref": "#/parameters/contentType"
      },      
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
     {
        "name": "body",
           "in": "body",
              "schema":{
                 "$ref":"#/definitions/WebhooksSettingsChangeRequest"
        },
        "required":true
     }
  ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSettingsResponse"
           }
        }
     }
  },
  "delete":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Clear Webhooks Settings",
     "description": "Clear Webhooks Settings",
     "operationId":"delete-/webhooks/v3/{appId}/settings_clear",
     "parameters":[
      {
         "$ref": "#/parameters/hapikey"
      },      
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        }
     ],
     "responses":{
        "204":{
           "description":"No content"
        }
     }
  }
},
"/webhooks/v3/{appId}/subscriptions":{
  "get":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Get Webhooks Subscriptions",
     "description": "Get Webhooks Subscriptions",
     "operationId":"get-/webhooks/v3/{appId}/subscriptions_getAll",
     "parameters":[
      {
         "$ref": "#/parameters/hapikey"
      },      
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        }
     ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSubscriptionListResponse"
           }
        }
     }
  },
  "post":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Create Webhooks Subscriptions",
     "description": "Create Webhooks Subscriptions",
     "operationId":"post-/webhooks/v3/{appId}/subscriptions_create",
     "parameters":[
      {
         "$ref": "#/parameters/contentType"
      },      
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
     {
        "name": "body",
           "in": "body",
              "schema":{
                 "$ref":"#/definitions/WebhooksSubscriptionCreateRequest"
        },
        "required":true
     }
  ],
     "responses":{
        "201":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSubscriptionResponse"
           }
        }
     }
  }
},
"/webhooks/v3/{appId}/subscriptions/batch/update":{
  "post":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Batch Update Webhooks Subscriptions",
     "description": "Batch Update Webhooks Subscriptions",
     "operationId":"post-/webhooks/v3/{appId}/subscriptions/batch/update_updateBatch",
     "parameters":[
      {
         "$ref": "#/parameters/contentType"
      },      
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
     {
        "name": "body",
           "in": "body",
              "schema":{
                 "$ref":"#/definitions/WebhooksBatchInputSubscriptionBatchUpdateRequest"
        },
        "required":true
     }
  ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksBatchResponseSubscriptionResponse"
           }
        },
        "207":{
           "description":"multiple statuses",
           "schema":{
              "$ref":"#/definitions/WebhooksBatchResponseSubscriptionResponseWithErrors"
           }
        }
     }
  }
},
"/webhooks/v3/{appId}/subscriptions/{subscriptionId}":{
  "get":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Get Webhooks Subscription by Id",
     "description": "Get Webhooks Subscription by Id",
     "operationId":"get-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_getById",
     "parameters":[
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"subscriptionId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        }
     ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSubscriptionResponse"
           }
        }
     }
  },
  "delete":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Archive Webhooks Subscription",
     "description": "Archive Webhooks Subscription",
     "operationId":"delete-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_archive",
     "parameters":[
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"subscriptionId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        }
     ],
     "responses":{
        "204":{
           "description":"No content"
        }
     }
  },
  "patch":{
     "tags":[
        "Webhooks API"
     ],
     "summary": "Update Webhooks Subscription",
     "description": "Update Webhooks Subscription",
     "operationId":"patch-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_update",
     "parameters":[
      {
         "$ref": "#/parameters/contentType"
      },      
      {
         "$ref": "#/parameters/hapikey"
      },
        {
           "name":"subscriptionId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
        {
           "name":"appId",
           "in":"path",
           "required":true,
           "style":"simple",
           "explode":false,
           "schema":{
              "type":"integer",
              "format":"int32"
           }
        },
     {
        "name": "body",
           "in": "body",
              "schema":{
                 "$ref":"#/definitions/WebhooksSubscriptionPatchRequest"
        },
        "required":true
     }
  ],
     "responses":{
        "200":{
           "description":"successful operation",
           "schema":{
              "$ref":"#/definitions/WebhooksSubscriptionResponse"
           }
        }
     }
  }
}
   },
   "parameters": {
      "authorization": {
            "name": "authorization",
            "in": "header",
            "type": "string"
      },
      "contentType": {
            "name": "content-type",
            "in": "header",
            "type": "string"
      },
      "hapikey": {
         "name": "hapikey",
         "in": "query",
         "type": "string"
      }
   },
  "definitions":{
        "AccessTokenInfoResponse":{
           "required":[
              "app_id",
              "expires_in",
              "hub_id",
              "scope_to_scope_group_pks",
              "scopes",
              "token",
              "token_type",
              "trial_scope_to_scope_group_pks",
              "trial_scopes",
              "user_id"
           ],
           "type":"object",
           "properties":{
              "token":{
                 "type":"string"
              },
              "user":{
                 "type":"string"
              },
              "hub_domain":{
                 "type":"string"
              },
              "scopes":{
                 "type":"array",
                 "items":{
                    "type":"string"
                 }
              },
              "scope_to_scope_group_pks":{
                 "type":"array",
                 "items":{
                    "type":"integer",
                    "format":"int32"
                 }
              },
              "trial_scopes":{
                 "type":"array",
                 "items":{
                    "type":"string"
                 }
              },
              "trial_scope_to_scope_group_pks":{
                 "type":"array",
                 "items":{
                    "type":"integer",
                    "format":"int32"
                 }
              },
              "hub_id":{
                 "type":"integer",
                 "format":"int32"
              },
              "app_id":{
                 "type":"integer",
                 "format":"int32"
              },
              "expires_in":{
                 "type":"integer",
                 "format":"int32"
              },
              "user_id":{
                 "type":"integer",
                 "format":"int32"
              },
              "token_type":{
                 "type":"string"
              }
           }
        },
        "TokenResponseIF":{
           "required":[
              "access_token",
              "expires_in",
              "refresh_token",
              "token_type"
           ],
           "type":"object",
           "properties":{
              "refresh_token":{
                 "type":"string"
              },
              "expires_in":{
                 "type":"integer",
                 "format":"int32"
              },
              "access_token":{
                 "type":"string"
              },
              "id_token":{
                 "type":"string"
              },
              "token_type":{
                 "type":"string"
              }
           }
        },
        "RefreshTokenInfoResponse":{
           "required":[
              "client_id",
              "hub_id",
              "scopes",
              "token",
              "token_type",
              "user_id"
           ],
           "type":"object",
           "properties":{
              "token":{
                 "type":"string"
              },
              "user":{
                 "type":"string"
              },
              "hub_domain":{
                 "type":"string"
              },
              "scopes":{
                 "type":"array",
                 "items":{
                    "type":"string"
                 }
              },
              "hub_id":{
                 "type":"integer",
                 "format":"int32"
              },
              "client_id":{
                 "type":"string"
              },
              "user_id":{
                 "type":"integer",
                 "format":"int32"
              },
              "token_type":{
                 "type":"string"
              }
           }
        },
        "CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging":{
           "required":[
              "results"
           ],
           "type":"object",
           "properties":{
              "results":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/MarketingEventExternalUniqueIdentifier"
                 }
              }
           }
        },
        "StandardError":{
           "required":[
              "category",
              "context",
              "errors",
              "links",
              "message",
              "status"
           ],
           "type":"object",
           "properties":{
              "status":{
                 "type":"string"
              },
              "id":{
                 "type":"string"
              },
              "category":{
                 "$ref":"#/definitions/ErrorCategory"
              },
              "subCategory":{
                 "type":"object",
                 "properties":{
                    
                 }
              },
              "message":{
                 "type":"string"
              },
              "errors":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/ErrorDetail"
                 }
              },
              "context":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"array",
                    "items":{
                       "type":"string"
                    }
                 }
              },
              "links":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              }
           }
        },
        "MarketingEventCreateRequestParams":{
           "required":[
              "eventName",
              "eventOrganizer",
              "externalAccountId",
              "externalEventId"
           ],
           "type":"object",
           "properties":{
              "eventName":{
                 "type":"string",
                 "description":"The name of the marketing event."
              },
              "eventType":{
                 "type":"string",
                 "description":"Describes what type of event this is. For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`"
              },
              "startDateTime":{
                 "type":"string",
                 "description":"The start date and time of the marketing event.",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "description":"The end date and time of the marketing event.",
                 "format":"date-time"
              },
              "eventOrganizer":{
                 "type":"string",
                 "description":"The name of the organizer of the marketing event."
              },
              "eventDescription":{
                 "type":"string",
                 "description":"The description of the marketing event."
              },
              "eventUrl":{
                 "type":"string",
                 "description":"A URL in the external event application where the marketing event can be managed."
              },
              "eventCancelled":{
                 "type":"boolean",
                 "description":"Indicates if the marketing event has been cancelled. Defaults to `false`"
              },
              "customProperties":{
                 "type":"array",
                 "description":"A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set. In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts. ",
                 "items":{
                    "$ref":"#/definitions/PropertyValue"
                 }
              },
              "externalAccountId":{
                 "type":"string",
                 "description":"The accountId that is associated with this marketing event in the external event application."
              },
              "externalEventId":{
                 "type":"string",
                 "description":"The id of the marketing event in the external event application."
              }
           }
        },
        "MarketingEventCompleteRequestParams":{
           "required":[
              "endDateTime",
              "startDateTime"
           ],
           "type":"object",
           "properties":{
              "startDateTime":{
                 "type":"string",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "format":"date-time"
              }
           }
        },
        "SubscriberEmailResponse":{
           "required":[
              "email",
              "vid"
           ],
           "type":"object",
           "properties":{
              "vid":{
                 "type":"integer",
                 "format":"int32"
              },
              "email":{
                 "type":"string"
              }
           }
        },
        "EventDetailSettings":{
           "required":[
              "appId",
              "eventDetailsUrl"
           ],
           "type":"object",
           "properties":{
              "appId":{
                 "type":"integer",
                 "description":"The id of the application the settings are for",
                 "format":"int32"
              },
              "eventDetailsUrl":{
                 "type":"string",
                 "description":"The url that will be used to fetch marketing event details by id"
              }
           }
        },
        "MarketingEventPublicReadResponse":{
           "required":[
              "attendees",
              "cancellations",
              "createdAt",
              "eventName",
              "eventOrganizer",
              "externalEventId",
              "id",
              "noShows",
              "registrants",
              "updatedAt"
           ],
           "type":"object",
           "properties":{
              "eventName":{
                 "type":"string",
                 "description":"The name of the marketing event."
              },
              "eventType":{
                 "type":"string",
                 "description":"The type of the marketing event."
              },
              "startDateTime":{
                 "type":"string",
                 "description":"The start date and time of the marketing event.",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "description":"The end date and time of the marketing event.",
                 "format":"date-time"
              },
              "eventOrganizer":{
                 "type":"string",
                 "description":"The name of the organizer of the marketing event."
              },
              "eventDescription":{
                 "type":"string",
                 "description":"The description of the marketing event."
              },
              "eventUrl":{
                 "type":"string",
                 "description":"A URL in the external event application where the marketing event can be managed."
              },
              "eventCancelled":{
                 "type":"boolean",
                 "description":"Indicates if the marketing event has been cancelled."
              },
              "customProperties":{
                 "type":"array",
                 "description":"A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set. In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts. ",
                 "items":{
                    "$ref":"#/definitions/PropertyValue"
                 }
              },
              "externalEventId":{
                 "type":"string",
                 "description":"The id of the marketing event in the external event application."
              },
              "registrants":{
                 "type":"integer",
                 "description":"The number of HubSpot contacts that registered for this marketing event.",
                 "format":"int32"
              },
              "attendees":{
                 "type":"integer",
                 "description":"The number of HubSpot contacts that attended this marketing event.",
                 "format":"int32"
              },
              "cancellations":{
                 "type":"integer",
                 "description":"The number of HubSpot contacts that registered for this marketing event, but later cancelled their registration.",
                 "format":"int32"
              },
              "noShows":{
                 "type":"integer",
                 "description":"The number of HubSpot contacts that registered for this marketing event, but did not attend. This field only had a value when the event is over.",
                 "format":"int32"
              },
              "createdAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "updatedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "id":{
                 "type":"string"
              }
           }
        },
        "MarketingEventSubscriber":{
           "required":[
              "interactionDateTime"
           ],
           "type":"object",
           "properties":{
              "interactionDateTime":{
                 "type":"integer",
                 "description":"The date and time at which the contact subscribed to the event.",
                 "format":"int64"
              },
              "properties":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              },
              "vid":{
                 "type":"integer",
                 "format":"int32"
              }
           }
        },
        "ErrorDetail":{
           "required":[
              "message"
           ],
           "type":"object",
           "properties":{
              "message":{
                 "type":"string",
                 "description":"A human readable message describing the error along with remediation steps where appropriate"
              },
              "in":{
                 "type":"string",
                 "description":"The name of the field or parameter in which the error was found."
              },
              "code":{
                 "type":"string",
                 "description":"The status code associated with the error detail"
              },
              "subCategory":{
                 "type":"string",
                 "description":"A specific category that contains more specific detail about the error"
              },
              "context":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"array",
                    "items":{
                       "type":"string"
                    }
                 },
                 "description":"Context about the error condition",
                 "example":{
                    "missingScopes":[
                       "scope1",
                       "scope2"
                    ]
                 }
              }
           }
        },
        "MarketingEventEmailSubscriber":{
           "required":[
              "email",
              "interactionDateTime"
           ],
           "type":"object",
           "properties":{
              "interactionDateTime":{
                 "type":"integer",
                 "description":"The date and time at which the contact subscribed to the event.",
                 "format":"int64"
              },
              "properties":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              },
              "email":{
                 "type":"string",
                 "description":"The email address of the contact in HubSpot to associate with the event. Note that the contact must already exist in HubSpot; a contact will not be created."
              },
              "contactProperties":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              }
           }
        },
        "EventDetailSettingsUrl":{
           "required":[
              "eventDetailsUrl"
           ],
           "type":"object",
           "properties":{
              "eventDetailsUrl":{
                 "type":"string",
                 "description":"The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`"
              }
           }
        },
        "BatchInputMarketingEventEmailSubscriber":{
           "required":[
              "inputs"
           ],
           "type":"object",
           "properties":{
              "inputs":{
                 "type":"array",
                 "description":"List of marketing event details to create or update",
                 "items":{
                    "$ref":"#/definitions/MarketingEventEmailSubscriber"
                 }
              }
           },
           "description":"List of marketing event details to create or update"
        },
        "MarketingEventExternalUniqueIdentifier":{
           "required":[
              "appId",
              "externalAccountId",
              "externalEventId"
           ],
           "type":"object",
           "properties":{
              "appId":{
                 "type":"integer",
                 "description":"The id of the application that created the marketing event in HubSpot.",
                 "format":"int32"
              },
              "externalAccountId":{
                 "type":"string",
                 "description":"The accountId that is associated with this marketing event in the external event application."
              },
              "externalEventId":{
                 "type":"string",
                 "description":"The id of the marketing event in the external event application."
              }
           }
        },
        "SubscriberVidResponse":{
           "required":[
              "vid"
           ],
           "type":"object",
           "properties":{
              "vid":{
                 "type":"integer",
                 "format":"int32"
              }
           }
        },
        "BatchInputMarketingEventCreateRequestParams":{
           "required":[
              "inputs"
           ],
           "type":"object",
           "properties":{
              "inputs":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/MarketingEventCreateRequestParams"
                 }
              }
           }
        },
        "Error":{
           "required":[
              "category",
              "correlationId",
              "message"
           ],
           "type":"object",
           "properties":{
              "message":{
                 "type":"string",
                 "description":"A human readable message describing the error along with remediation steps where appropriate",
                 "example":"An error occurred"
              },
              "correlationId":{
                 "type":"string",
                 "description":"A unique identifier for the request. Include this value with any error reports or support tickets",
                 "format":"uuid",
                 "example":"aeb5f871-7f07-4993-9211-075dc63e7cbf"
              },
              "category":{
                 "type":"string",
                 "description":"The error category"
              },
              "subCategory":{
                 "type":"string",
                 "description":"A specific category that contains more specific detail about the error"
              },
              "errors":{
                 "type":"array",
                 "description":"further information about the error",
                 "items":{
                    "$ref":"#/definitions/ErrorDetail"
                 }
              },
              "context":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"array",
                    "items":{
                       "type":"string"
                    }
                 },
                 "description":"Context about the error condition",
                 "example":{
                    "invalidPropertyName":[
                       "propertyValue"
                    ],
                    "missingScopes":[
                       "scope1",
                       "scope2"
                    ]
                 }
              },
              "links":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 },
                 "description":"A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
              }
           },
           "example":{
              "message":"Invalid input (details will vary based on the error)",
              "correlationId":"aeb5f871-7f07-4993-9211-075dc63e7cbf",
              "category":"VALIDATION_ERROR",
              "links":{
                 "knowledge-base":"https://www.hubspot.com/products/service/knowledge-base"
              }
           }
        },
        "PropertyValue":{
           "required":[
              "name",
              "requestId",
              "selectedByUser",
              "selectedByUserTimestamp",
              "source",
              "sourceId",
              "sourceLabel",
              "sourceMetadata",
              "sourceVid",
              "timestamp",
              "value"
           ],
           "type":"object",
           "properties":{
              "name":{
                 "type":"string"
              },
              "value":{
                 "type":"string"
              },
              "timestamp":{
                 "type":"integer",
                 "format":"int64"
              },
              "sourceId":{
                 "type":"string"
              },
              "sourceLabel":{
                 "type":"string"
              },
              "source":{
                 "type":"string",
                 "enum":[
                    "IMPORT",
                    "API",
                    "FORM",
                    "ANALYTICS",
                    "MIGRATION",
                    "SALESFORCE",
                    "INTEGRATION",
                    "CONTACTS_WEB",
                    "WAL_INCREMENTAL",
                    "TASK",
                    "EMAIL",
                    "WORKFLOWS",
                    "CALCULATED",
                    "SOCIAL",
                    "BATCH_UPDATE",
                    "SIGNALS",
                    "BIDEN",
                    "DEFAULT",
                    "COMPANIES",
                    "DEALS",
                    "ASSISTS",
                    "PRESENTATIONS",
                    "TALLY",
                    "SIDEKICK",
                    "CRM_UI",
                    "MERGE_CONTACTS",
                    "PORTAL_USER_ASSOCIATOR",
                    "INTEGRATIONS_PLATFORM",
                    "BCC_TO_CRM",
                    "FORWARD_TO_CRM",
                    "ENGAGEMENTS",
                    "SALES",
                    "HEISENBERG",
                    "LEADIN",
                    "GMAIL_INTEGRATION",
                    "ACADEMY",
                    "SALES_MESSAGES",
                    "AVATARS_SERVICE",
                    "MERGE_COMPANIES",
                    "SEQUENCES",
                    "COMPANY_FAMILIES",
                    "MOBILE_IOS",
                    "MOBILE_ANDROID",
                    "CONTACTS",
                    "ASSOCIATIONS",
                    "EXTENSION",
                    "SUCCESS",
                    "BOT",
                    "INTEGRATIONS_SYNC",
                    "AUTOMATION_PLATFORM",
                    "CONVERSATIONS",
                    "EMAIL_INTEGRATION",
                    "CONTENT_MEMBERSHIP",
                    "QUOTES",
                    "BET_ASSIGNMENT",
                    "QUOTAS",
                    "BET_CRM_CONNECTOR",
                    "MEETINGS",
                    "MERGE_OBJECTS",
                    "RECYCLING_BIN",
                    "ADS",
                    "AI_GROUP",
                    "COMMUNICATOR",
                    "SETTINGS",
                    "PROPERTY_SETTINGS",
                    "PIPELINE_SETTINGS",
                    "COMPANY_INSIGHTS",
                    "BEHAVIORAL_EVENTS",
                    "PAYMENTS",
                    "GOALS",
                    "PORTAL_OBJECT_SYNC",
                    "APPROVALS",
                    "FILE_MANAGER",
                    "MARKETPLACE",
                    "INTERNAL_PROCESSING",
                    "FORECASTING",
                    "SLACK_INTEGRATION",
                    "CRM_UI_BULK_ACTION",
                    "WORKFLOW_CONTACT_DELETE_ACTION"
                 ]
              },
              "selectedByUser":{
                 "type":"boolean"
              },
              "selectedByUserTimestamp":{
                 "type":"integer",
                 "format":"int64"
              },
              "sourceVid":{
                 "type":"array",
                 "items":{
                    "type":"integer",
                    "format":"int64"
                 }
              },
              "sourceMetadata":{
                 "type":"string",
                 "description":"Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`"
              },
              "requestId":{
                 "type":"string"
              },
              "updatedByUserId":{
                 "type":"integer",
                 "format":"int32"
              },
              "persistenceTimestamp":{
                 "type":"integer",
                 "format":"int64"
              }
           }
        },
        "BatchInputMarketingEventExternalUniqueIdentifier":{
           "required":[
              "inputs"
           ],
           "type":"object",
           "properties":{
              "inputs":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/MarketingEventExternalUniqueIdentifier"
                 }
              }
           }
        },
        "MarketingEventUpdateRequestParams":{
           "type":"object",
           "properties":{
              "eventName":{
                 "type":"string",
                 "description":"The name of the marketing event."
              },
              "eventType":{
                 "type":"string",
                 "description":"Describes what type of event this is. For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`"
              },
              "startDateTime":{
                 "type":"string",
                 "description":"The start date and time of the marketing event.",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "description":"The end date and time of the marketing event.",
                 "format":"date-time"
              },
              "eventOrganizer":{
                 "type":"string",
                 "description":"The name of the organizer of the marketing event."
              },
              "eventDescription":{
                 "type":"string",
                 "description":"The description of the marketing event."
              },
              "eventUrl":{
                 "type":"string",
                 "description":"A URL in the external event application where the marketing event can be managed."
              },
              "eventCancelled":{
                 "type":"boolean",
                 "description":"Indicates if the marketing event has been cancelled. Defaults to `false`"
              },
              "customProperties":{
                 "type":"array",
                 "description":"A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set. In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts. ",
                 "items":{
                    "$ref":"#/definitions/PropertyValue"
                 }
              }
           }
        },
        "BatchResponseSubscriberEmailResponse":{
           "required":[
              "completedAt",
              "results",
              "startedAt",
              "status"
           ],
           "type":"object",
           "properties":{
              "status":{
                 "type":"string",
                 "enum":[
                    "PENDING",
                    "PROCESSING",
                    "CANCELED",
                    "COMPLETE"
                 ]
              },
              "results":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/SubscriberEmailResponse"
                 }
              },
              "numErrors":{
                 "type":"integer",
                 "format":"int32"
              },
              "errors":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/StandardError"
                 }
              },
              "requestedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "startedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "completedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "links":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              }
           }
        },
        "ErrorCategory":{
           "required":[
              "httpStatus",
              "name"
           ],
           "type":"object",
           "properties":{
              "name":{
                 "type":"string"
              },
              "httpStatus":{
                 "type":"string",
                 "enum":[
                    "CONTINUE",
                    "SWITCHING_PROTOCOLS",
                    "PROCESSING",
                    "OK",
                    "CREATED",
                    "ACCEPTED",
                    "NON_AUTHORITATIVE_INFORMATION",
                    "NO_CONTENT",
                    "RESET_CONTENT",
                    "PARTIAL_CONTENT",
                    "MULTI_STATUS",
                    "ALREADY_REPORTED",
                    "IM_USED",
                    "MULTIPLE_CHOICES",
                    "MOVED_PERMANENTLY",
                    "FOUND",
                    "SEE_OTHER",
                    "NOT_MODIFIED",
                    "USE_PROXY",
                    "TEMPORARY_REDIRECT",
                    "PERMANENT_REDIRECT",
                    "BAD_REQUEST",
                    "UNAUTHORIZED",
                    "PAYMENT_REQUIRED",
                    "FORBIDDEN",
                    "NOT_FOUND",
                    "METHOD_NOT_ALLOWED",
                    "NOT_ACCEPTABLE",
                    "PROXY_AUTHENTICATION_REQUIRED",
                    "REQUEST_TIMEOUT",
                    "CONFLICT",
                    "GONE",
                    "LENGTH_REQUIRED",
                    "PRECONDITION_FAILED",
                    "REQUEST_ENTITY_TOO_LARGE",
                    "REQUEST_URI_TOO_LONG",
                    "UNSUPPORTED_MEDIA_TYPE",
                    "REQUESTED_RANGE_NOT_SATISFIABLE",
                    "EXPECTATION_FAILED",
                    "IM_A_TEAPOT",
                    "MISDIRECTED_REQUEST",
                    "UNPROCESSABLE_ENTITY",
                    "LOCKED",
                    "FAILED_DEPENDENCY",
                    "UPGRADE_REQUIRED",
                    "PRECONDITION_REQUIRED",
                    "TOO_MANY_REQUESTS",
                    "REQUEST_HEADERS_FIELDS_TOO_LARGE",
                    "INTERNAL_STALE_SERVICE_DISCOVERY",
                    "UNAVAILABLE_FOR_LEGAL_REASONS",
                    "MIGRATION_IN_PROGRESS",
                    "INTERNAL_SERVER_ERROR",
                    "NOT_IMPLEMENTED",
                    "BAD_GATEWAY",
                    "SERVICE_UNAVAILABLE",
                    "GATEWAY_TIMEOUT",
                    "HTTP_VERSION_NOT_SUPPORTED",
                    "VARIANT_ALSO_NEGOTIATES",
                    "INSUFFICIENT_STORAGE",
                    "LOOP_DETECTED",
                    "NOT_EXTENDED",
                    "NETWORK_AUTHENTICATION_REQUIRED"
                 ]
              }
           }
        },
        "MarketingEventPublicDefaultResponse":{
           "required":[
              "createdAt",
              "eventName",
              "eventOrganizer",
              "id",
              "updatedAt"
           ],
           "type":"object",
           "properties":{
              "eventName":{
                 "type":"string",
                 "description":"The name of the marketing event."
              },
              "eventType":{
                 "type":"string",
                 "description":"The type of the marketing event."
              },
              "startDateTime":{
                 "type":"string",
                 "description":"The start date and time of the marketing event.",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "description":"The end date and time of the marketing event.",
                 "format":"date-time"
              },
              "eventOrganizer":{
                 "type":"string",
                 "description":"The name of the organizer of the marketing event."
              },
              "eventDescription":{
                 "type":"string",
                 "description":"The description of the marketing event."
              },
              "eventUrl":{
                 "type":"string",
                 "description":"A URL in the external event application where the marketing event can be managed."
              },
              "eventCancelled":{
                 "type":"boolean",
                 "description":"Indicates if the marketing event has been cancelled."
              },
              "customProperties":{
                 "type":"array",
                 "description":"A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set. In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts. ",
                 "items":{
                    "$ref":"#/definitions/PropertyValue"
                 }
              },
              "id":{
                 "type":"string"
              },
              "createdAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "updatedAt":{
                 "type":"string",
                 "format":"date-time"
              }
           }
        },
        "BatchResponseSubscriberVidResponse":{
           "required":[
              "completedAt",
              "results",
              "startedAt",
              "status"
           ],
           "type":"object",
           "properties":{
              "status":{
                 "type":"string",
                 "enum":[
                    "PENDING",
                    "PROCESSING",
                    "CANCELED",
                    "COMPLETE"
                 ]
              },
              "results":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/SubscriberVidResponse"
                 }
              },
              "numErrors":{
                 "type":"integer",
                 "format":"int32"
              },
              "errors":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/StandardError"
                 }
              },
              "requestedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "startedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "completedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "links":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              }
           }
        },
        "MarketingEventDefaultResponse":{
           "required":[
              "eventName",
              "eventOrganizer"
           ],
           "type":"object",
           "properties":{
              "eventName":{
                 "type":"string",
                 "description":"The name of the marketing event."
              },
              "eventType":{
                 "type":"string",
                 "description":"The type of the marketing event."
              },
              "startDateTime":{
                 "type":"string",
                 "description":"The start date and time of the marketing event.",
                 "format":"date-time"
              },
              "endDateTime":{
                 "type":"string",
                 "description":"The end date and time of the marketing event.",
                 "format":"date-time"
              },
              "eventOrganizer":{
                 "type":"string",
                 "description":"The name of the organizer of the marketing event."
              },
              "eventDescription":{
                 "type":"string",
                 "description":"The description of the marketing event."
              },
              "eventUrl":{
                 "type":"string",
                 "description":"The URL in the external event application where the marketing event can be managed."
              },
              "eventCancelled":{
                 "type":"boolean",
                 "description":"Indicates if the marketing event has been cancelled."
              },
              "customProperties":{
                 "type":"array",
                 "description":"A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set. In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts. ",
                 "items":{
                    "$ref":"#/definitions/PropertyValue"
                 }
              }
           }
        },
        "BatchInputMarketingEventSubscriber":{
           "required":[
              "inputs"
           ],
           "type":"object",
           "properties":{
              "inputs":{
                 "type":"array",
                 "description":"List of HubSpot contacts to subscribe to the marketing event",
                 "items":{
                    "$ref":"#/definitions/MarketingEventSubscriber"
                 }
              }
           },
           "description":"List of HubSpot contacts to subscribe to the marketing event"
        },
        "BatchResponseMarketingEventPublicDefaultResponse":{
           "required":[
              "completedAt",
              "results",
              "startedAt",
              "status"
           ],
           "type":"object",
           "properties":{
              "status":{
                 "type":"string",
                 "enum":[
                    "PENDING",
                    "PROCESSING",
                    "CANCELED",
                    "COMPLETE"
                 ]
              },
              "results":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/MarketingEventPublicDefaultResponse"
                 }
              },
              "numErrors":{
                 "type":"integer",
                 "format":"int32"
              },
              "errors":{
                 "type":"array",
                 "items":{
                    "$ref":"#/definitions/StandardError"
                 }
              },
              "requestedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "startedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "completedAt":{
                 "type":"string",
                 "format":"date-time"
              },
              "links":{
                 "type":"object",
                 "additionalProperties":{
                    "type":"string"
                 }
              }
           }
        },
        "CollectionResponseSmtpApiTokenViewForwardPaging":{
          "required":[
             "results"
          ],
          "type":"object",
          "properties":{
             "results":{
                "type":"array",
                "items":{
                   "$ref":"#/definitions/SmtpApiTokenView"
                }
             },
             "paging":{
                "$ref":"#/definitions/ForwardPaging"
             }
          }
       },
       "EmailSendStatusView":{
          "required":[
             "status",
             "statusId"
          ],
          "type":"object",
          "properties":{
             "statusId":{
                "type":"string",
                "description":"Identifier used to query the status of the send."
             },
             "sendResult":{
                "type":"string",
                "description":"Result of the send.",
                "enum":[
                   "SENT",
                   "IDEMPOTENT_IGNORE",
                   "QUEUED",
                   "IDEMPOTENT_FAIL",
                   "THROTTLED",
                   "EMAIL_DISABLED",
                   "PORTAL_SUSPENDED",
                   "INVALID_TO_ADDRESS",
                   "BLOCKED_DOMAIN",
                   "PREVIOUSLY_BOUNCED",
                   "EMAIL_UNCONFIRMED",
                   "PREVIOUS_SPAM",
                   "PREVIOUSLY_UNSUBSCRIBED_MESSAGE",
                   "PREVIOUSLY_UNSUBSCRIBED_PORTAL",
                   "INVALID_FROM_ADDRESS",
                   "CAMPAIGN_CANCELLED",
                   "VALIDATION_FAILED",
                   "MTA_IGNORE",
                   "BLOCKED_ADDRESS",
                   "PORTAL_OVER_LIMIT",
                   "PORTAL_EXPIRED",
                   "PORTAL_MISSING_MARKETING_SCOPE",
                   "MISSING_TEMPLATE_PROPERTIES",
                   "MISSING_REQUIRED_PARAMETER",
                   "PORTAL_AUTHENTICATION_FAILURE",
                   "MISSING_CONTENT",
                   "CORRUPT_INPUT",
                   "TEMPLATE_RENDER_EXCEPTION",
                   "GRAYMAIL_SUPPRESSED",
                   "UNCONFIGURED_SENDING_DOMAIN",
                   "UNDELIVERABLE",
                   "CANCELLED_ABUSE",
                   "QUARANTINED_ADDRESS",
                   "ADDRESS_ONLY_ACCEPTED_ON_PROD",
                   "PORTAL_NOT_AUTHORIZED_FOR_APPLICATION",
                   "ADDRESS_LIST_BOMBED",
                   "ADDRESS_OPTED_OUT",
                   "RECIPIENT_FATIGUE_SUPPRESSED",
                   "TOO_MANY_RECIPIENTS",
                   "PREVIOUSLY_UNSUBSCRIBED_BRAND",
                   "NON_MARKETABLE_CONTACT",
                   "PREVIOUSLY_UNSUBSCRIBED_BUSINESS_UNIT"
                ]
             },
             "requestedAt":{
                "type":"string",
                "description":"Time when the send was requested.",
                "format":"date-time"
             },
             "startedAt":{
                "type":"string",
                "description":"Time when the send began processing.",
                "format":"date-time"
             },
             "completedAt":{
                "type":"string",
                "description":"Time when the send was completed.",
                "format":"date-time"
             },
             "status":{
                "type":"string",
                "description":"Status of the send request.",
                "enum":[
                   "PENDING",
                   "PROCESSING",
                   "CANCELED",
                   "COMPLETE"
                ]
             },
             "eventId":{
                "$ref":"#/definitions/EventIdView"
             }
          },
          "description":"Describes the status of an email send request."
       },
       "SmtpApiTokenRequestEgg":{
          "required":[
             "campaignName",
             "createContact"
          ],
          "type":"object",
          "properties":{
             "createContact":{
                "type":"boolean",
                "description":"Indicates whether a contact should be created for email recipients."
             },
             "campaignName":{
                "type":"string",
                "description":"A name for the campaign tied to the SMTP API token."
             }
          },
          "description":"A request object to create a SMTP API token"
       },
       "ForwardPaging":{
          "type":"object",
          "properties":{
             "next":{
                "$ref":"#/definitions/NextPage"
             }
          }
       },
       "PublicSingleSendRequestEgg":{
          "required":[
             "emailId",
             "message"
          ],
          "type":"object",
          "properties":{
             "emailId":{
                "type":"integer",
                "description":"The content ID for the transactional email, which can be found in email tool UI.",
                "format":"int32"
             },
             "message":{
                "$ref":"#/definitions/PublicSingleSendEmail"
             },
             "contactProperties":{
                "type":"object",
                "additionalProperties":{
                   "type":"string"
                },
                "description":"The contactProperties field is a map of contact property values. Each contact property value contains a name and value property. Each property will get set on the contact record and will be visible in the template under {{ contact.NAME }}. Use these properties when you want to set a contact property while you’re sending the email. For example, when sending a reciept you may want to set a last_paid_date property, as the sending of the receipt will have information about the last payment."
             },
             "customProperties":{
                "type":"object",
                "additionalProperties":{
                   "type":"object",
                   "properties":{
                      
                   }
                },
                "description":"The customProperties field is a map of property values. Each property value contains a name and value property. Each property will be visible in the template under {{ custom.NAME }}. Note: Custom properties do not currently support arrays. To provide a listing in an email, one workaround is to build an HTML list (either with tables or ul) and specify it as a custom property."
             }
          },
          "description":"A request to send a single transactional email asynchronously."
       },
       "EventIdView":{
          "required":[
             "created",
             "id"
          ],
          "type":"object",
          "properties":{
             "created":{
                "type":"string",
                "description":"Time of event creation.",
                "format":"date-time"
             },
             "id":{
                "type":"string",
                "description":"Identifier of event.",
                "format":"uuid"
             }
          },
          "description":"The ID of a send event."
       },
       "SmtpApiTokenView":{
          "required":[
             "campaignName",
             "createContact",
             "createdAt",
             "createdBy",
             "emailCampaignId",
             "id"
          ],
          "type":"object",
          "properties":{
             "id":{
                "type":"string",
                "description":"User name to log into the HubSpot SMTP server."
             },
             "createdBy":{
                "type":"string",
                "description":"Email address of the user that sent the token creation request."
             },
             "password":{
                "type":"string",
                "description":"Password used to log into the HubSpot SMTP server."
             },
             "emailCampaignId":{
                "type":"string",
                "description":"Identifier assigned to the campaign provided in the token creation request."
             },
             "createdAt":{
                "type":"string",
                "description":"Timestamp generated when a token is created.",
                "format":"date-time"
             },
             "createContact":{
                "type":"boolean",
                "description":"Indicates whether a contact should be created for email recipients."
             },
             "campaignName":{
                "type":"string",
                "description":"A name for the campaign tied to the token."
             }
          },
          "description":"A SMTP API token provides both an ID and password that can be used to send email through the HubSpot SMTP API."
       },
       "NextPage":{
          "required":[
             "after"
          ],
          "type":"object",
          "properties":{
             "after":{
                "type":"string"
             },
             "link":{
                "type":"string"
             }
          }
       },
       "PublicSingleSendEmail":{
          "required":[
             "to"
          ],
          "type":"object",
          "properties":{
             "from":{
                "type":"string",
                "description":"The From header for the email."
             },
             "to":{
                "type":"string",
                "description":"The recipient of the email."
             },
             "sendId":{
                "type":"string",
                "description":"ID for a particular send. No more than one email will be sent per sendId."
             },
             "replyTo":{
                "type":"array",
                "description":"List of Reply-To header values for the email.",
                "items":{
                   "type":"string"
                }
             },
             "cc":{
                "type":"array",
                "description":"List of email addresses to send as Cc.",
                "items":{
                   "type":"string"
                }
             },
             "bcc":{
                "type":"array",
                "description":"List of email addresses to send as Bcc.",
                "items":{
                   "type":"string"
                }
             }
          },
          "description":"A JSON object containing anything you want to override."
       },

       "ExtensionActionDefinitionPatch":{
        "type":"object",
        "properties":{
           "actionUrl":{
              "type":"string",
              "description":"The URL that will accept an HTTPS request each time workflows executes the custom action."
           },
           "published":{
              "type":"boolean",
              "description":"Whether this custom action is published to customers."
           },
           "inputFields":{
              "type":"array",
              "description":"The list of input fields to display in this custom action.",
              "items":{
                 "$ref":"#/definitions/InputFieldDefinition"
              }
           },
           "objectRequestOptions":{
              "$ref":"#/definitions/ObjectRequestOptions"
           },
           "inputFieldDependencies":{
              "type":"array",
              "description":"A list of dependencies between the input fields. These configure when the input fields should be visible.",
              "items":{
                 "oneOf":[
                    {
                       "$ref":"#/definitions/SingleFieldDependency"
                    },
                    {
                       "$ref":"#/definitions/ConditionalSingleFieldDependency"
                    }
                 ]
              }
           },
           "labels":{
              "type":"object",
              "additionalProperties":{
                 "$ref":"#/definitions/ActionLabels"
              },
              "description":"The user-facing labels for the custom action."
           },
           "objectTypes":{
              "type":"array",
              "description":"The object types that this custom action supports.",
              "items":{
                 "type":"string"
              }
           }
        },
        "description":"Fields on custom workflow action to be updated."
     },
     "CallbackCompletionRequest":{
        "required":[
           "outputFields"
        ],
        "type":"object",
        "properties":{
           "outputFields":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              },
              "description":"A map of action output names and values."
           }
        },
        "description":"Any information to send back to Workflows when completing an action callback.",
        "example":{
           "outputFields":{
              "hs_execution_state":"SUCCESS"
           }
        }
     },
     "ActionRevision":{
        "required":[
           "createdAt",
           "definition",
           "id",
           "revisionId"
        ],
        "type":"object",
        "properties":{
           "definition":{
              "$ref":"#/definitions/ExtensionActionDefinition"
           },
           "createdAt":{
              "type":"string",
              "description":"The date the revision was created.",
              "format":"date-time"
           },
           "id":{
              "type":"string"
           },
           "revisionId":{
              "type":"string",
              "description":"The version number of the custom action."
           }
        },
        "description":"A revision of this custom action."
     },
     "CollectionResponseActionRevisionForwardPaging":{
        "required":[
           "results"
        ],
        "type":"object",
        "properties":{
           "results":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/ActionRevision"
              }
           },
           "paging":{
              "$ref":"#/definitions/ForwardPaging"
           }
        }
     },
     "ExtensionActionDefinitionInput":{
        "required":[
           "actionUrl",
           "functions",
           "inputFields",
           "labels",
           "objectTypes",
           "published"
        ],
        "type":"object",
        "properties":{
           "functions":{
              "type":"array",
              "description":"A list of functions associated with the custom workflow action.",
              "items":{
                 "$ref":"#/definitions/ActionFunction"
              }
           },
           "actionUrl":{
              "type":"string",
              "description":"The URL that will accept an HTTPS request each time workflows executes the custom action."
           },
           "published":{
              "type":"boolean",
              "description":"Whether this custom action is published to customers."
           },
           "archivedAt":{
              "type":"integer",
              "description":"The date that this custom action was archived, if the custom action is archived.",
              "format":"int64"
           },
           "inputFields":{
              "type":"array",
              "description":"The list of input fields to display in this custom action.",
              "items":{
                 "$ref":"#/definitions/InputFieldDefinition"
              }
           },
           "objectRequestOptions":{
              "$ref":"#/definitions/ObjectRequestOptions"
           },
           "inputFieldDependencies":{
              "type":"array",
              "description":"A list of dependencies between the input fields. These configure when the input fields should be visible.",
              "items":{
                 "oneOf":[
                    {
                       "$ref":"#/definitions/SingleFieldDependency"
                    },
                    {
                       "$ref":"#/definitions/ConditionalSingleFieldDependency"
                    }
                 ]
              }
           },
           "labels":{
              "type":"object",
              "additionalProperties":{
                 "$ref":"#/definitions/ActionLabels"
              },
              "description":"The user-facing labels for the custom action."
           },
           "objectTypes":{
              "type":"array",
              "description":"The object types that this custom action supports.",
              "items":{
                 "type":"string"
              }
           }
        },
        "description":"State of custom workflow action to be created."
     },
     "ActionFunctionIdentifier":{
        "required":[
           "functionType"
        ],
        "type":"object",
        "properties":{
           "functionType":{
              "type":"string",
              "description":"The type of function. This determines when the function will be called.",
              "enum":[
                 "PRE_ACTION_EXECUTION",
                 "PRE_FETCH_OPTIONS",
                 "POST_FETCH_OPTIONS"
              ]
           },
           "id":{
              "type":"string",
              "description":"The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types."
           }
        },
        "description":"A serverless function associated with this custom workflow action."
     },
     "CallbackCompletionBatchRequest":{
        "required":[
           "callbackId",
           "outputFields"
        ],
        "type":"object",
        "properties":{
           "callbackId":{
              "type":"string",
              "description":"The ID of the callback to complete."
           },
           "outputFields":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              },
              "description":"A map of action output names and values."
           }
        },
        "description":"Any information to send back to Workflows when completing an action callback as part of a batch request.",
        "example":{
           "outputFields":{
              "hs_execution_state":"SUCCESS"
           },
           "callbackId":"ap-123-123-123-0"
        }
     },
     "FieldTypeDefinition":{
        "required":[
           "name",
           "options",
           "type"
        ],
        "type":"object",
        "properties":{
           "name":{
              "type":"string",
              "description":"The input field name."
           },
           "type":{
              "type":"string",
              "description":"The data type of the field.",
              "enum":[
                 "string",
                 "number",
                 "bool",
                 "datetime",
                 "enumeration",
                 "date",
                 "phone_number",
                 "currency_number",
                 "json",
                 "object_coordinates"
              ]
           },
           "fieldType":{
              "type":"string",
              "description":"Controls how the field appears in HubSpot.",
              "enum":[
                 "booleancheckbox",
                 "checkbox",
                 "date",
                 "file",
                 "number",
                 "phonenumber",
                 "radio",
                 "select",
                 "text",
                 "textarea",
                 "calculation_equation",
                 "calculation_rollup",
                 "calculation_score",
                 "calculation_read_time",
                 "unknown"
              ]
           },
           "options":{
              "type":"array",
              "description":"A list of valid options for the field value.",
              "items":{
                 "$ref":"#/definitions/Option"
              }
           },
           "optionsUrl":{
              "type":"string",
              "description":"A URL that will accept HTTPS requests when the valid options for the field are fetched."
           },
           "referencedObjectType":{
              "type":"string",
              "description":"This can be set to `OWNER` if the field should contain a HubSpot owner value.",
              "enum":[
                 "CONTACT",
                 "COMPANY",
                 "DEAL",
                 "ENGAGEMENT",
                 "TICKET",
                 "OWNER",
                 "PRODUCT",
                 "LINE_ITEM",
                 "BET_DELIVERABLE_SERVICE",
                 "CONTENT",
                 "CONVERSATION",
                 "BET_ALERT",
                 "PORTAL",
                 "QUOTE",
                 "FORM_SUBMISSION_INBOUNDDB",
                 "QUOTA",
                 "UNSUBSCRIBE",
                 "COMMUNICATION",
                 "FEEDBACK_SUBMISSION",
                 "ATTRIBUTION",
                 "SALESFORCE_SYNC_ERROR",
                 "RESTORABLE_CRM_OBJECT",
                 "HUB",
                 "LANDING_PAGE",
                 "PRODUCT_OR_FOLDER",
                 "TASK",
                 "FORM",
                 "MARKETING_EMAIL",
                 "AD_ACCOUNT",
                 "AD_CAMPAIGN",
                 "AD_GROUP",
                 "AD",
                 "KEYWORD",
                 "CAMPAIGN",
                 "SOCIAL_CHANNEL",
                 "SOCIAL_POST",
                 "SITE_PAGE",
                 "BLOG_POST",
                 "IMPORT",
                 "EXPORT",
                 "CTA",
                 "TASK_TEMPLATE",
                 "AUTOMATION_PLATFORM_FLOW",
                 "OBJECT_LIST",
                 "NOTE",
                 "MEETING_EVENT",
                 "CALL",
                 "EMAIL",
                 "PUBLISHING_TASK",
                 "CONVERSATION_SESSION",
                 "CONTACT_CREATE_ATTRIBUTION",
                 "INVOICE",
                 "MARKETING_EVENT",
                 "CONVERSATION_INBOX",
                 "CHATFLOW",
                 "MEDIA_BRIDGE",
                 "SEQUENCE",
                 "SEQUENCE_STEP",
                 "FORECAST",
                 "SNIPPET",
                 "TEMPLATE",
                 "UNKNOWN"
              ]
           }
        },
        "description":"The data type expected by an input field."
     },
     "CollectionResponseExtensionActionDefinitionForwardPaging":{
        "required":[
           "results"
        ],
        "type":"object",
        "properties":{
           "results":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/ExtensionActionDefinition"
              }
           },
           "paging":{
              "$ref":"#/definitions/ForwardPaging"
           }
        }
     },
     "InputFieldDefinition":{
        "required":[
           "isRequired",
           "typeDefinition"
        ],
        "type":"object",
        "properties":{
           "typeDefinition":{
              "$ref":"#/definitions/FieldTypeDefinition"
           },
           "supportedValueTypes":{
              "type":"array",
              "description":"Controls what kind of input a customer can use to specify the field value.",
              "items":{
                 "type":"string",
                 "enum":[
                    "STATIC_VALUE",
                    "OBJECT_PROPERTY",
                    "FIELD_DATA"
                 ]
              }
           },
           "isRequired":{
              "type":"boolean",
              "description":"Whether the field is required for the custom action to be valid"
           }
        },
        "description":"Configuration for an input field on the custom action"
     },
     "BatchInputCallbackCompletionBatchRequest":{
        "required":[
           "inputs"
        ],
        "type":"object",
        "properties":{
           "inputs":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/CallbackCompletionBatchRequest"
              }
           }
        }
     },
     "ExtensionActionDefinition":{
        "required":[
           "actionUrl",
           "functions",
           "id",
           "inputFields",
           "labels",
           "objectTypes",
           "published",
           "revisionId"
        ],
        "type":"object",
        "properties":{
           "id":{
              "type":"string",
              "description":"The ID of the custom action."
           },
           "revisionId":{
              "type":"string"
           },
           "functions":{
              "type":"array",
              "description":"A list of functions associated with the custom workflow action.",
              "items":{
                 "$ref":"#/definitions/ActionFunctionIdentifier"
              }
           },
           "actionUrl":{
              "type":"string",
              "description":"The URL that will accept an HTTPS request each time workflows executes the custom action."
           },
           "published":{
              "type":"boolean",
              "description":"Whether this custom action is published to customers."
           },
           "archivedAt":{
              "type":"integer",
              "description":"The date that this custom action was archived, if the custom action is archived.",
              "format":"int64"
           },
           "inputFields":{
              "type":"array",
              "description":"The list of input fields to display in this custom action.",
              "items":{
                 "$ref":"#/definitions/InputFieldDefinition"
              }
           },
           "objectRequestOptions":{
              "$ref":"#/definitions/ObjectRequestOptions"
           },
           "inputFieldDependencies":{
              "type":"array",
              "description":"A list of dependencies between the input fields. These configure when the input fields should be visible.",
              "items":{
                 "oneOf":[
                    {
                       "$ref":"#/definitions/SingleFieldDependency"
                    },
                    {
                       "$ref":"#/definitions/ConditionalSingleFieldDependency"
                    }
                 ]
              }
           },
           "labels":{
              "type":"object",
              "additionalProperties":{
                 "$ref":"#/definitions/ActionLabels"
              },
              "description":"The user-facing labels for the custom action."
           },
           "objectTypes":{
              "type":"array",
              "description":"The object types that this custom action supports.",
              "items":{
                 "type":"string"
              }
           }
        },
        "description":"Configuration for custom workflow action."
     },
     "ObjectRequestOptions":{
        "required":[
           "properties"
        ],
        "type":"object",
        "properties":{
           "properties":{
              "type":"array",
              "description":"A list of properties of the CRM object to include with the request to the `actionUrl`.",
              "items":{
                 "type":"string"
              }
           }
        },
        "description":"Configures what properties of the enrolled CRM object are included in the action execution request"
     },
     "Option":{
        "required":[
           "description",
           "displayOrder",
           "doubleData",
           "hidden",
           "label",
           "readOnly",
           "value"
        ],
        "type":"object",
        "properties":{
           "label":{
              "type":"string",
              "description":"The user-facing label for the option."
           },
           "value":{
              "type":"string",
              "description":"The internal value for the option. This is what will be included in the execution request to the `actionUrl`."
           },
           "displayOrder":{
              "type":"integer",
              "format":"int32"
           },
           "doubleData":{
              "type":"number"
           },
           "hidden":{
              "type":"boolean"
           },
           "description":{
              "type":"string"
           },
           "readOnly":{
              "type":"boolean"
           }
        },
        "description":"An option for a field value."
     },
     "SingleFieldDependency":{
        "title":"SINGLE_FIELD",
        "required":[
           "controllingFieldName",
           "dependencyType",
           "dependentFieldNames"
        ],
        "type":"object",
        "properties":{
           "dependencyType":{
              "type":"string",
              "enum":[
                 "SINGLE_FIELD"
              ],
              "default":"SINGLE_FIELD"
           },
           "dependentFieldNames":{
              "type":"array",
              "items":{
                 "type":"string"
              }
           },
           "controllingFieldName":{
              "type":"string"
           }
        }
     },
     "ConditionalSingleFieldDependency":{
        "title":"CONDITIONAL_SINGLE_FIELD",
        "required":[
           "controllingFieldName",
           "controllingFieldValue",
           "dependencyType",
           "dependentFieldNames"
        ],
        "type":"object",
        "properties":{
           "dependencyType":{
              "type":"string",
              "enum":[
                 "CONDITIONAL_SINGLE_FIELD"
              ],
              "default":"CONDITIONAL_SINGLE_FIELD"
           },
           "dependentFieldNames":{
              "type":"array",
              "items":{
                 "type":"string"
              }
           },
           "controllingFieldName":{
              "type":"string"
           },
           "controllingFieldValue":{
              "type":"string"
           }
        }
     },
     "CollectionResponseActionFunctionIdentifierNoPaging":{
        "required":[
           "results"
        ],
        "type":"object",
        "properties":{
           "results":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/ActionFunctionIdentifier"
              }
           }
        }
     },
     "ActionFunction":{
        "required":[
           "functionSource",
           "functionType"
        ],
        "type":"object",
        "properties":{
           "functionSource":{
              "type":"string",
              "description":"The function source code."
           },
           "functionType":{
              "type":"string",
              "description":"The type of function. This determines when the function will be called.",
              "enum":[
                 "PRE_ACTION_EXECUTION",
                 "PRE_FETCH_OPTIONS",
                 "POST_FETCH_OPTIONS"
              ]
           },
           "id":{
              "type":"string",
              "description":"The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types."
           }
        },
        "description":"A serverless function associated with this custom workflow action."
     },
     "ActionLabels":{
        "required":[
           "actionName"
        ],
        "type":"object",
        "properties":{
           "inputFieldLabels":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              },
              "description":"A map of input field names to the user-facing labels."
           },
           "inputFieldDescriptions":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              },
              "description":"A map of input field names to descriptions for the fields. These will show up as tooltips when users are editing your action."
           },
           "actionName":{
              "type":"string",
              "description":"The name of this custom action. This is what will show up when users are selecting an action in the workflows app."
           },
           "actionDescription":{
              "type":"string",
              "description":"A description for this custom action. This will show up in the action editor along with the input fields."
           },
           "appDisplayName":{
              "type":"string",
              "description":"The name to be displayed at the top of the action editor in the workflows app."
           },
           "actionCardContent":{
              "type":"string",
              "description":"The label to be displayed in the action card of the workflow editor once this custom action has been added to a workflow."
           }
        },
        "description":"User-facing labels for this custom workflow action."
     },
     "IdentificationTokenResponse":{
      "required":[
         "token"
      ],
      "type":"object",
      "properties":{
         "token":{
            "type":"string"
         }
      },
      "description":"The identification token to be passed to the Conversations JS API to identify the visitor",
      "example":{
         "token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
      }
   },
   "IdentificationTokenGenerationRequest":{
      "required":[
         "email"
      ],
      "type":"object",
      "properties":{
         "email":{
            "type":"string",
            "description":"The email of the visitor that you wish to identify"
         },
         "firstName":{
            "type":"string",
            "description":"The first name of the visitor that you wish to identify. This value will only be set in HubSpot for new contacts and existing contacts where first name is unknown. Optional."
         },
         "lastName":{
            "type":"string",
            "description":"The last name of the visitor that you wish to identify. This value will only be set in HubSpot for new contacts and existing contacts where last name is unknown. Optional."
         }
      },
      "description":"Information used to generate a token",
      "example":{
         "email":"visitor-email@example.com",
         "firstName":"Gob",
         "lastName":"Bluth"
      }
   },
   "CardCreateRequest": {
    "required": [
    "actions",
    "display",
    "fetch",
    "title"
    ],
    "type": "object",
    "properties": {
    "title": {
    "type": "string",
    "description": "The top-level title for this card. Displayed to users in the CRM UI."
    },
    "fetch": {
    "$ref": "#/definitions/CardFetchBody"
    },
    "display": {
    "$ref": "#/definitions/CardDisplayBody"
    },
    "actions": {
    "$ref": "#/definitions/CardActions"
    }
    },
    "description": "State of card definition to be created",
    "example": {
    "fetch": {
    "objectTypes": [
    {
    "name": "contacts",
    "propertiesToSend": [
    "email",
    "firstname"
    ]
    }
    ],
    "targetUrl": "https://www.example.com/hubspot/target"
    },
    "display": {
    "properties": {
    "dataType": "STRING",
    "name": "pet_name",
    "label": "Pets Name"
    }
    },
    "title": "PetSpot",
    "actions": {
    "baseUrls": [
    "https://www.example.com/hubspot"
    ]
    }
    }
    },
    "CardFetchBodyPatch": {
    "required": [
    "objectTypes"
    ],
    "type": "object",
    "properties": {
    "targetUrl": {
    "type": "string",
    "description": "URL to a service endpoint that will respond with details for this card. HubSpot will call this endpoint each time a user visits a CRM record page where this card should be displayed."
    },
    "objectTypes": {
    "type": "array",
    "description": "An array of CRM object types where this card should be displayed. HubSpot will call your target URL whenever a user visits a record page of the types defined here.",
    "items": {
    "$ref": "#/definitions/CardObjectTypeBody"
    }
    }
    },
    "description": "Variant of CardFetchBody with fields as optional for patches"
    },
    "CardDisplayProperty": {
    "required": [
    "dataType",
    "label",
    "name",
    "options"
    ],
    "type": "object",
    "properties": {
    "name": {
    "type": "string",
    "description": "An internal identifier for this property. This value must be unique TODO."
    },
    "label": {
    "type": "string",
    "description": "The label for this property as you'd like it displayed to users."
    },
    "dataType": {
    "type": "string",
    "description": "Type of data represented by this property.",
    "enum": [
    "BOOLEAN",
    "CURRENCY",
    "DATE",
    "DATETIME",
    "EMAIL",
    "LINK",
    "NUMERIC",
    "STRING",
    "STATUS"
    ]
    },
    "options": {
    "type": "array",
    "description": "An array of available options that can be displayed. Only used in when `dataType` is `STATUS`.",
    "items": {
    "$ref": "#/definitions/DisplayOption"
    }
    }
    },
    "description": "Definition for a card display property."
    },
    "IntegratorObjectResult": {
    "required": [
    "actions",
    "id",
    "title",
    "tokens"
    ],
    "type": "object",
    "properties": {
    "id": {
    "type": "string"
    },
    "title": {
    "type": "string"
    },
    "linkUrl": {
    "type": "string"
    },
    "tokens": {
    "type": "array",
    "items": {
    "$ref": "#/definitions/ObjectToken"
    }
    },
    "actions": {
    "type": "array",
    "items": {
    "oneOf": [
    {
    "$ref": "#/definitions/ActionHookActionBody"
    },
    {
    "$ref": "#/definitions/IFrameActionBody"
    }
    ]
    }
    }
    }
    },
    "CardFetchBody": {
    "required": [
    "objectTypes",
    "targetUrl"
    ],
    "type": "object",
    "properties": {
    "targetUrl": {
    "type": "string",
    "description": "URL to a service endpoints that will respond with card details. HubSpot will call this endpoint each time a user visits a CRM record page where this card should be displayed."
    },
    "objectTypes": {
    "type": "array",
    "description": "An array of CRM object types where this card should be displayed. HubSpot will call your data fetch URL whenever a user visits a record page of the types defined here.",
    "items": {
    "$ref": "#/definitions/CardObjectTypeBody"
    }
    }
    },
    "description": "Configuration for this card's data fetch request."
    },
    "CardObjectTypeBody": {
    "required": [
    "name",
    "propertiesToSend"
    ],
    "type": "object",
    "properties": {
    "name": {
    "type": "string",
    "description": "A CRM object type where this card should be displayed.",
    "enum": [
    "contacts",
    "deals",
    "companies",
    "tickets"
    ]
    },
    "propertiesToSend": {
    "type": "array",
    "description": "An array of properties that should be sent to this card's target URL when the data fetch request is made. Must be valid properties for the corresponding CRM object type.",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "TopLevelActions": {
    "required": [
    "secondary"
    ],
    "type": "object",
    "properties": {
    "settings": {
    "$ref": "#/definitions/IFrameActionBody"
    },
    "primary": {
    "oneOf": [
    {
    "$ref": "#/definitions/ActionHookActionBody"
    },
    {
    "$ref": "#/definitions/IFrameActionBody"
    }
    ]
    },
    "secondary": {
    "type": "array",
    "items": {
    "oneOf": [
    {
    "$ref": "#/definitions/ActionHookActionBody"
    },
    {
    "$ref": "#/definitions/IFrameActionBody"
    }
    ]
    }
    }
    }
    },
    "DisplayOption": {
    "required": [
    "label",
    "name",
    "type"
    ],
    "type": "object",
    "properties": {
    "name": {
    "type": "string",
    "description": "JSON-friendly unique name for option."
    },
    "label": {
    "type": "string",
    "description": "The text that will be displayed to users for this option."
    },
    "type": {
    "type": "string",
    "description": "The type of status.",
    "enum": [
    "DEFAULT",
    "SUCCESS",
    "WARNING",
    "DANGER",
    "INFO"
    ]
    }
    },
    "description": "Option definition for STATUS dataTypes."
    },
    "ActionHookActionBody": {
    "title": "ACTION_HOOK",
    "required": [
    "httpMethod",
    "propertyNamesIncluded",
    "type",
    "url"
    ],
    "type": "object",
    "properties": {
    "type": {
    "type": "string",
    "enum": [
    "ACTION_HOOK"
    ],
    "default": "ACTION_HOOK"
    },
    "confirmation": {
    "$ref": "#/definitions/ActionConfirmationBody"
    },
    "httpMethod": {
    "type": "string",
    "enum": [
    "CONNECT",
    "DELETE",
    "GET",
    "HEAD",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
    "TRACE"
    ]
    },
    "url": {
    "type": "string"
    },
    "label": {
    "type": "string"
    },
    "propertyNamesIncluded": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "CardListResponse": {
    "required": [
    "results"
    ],
    "type": "object",
    "properties": {
    "results": {
    "type": "array",
    "description": "List of card definitions",
    "items": {
    "$ref": "#/definitions/CardResponse"
    }
    }
    },
    "description": "List of card definitions"
    },
    "ObjectToken": {
    "required": [
    "value"
    ],
    "type": "object",
    "properties": {
    "name": {
    "type": "string"
    },
    "label": {
    "type": "string"
    },
    "dataType": {
    "type": "string",
    "enum": [
    "BOOLEAN",
    "CURRENCY",
    "DATE",
    "DATETIME",
    "EMAIL",
    "LINK",
    "NUMERIC",
    "STRING",
    "STATUS"
    ]
    },
    "value": {
    "type": "string"
    }
    }
    },
    "ActionConfirmationBody": {
    "required": [
    "cancelButtonLabel",
    "confirmButtonLabel",
    "prompt"
    ],
    "type": "object",
    "properties": {
    "prompt": {
    "type": "string"
    },
    "confirmButtonLabel": {
    "type": "string"
    },
    "cancelButtonLabel": {
    "type": "string"
    }
    }
    },
    "IFrameActionBody": {
    "title": "IFRAME",
    "required": [
    "height",
    "propertyNamesIncluded",
    "type",
    "url",
    "width"
    ],
    "type": "object",
    "properties": {
    "type": {
    "type": "string",
    "enum": [
    "IFRAME"
    ],
    "default": "IFRAME"
    },
    "width": {
    "type": "integer",
    "format": "int32"
    },
    "height": {
    "type": "integer",
    "format": "int32"
    },
    "url": {
    "type": "string"
    },
    "label": {
    "type": "string"
    },
    "propertyNamesIncluded": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "IntegratorCardPayloadResponse": {
    "required": [
    "totalCount"
    ],
    "type": "object",
    "properties": {
    "totalCount": {
    "type": "integer",
    "description": "The total number of card properties that will be sent in this response.",
    "format": "int32"
    },
    "allItemsLinkUrl": {
    "type": "string",
    "description": "URL to a page the integrator has built that displays all details for this card. This URL will be displayed to users under a `See more [x]` link if there are more than five items in your response, where `[x]` is the value of `itemLabel`."
    },
    "cardLabel": {
    "type": "string",
    "description": "The label to be used for the `allItemsLinkUrl` link (e.g. 'See more tickets'). If not provided, this falls back to the card's title."
    },
    "topLevelActions": {
    "$ref": "#/definitions/TopLevelActions"
    },
    "sections": {
    "type": "array",
    "description": "A list of up to five valid card sub categories.",
    "items": {
    "$ref": "#/definitions/IntegratorObjectResult"
    }
    },
    "responseVersion": {
    "type": "string",
    "enum": [
    "v1",
    "v3"
    ]
    }
    },
    "description": "The card details payload, sent to HubSpot by an app in response to a data fetch request when a user visits a CRM record page."
    },
    "CardResponse": {
    "required": [
    "actions",
    "display",
    "fetch",
    "id",
    "title"
    ],
    "type": "object",
    "properties": {
    "id": {
    "type": "string",
    "description": "Generated unique ID for card."
    },
    "createdAt": {
    "type": "string",
    "description": "When this card was created.",
    "format": "date-time"
    },
    "updatedAt": {
    "type": "string",
    "description": "The last time this card was updated.",
    "format": "date-time"
    },
    "title": {
    "type": "string",
    "description": "Displayed title of this card."
    },
    "fetch": {
    "$ref": "#/definitions/CardFetchBody"
    },
    "display": {
    "$ref": "#/definitions/CardDisplayBody"
    },
    "actions": {
    "$ref": "#/definitions/CardActions"
    }
    },
    "description": "Current state of Card Definition"
    },
    "CardDisplayBody": {
    "required": [
    "properties"
    ],
    "type": "object",
    "properties": {
    "properties": {
    "type": "array",
    "description": "Card display properties.",
    "items": {
    "$ref": "#/definitions/CardDisplayProperty"
    }
    }
    },
    "description": "Configuration for displayed info on a card"
    },
    "CardPatchRequest": {
    "type": "object",
    "properties": {
    "title": {
    "type": "string",
    "description": "The top-level title for this card. Displayed to users in the CRM UI."
    },
    "fetch": {
    "$ref": "#/definitions/CardFetchBodyPatch"
    },
    "display": {
    "$ref": "#/definitions/CardDisplayBody"
    },
    "actions": {
    "$ref": "#/definitions/CardActions"
    }
    },
    "description": "Body for a patch with optional fields",
    "example": {
    "fetch": {
    "objectTypes": [
    {
    "name": "contacts",
    "propertiesToSend": [
    "email",
    "firstname"
    ]
    }
    ],
    "targetUrl": "https://www.example.com/hubspot/target"
    },
    "display": {
    "properties": {
    "dataType": "STRING",
    "name": "pet_name",
    "label": "Pets Name"
    }
    },
    "title": "PetSpot",
    "actions": {
    "baseUrls": [
    "https://www.example.com/hubspot"
    ]
    }
    }
    },
    "CardActions": {
    "required": [
    "baseUrls"
    ],
    "type": "object",
    "properties": {
    "baseUrls": {
    "type": "array",
    "description": "A list of URL prefixes that will be accepted for card action URLs. If your data fetch response includes an action URL that doesn't begin with one of these values, it will result in an error and the card will not be displayed.",
    "items": {
    "type": "string"
    }
    }
    },
    "description": "Configuration for custom user actions on cards.",
    "example": {
    "baseUrls": [
    "https://www.example.com/hubspot"
    ]
    }
    },
   "CollectionResponseAssociatedId":{
      "required":[
         "results"
      ],
      "type":"object",
      "properties":{
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/AssociatedId"
            }
         },
         "paging":{
            "$ref":"#/definitions/Paging"
         }
      }
   },
   "LabelsBetweenObjectPair":{
      "required":[
         "fromObjectId",
         "fromObjectTypeId",
         "labels",
         "toObjectId",
         "toObjectTypeId"
      ],
      "type":"object",
      "properties":{
         "fromObjectTypeId":{
            "type":"string"
         },
         "fromObjectId":{
            "type":"integer",
            "format":"int32"
         },
         "toObjectTypeId":{
            "type":"string"
         },
         "toObjectId":{
            "type":"integer",
            "format":"int32"
         },
         "labels":{
            "type":"array",
            "items":{
               "type":"string"
            }
         }
      }
   },
   "BatchResponseSimplePublicObject":{
      "required":[
         "completedAt",
         "results",
         "startedAt",
         "status"
      ],
      "type":"object",
      "properties":{
         "status":{
            "type":"string",
            "enum":[
               "PENDING",
               "PROCESSING",
               "CANCELED",
               "COMPLETE"
            ]
         },
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObject"
            }
         },
         "requestedAt":{
            "type":"string",
            "format":"date-time"
         },
         "startedAt":{
            "type":"string",
            "format":"date-time"
         },
         "completedAt":{
            "type":"string",
            "format":"date-time"
         },
         "links":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         }
      }
   },
   "FilterGroup":{
      "required":[
         "filters"
      ],
      "type":"object",
      "properties":{
         "filters":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/Filter"
            }
         }
      }
   },
   "MultiAssociatedObjectWithLabel":{
      "required":[
         "associationTypes",
         "toObjectId"
      ],
      "type":"object",
      "properties":{
         "toObjectId":{
            "type":"integer",
            "format":"int32"
         },
         "associationTypes":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/AssociationSpecWithLabel"
            }
         }
      }
   },
   "SimplePublicObjectId":{
      "required":[
         "id"
      ],
      "type":"object",
      "properties":{
         "id":{
            "type":"string"
         }
      }
   },
   "AssociationSpecWithLabel":{
      "required":[
         "category",
         "typeId"
      ],
      "type":"object",
      "properties":{
         "category":{
            "type":"string",
            "enum":[
               "HUBSPOT_DEFINED",
               "USER_DEFINED",
               "INTEGRATOR_DEFINED"
            ]
         },
         "typeId":{
            "type":"integer",
            "format":"int32"
         },
         "label":{
            "type":"string"
         }
      }
   },
   "BatchReadInputSimplePublicObjectId":{
      "required":[
         "inputs",
         "properties",
         "propertiesWithHistory"
      ],
      "type":"object",
      "properties":{
         "properties":{
            "type":"array",
            "items":{
               "type":"string"
            }
         },
         "propertiesWithHistory":{
            "type":"array",
            "items":{
               "type":"string"
            }
         },
         "idProperty":{
            "type":"string"
         },
         "inputs":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObjectId"
            }
         }
      }
   },
   "BatchInputSimplePublicObjectId":{
      "required":[
         "inputs"
      ],
      "type":"object",
      "properties":{
         "inputs":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObjectId"
            }
         }
      }
   },
   "ValueWithTimestamp":{
      "required":[
         "sourceType",
         "timestamp",
         "value"
      ],
      "type":"object",
      "properties":{
         "value":{
            "type":"string"
         },
         "timestamp":{
            "type":"string",
            "format":"date-time"
         },
         "sourceType":{
            "type":"string"
         },
         "sourceId":{
            "type":"string"
         },
         "sourceLabel":{
            "type":"string"
         },
         "updatedByUserId":{
            "type":"integer",
            "format":"int32"
         }
      }
   },
   "CollectionResponseWithTotalSimplePublicObjectForwardPaging":{
      "required":[
         "results",
         "total"
      ],
      "type":"object",
      "properties":{
         "total":{
            "type":"integer",
            "format":"int32"
         },
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObject"
            }
         },
         "paging":{
            "$ref":"#/definitions/ForwardPaging"
         }
      }
   },
   "SimplePublicObject":{
      "required":[
         "createdAt",
         "id",
         "properties",
         "updatedAt"
      ],
      "type":"object",
      "properties":{
         "id":{
            "type":"string"
         },
         "properties":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         },
         "propertiesWithHistory":{
            "type":"object",
            "additionalProperties":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ValueWithTimestamp"
               }
            }
         },
         "createdAt":{
            "type":"string",
            "format":"date-time"
         },
         "updatedAt":{
            "type":"string",
            "format":"date-time"
         },
         "archived":{
            "type":"boolean"
         },
         "archivedAt":{
            "type":"string",
            "format":"date-time"
         }
      },
      "example":{
         "id":"512",
         "properties":{
            "createdate":"2019-10-30T03:30:17.883Z",
            "description":"Onboarding service for data product",
            "hs_cost_of_goods_sold":"600.00",
            "hs_lastmodifieddate":"2019-12-07T16:50:06.678Z",
            "hs_recurring_billing_period":"12",
            "hs_sku":"191902",
            "name":"Implementation Service ",
            "price":"6000.00"
         },
         "createdAt":"2019-10-30T03:30:17.883Z",
         "updatedAt":"2019-12-07T16:50:06.678Z",
         "archived":false
      }
   },
   "BatchInputSimplePublicObjectInput":{
      "required":[
         "inputs"
      ],
      "type":"object",
      "properties":{
         "inputs":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObjectInput"
            }
         }
      }
   },
   "Paging":{
      "type":"object",
      "properties":{
         "next":{
            "$ref":"#/definitions/NextPage"
         },
         "prev":{
            "$ref":"#/definitions/PreviousPage"
         }
      }
   },
   "PublicObjectSearchRequest":{
      "required":[
         "after",
         "filterGroups",
         "limit",
         "properties",
         "sorts"
      ],
      "type":"object",
      "properties":{
         "filterGroups":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/FilterGroup"
            }
         },
         "sorts":{
            "type":"array",
            "items":{
               "type":"string"
            }
         },
         "query":{
            "type":"string"
         },
         "properties":{
            "type":"array",
            "items":{
               "type":"string"
            }
         },
         "limit":{
            "type":"integer",
            "format":"int32"
         },
         "after":{
            "type":"integer",
            "format":"int32"
         }
      }
   },
   "BatchResponseSimplePublicObjectWithErrors":{
      "required":[
         "completedAt",
         "results",
         "startedAt",
         "status"
      ],
      "type":"object",
      "properties":{
         "status":{
            "type":"string",
            "enum":[
               "PENDING",
               "PROCESSING",
               "CANCELED",
               "COMPLETE"
            ]
         },
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObject"
            }
         },
         "numErrors":{
            "type":"integer",
            "format":"int32"
         },
         "errors":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/StandardError"
            }
         },
         "requestedAt":{
            "type":"string",
            "format":"date-time"
         },
         "startedAt":{
            "type":"string",
            "format":"date-time"
         },
         "completedAt":{
            "type":"string",
            "format":"date-time"
         },
         "links":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         }
      }
   },
   "SimplePublicObjectInput":{
      "required":[
         "properties"
      ],
      "type":"object",
      "properties":{
         "properties":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         }
      },
      "example":{
         "properties":{
            "description":"Onboarding service for data product",
            "hs_cost_of_goods_sold":"600.00",
            "hs_recurring_billing_period":"12",
            "hs_sku":"191902",
            "name":"Implementation Service ",
            "price":"6000.00"
         }
      }
   },
   "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging":{
      "required":[
         "results"
      ],
      "type":"object",
      "properties":{
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObjectWithAssociations"
            }
         },
         "paging":{
            "$ref":"#/definitions/ForwardPaging"
         }
      }
   },
   "AssociationSpec":{
      "required":[
         "associationCategory",
         "associationTypeId"
      ],
      "type":"object",
      "properties":{
         "associationCategory":{
            "type":"string",
            "enum":[
               "HUBSPOT_DEFINED",
               "USER_DEFINED",
               "INTEGRATOR_DEFINED"
            ]
         },
         "associationTypeId":{
            "type":"integer",
            "format":"int32"
         }
      }
   },
   "PublicMergeInput":{
      "required":[
         "objectIdToMerge",
         "primaryObjectId"
      ],
      "type":"object",
      "properties":{
         "primaryObjectId":{
            "type":"string"
         },
         "objectIdToMerge":{
            "type":"string"
         }
      }
   },
   "SimplePublicObjectWithAssociations":{
      "required":[
         "createdAt",
         "id",
         "properties",
         "updatedAt"
      ],
      "type":"object",
      "properties":{
         "id":{
            "type":"string"
         },
         "properties":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         },
         "propertiesWithHistory":{
            "type":"object",
            "additionalProperties":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ValueWithTimestamp"
               }
            }
         },
         "createdAt":{
            "type":"string",
            "format":"date-time"
         },
         "updatedAt":{
            "type":"string",
            "format":"date-time"
         },
         "archived":{
            "type":"boolean"
         },
         "archivedAt":{
            "type":"string",
            "format":"date-time"
         },
         "associations":{
            "type":"object",
            "additionalProperties":{
               "$ref":"#/definitions/CollectionResponseAssociatedId"
            }
         }
      },
      "example":{
         "properties":{
            "createdate":"2019-10-30T03:30:17.883Z",
            "description":"Onboarding service for data product",
            "hs_cost_of_goods_sold":"600.00",
            "hs_lastmodifieddate":"2019-12-07T16:50:06.678Z",
            "hs_recurring_billing_period":"12",
            "hs_sku":"191902",
            "name":"Implementation Service ",
            "price":"6000.00"
         }
      }
   },
   "Filter":{
      "required":[
         "operator",
         "propertyName"
      ],
      "type":"object",
      "properties":{
         "value":{
            "type":"string"
         },
         "values":{
            "type":"array",
            "items":{
               "type":"string"
            }
         },
         "propertyName":{
            "type":"string"
         },
         "operator":{
            "type":"string",
            "description":"null",
            "enum":[
               "EQ",
               "NEQ",
               "LT",
               "LTE",
               "GT",
               "GTE",
               "BETWEEN",
               "IN",
               "NOT_IN",
               "HAS_PROPERTY",
               "NOT_HAS_PROPERTY",
               "CONTAINS_TOKEN",
               "NOT_CONTAINS_TOKEN"
            ]
         }
      }
   },
   "BatchInputSimplePublicObjectBatchInput":{
      "required":[
         "inputs"
      ],
      "type":"object",
      "properties":{
         "inputs":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/SimplePublicObjectBatchInput"
            }
         }
      }
   },
   "PreviousPage":{
      "required":[
         "before"
      ],
      "type":"object",
      "properties":{
         "before":{
            "type":"string"
         },
         "link":{
            "type":"string"
         }
      }
   },
   "CollectionResponseMultiAssociatedObjectWithLabelForwardPaging":{
      "required":[
         "results"
      ],
      "type":"object",
      "properties":{
         "results":{
            "type":"array",
            "items":{
               "$ref":"#/definitions/MultiAssociatedObjectWithLabel"
            }
         },
         "paging":{
            "$ref":"#/definitions/ForwardPaging"
         }
      }
   },
   "SimplePublicObjectBatchInput":{
      "required":[
         "id",
         "properties"
      ],
      "type":"object",
      "properties":{
         "properties":{
            "type":"object",
            "additionalProperties":{
               "type":"string"
            }
         },
         "id":{
            "type":"string"
         }
      },
      "example":{
         "id":"1",
         "properties":{
            "description":"Onboarding service for data product",
            "hs_cost_of_goods_sold":"600.00",
            "hs_recurring_billing_period":"12",
            "hs_sku":"191902",
            "name":"Implementation Service ",
            "price":"6000.00"
         }
      }
   },
   "AssociatedId":{
      "required":[
         "id",
         "type"
      ],
      "type":"object",
      "properties":{
         "id":{
            "type":"string"
         },
         "type":{
            "type":"string"
         }
      }
   },
   "PipelineStagePatchInput": {
    "required": [
    "metadata"
    ],
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
    },
    "archived": {
    "type": "boolean",
    "description": "Whether the pipeline is archived."
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "metadata": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    },
    "description": "A JSON object containing properties that are not present on all object pipelines."
    }
    },
    "description": "An input used to update some properties on a pipeline definition.",
    "example": {
    "label": "Done",
    "displayOrder": 1,
    "metadata": {
    "ticketState": "CLOSED"
    }
    }
    },
    "PipelinePatchInput": {
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A unique label used to organize pipelines in HubSpot's UI"
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "archived": {
    "type": "boolean",
    "description": "Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned."
    }
    },
    "description": "An input used to update some properties on a pipeline definition.",
    "example": {
    "label": "My updated pipeline",
    "displayOrder": 0
    }
    },
    "PipelineStage": {
    "required": [
    "archived",
    "createdAt",
    "displayOrder",
    "id",
    "label",
    "metadata",
    "updatedAt"
    ],
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "metadata": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    },
    "description": "A JSON object containing properties that are not present on all object pipelines."
    },
    "id": {
    "type": "string",
    "description": "A unique identifier generated by HubSpot that can be used to retrieve and update the pipeline stage."
    },
    "createdAt": {
    "type": "string",
    "description": "The date the pipeline stage was created. The stages on default pipelines will have createdAt = 0.",
    "format": "date-time"
    },
    "archivedAt": {
    "type": "string",
    "description": "The date the pipeline was archived. `archivedAt` will only be present if the pipeline is archived.",
    "format": "date-time"
    },
    "updatedAt": {
    "type": "string",
    "description": "The date the pipeline stage was last updated.",
    "format": "date-time"
    },
    "archived": {
    "type": "boolean",
    "description": "Whether the pipeline is archived."
    }
    },
    "description": "A pipeline stage definition.",
    "example": {
    "label": "In Progress",
    "displayOrder": 0,
    "metadata": {
    "ticketState": "OPEN"
    },
    "createdAt": "2019-10-30T03:30:17.883Z",
    "updatedAt": "2019-12-07T16:50:06.678Z",
    "archived": false,
    "id": "1234912"
    }
    },
    "CollectionResponsePipelineStageNoPaging": {
    "required": [
    "results"
    ],
    "type": "object",
    "properties": {
    "results": {
    "type": "array",
    "items": {
    "$ref": "#/definitions/PipelineStage"
    }
    }
    }
    },
    "PublicAuditInfo": {
    "required": [
    "action",
    "identifier",
    "portalId"
    ],
    "type": "object",
    "properties": {
    "portalId": {
    "type": "integer",
    "format": "int32"
    },
    "identifier": {
    "type": "string"
    },
    "action": {
    "type": "string"
    },
    "timestamp": {
    "type": "string",
    "format": "date-time"
    },
    "message": {
    "type": "string"
    },
    "rawObject": {
    "type": "object",
    "properties": {}
    },
    "fromUserId": {
    "type": "integer",
    "format": "int32"
    }
    }
    },
    "CollectionResponsePublicAuditInfoNoPaging": {
    "required": [
    "results"
    ],
    "type": "object",
    "properties": {
    "results": {
    "type": "array",
    "items": {
    "$ref": "#/definitions/PublicAuditInfo"
    }
    }
    }
    },
    "Pipeline": {
    "required": [
    "archived",
    "createdAt",
    "displayOrder",
    "id",
    "label",
    "stages",
    "updatedAt"
    ],
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A unique label used to organize pipelines in HubSpot's UI"
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "id": {
    "type": "string",
    "description": "A unique identifier generated by HubSpot that can be used to retrieve and update the pipeline."
    },
    "stages": {
    "type": "array",
    "description": "The stages associated with the pipeline. They can be retrieved and updated via the pipeline stages endpoints.",
    "items": {
    "$ref": "#/definitions/PipelineStage"
    }
    },
    "createdAt": {
    "type": "string",
    "description": "The date the pipeline was created. The default pipelines will have createdAt = 0.",
    "format": "date-time"
    },
    "archivedAt": {
    "type": "string",
    "description": "The date the pipeline was archived. `archivedAt` will only be present if the pipeline is archived.",
    "format": "date-time"
    },
    "updatedAt": {
    "type": "string",
    "description": "The date the pipeline was last updated.",
    "format": "date-time"
    },
    "archived": {
    "type": "boolean",
    "description": "Whether the pipeline is archived."
    }
    },
    "description": "A pipeline definition.",
    "example": {
    "label": "My ticket pipeline",
    "displayOrder": 0,
    "createdAt": "2019-10-30T03:30:17.883Z",
    "updatedAt": "2019-12-07T16:50:06.678Z",
    "archived": false,
    "id": "812723471",
    "stages": [
    {
    "label": "In Progress",
    "displayOrder": 0,
    "metadata": {
    "ticketState": "OPEN"
    },
    "createdAt": "2019-10-30T03:30:17.883Z",
    "updatedAt": "2019-12-07T16:50:06.678Z",
    "archived": false,
    "id": "1234912"
    },
    {
    "label": "Done",
    "displayOrder": 0,
    "metadata": {
    "ticketState": "CLOSED"
    },
    "createdAt": "2019-10-30T03:30:17.883Z",
    "updatedAt": "2019-12-07T16:50:06.678Z",
    "archived": false,
    "id": "1234914"
    }
    ]
    }
    },
    "PipelineStageInput": {
    "required": [
    "displayOrder",
    "label",
    "metadata"
    ],
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "metadata": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    },
    "description": "A JSON object containing properties that are not present on all object pipelines."
    }
    },
    "description": "An input used to create or replace a pipeline stage's definition.",
    "example": {
    "label": "Done",
    "displayOrder": 1,
    "metadata": {
    "ticketState": "CLOSED"
    }
    }
    },
    "CollectionResponsePipelineNoPaging": {
    "required": [
    "results"
    ],
    "type": "object",
    "properties": {
    "results": {
    "type": "array",
    "items": {
    "$ref": "#/definitions/Pipeline"
    }
    }
    }
    },
    "PipelineInput": {
    "required": [
    "displayOrder",
    "label",
    "stages"
    ],
    "type": "object",
    "properties": {
    "label": {
    "type": "string",
    "description": "A unique label used to organize pipelines in HubSpot's UI"
    },
    "displayOrder": {
    "type": "integer",
    "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
    "format": "int32"
    },
    "stages": {
    "type": "array",
    "description": "Pipeline stage inputs used to create the new or replacement pipeline.",
    "items": {
    "$ref": "#/definitions/PipelineStageInput"
    }
    }
    },
    "description": "An input used to create or replace a pipeline's definition.",
    "example": {
    "label": "My replaced pipeline",
    "displayOrder": 0,
    "stages": [
    {
    "label": "In Progress",
    "displayOrder": 0,
    "metadata": {
    "ticketState": "OPEN"
    }
    },
    {
    "label": "Done",
    "displayOrder": 1,
    "metadata": {
    "ticketState": "CLOSED"
    }
    }
    ]
    }
    },
    "ProductSearchResponse": {
      "required": [
      "products"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "products": {
      "type": "array",
      "description": "The list of products that matched the search criteria.",
      "items": {
      "$ref": "#/definitions/Product"
      }
      }
      },
      "description": "A response to a search for products."
      },
      "ImportInvoiceFeature": {
      "required": [
      "enabled"
      ],
      "type": "object",
      "properties": {
      "enabled": {
      "type": "boolean",
      "description": "Indicates if importing invoices from the external account system into HubSpot."
      }
      },
      "description": "Indicates if importing invoices from the external account system into HubSpot is supported for the integration."
      },
      "Address": {
      "type": "object",
      "properties": {
      "country": {
      "type": "string",
      "description": "The country of the address.",
      "example": "United States"
      },
      "countrySubDivisionCode": {
      "type": "string",
      "description": "A region of the county of the address. May represent county, state etc.",
      "example": "NY"
      },
      "city": {
      "type": "string",
      "description": "The city of the address.",
      "example": "New York"
      },
      "postalCode": {
      "type": "string",
      "description": "The postcode/zipcode of the address.",
      "example": "10001"
      },
      "lineOne": {
      "type": "string",
      "description": "The first line of the address.",
      "example": "1 Example Way"
      }
      },
      "description": "Represents an address of a customer"
      },
      "ObjectSyncFeature": {
      "required": [
      "toHubSpot"
      ],
      "type": "object",
      "properties": {
      "toHubSpot": {
      "type": "boolean",
      "description": "Indicates if syncing the object type from the external accounting system into HubSpot is supported."
      }
      }
      },
      "CreateInvoiceSubFeatures": {
      "required": [
      "createCustomer",
      "exchangeRates",
      "invoiceComments",
      "invoiceDiscounts",
      "taxes",
      "terms"
      ],
      "type": "object",
      "properties": {
      "createCustomer": {
      "type": "boolean",
      "description": "Indicates if a new customer can be created in the external accounting system."
      },
      "taxes": {
      "type": "boolean",
      "description": "Indicates if taxes can be specified by the HubSpot user for line items."
      },
      "exchangeRates": {
      "type": "boolean",
      "description": "Indicates if the external accounting system supports fetching exchange rates when create an invoice in HubSpot for a customer billed in a different currency."
      },
      "terms": {
      "type": "boolean",
      "description": "Indicates if the external accounting system supports fetching payment terms."
      },
      "invoiceComments": {
      "type": "boolean",
      "description": "Indicates if a visible comment can be added to invoices."
      },
      "invoiceDiscounts": {
      "type": "boolean",
      "description": "Indicates if invoice-level discounts can be added to invoices."
      }
      },
      "description": "Lists the individual aspects of creating invoices that are enabled for the integration, as part of the create invoice flow in HubSpot."
      },
      "TermsResponse": {
      "required": [
      "terms"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "terms": {
      "type": "array",
      "description": "The list of payment terms that matched the search criteria.",
      "items": {
      "$ref": "#/definitions/AccountingExtensionTerm"
      }
      }
      },
      "description": "A response to a search for payment terms."
      },
      "AccountingFeatures": {
      "required": [
      "createInvoice",
      "importInvoice",
      "sync"
      ],
      "type": "object",
      "properties": {
      "createInvoice": {
      "$ref": "#/definitions/CreateInvoiceFeature"
      },
      "importInvoice": {
      "$ref": "#/definitions/ImportInvoiceFeature"
      },
      "sync": {
      "type": "object",
      "additionalProperties": {
      "$ref": "#/definitions/ObjectSyncFeature"
      },
      "description": "Indicates if syncing objects from the external account system into HubSpot is supported for the integration."
      }
      },
      "description": "Outlines the features that are supported by the external accounting system."
      },
      "Product": {
      "required": [
      "id",
      "name",
      "taxExempt",
      "unitPrice"
      ],
      "type": "object",
      "properties": {
      "unitPrice": {
      "$ref": "#/definitions/UnitPrice"
      },
      "taxExempt": {
      "type": "boolean",
      "description": "Identifies if the product is tax exempt or not."
      },
      "salesTaxType": {
      "$ref": "#/definitions/TaxType"
      },
      "name": {
      "type": "string",
      "description": "The display name of the product.",
      "example": "Marketing Services"
      },
      "description": {
      "type": "string",
      "description": "The description of the product.",
      "example": "Website design, Online advertising and SEO."
      },
      "id": {
      "type": "string",
      "description": "The ID of the product in the external accounting system.",
      "example": "prod-123"
      }
      },
      "description": "Representation of a product in the external accounting system."
      },
      "InvoiceUpdateRequest": {
      "type": "object",
      "properties": {
      "externalInvoiceNumber": {
      "type": "string"
      },
      "currencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency used in the invoice to bill the recipient",
      "example": "USD"
      },
      "dueDate": {
      "type": "string",
      "description": "The ISO-8601 due date of the invoice.",
      "format": "date"
      },
      "externalRecipientId": {
      "type": "string",
      "description": "The ID of the invoice recipient. This is the recipient ID from the external accounting system.",
      "example": "152"
      },
      "receivedByRecipientDate": {
      "type": "integer",
      "format": "int64"
      },
      "isVoided": {
      "type": "boolean",
      "description": "States if the invoice is voided or not."
      },
      "receivedByCustomerDate": {
      "type": "string",
      "description": "The ISO-8601 datetime of when the customer received the invoice.",
      "example": "2020-04-01T13:14:15.678Z"
      },
      "invoiceNumber": {
      "type": "string",
      "description": "The number / name of the invoice.",
      "example": "Joe Bloggs #42"
      }
      },
      "description": "The invoice data to update in HubSpot"
      },
      "Tax": {
      "required": [
      "code",
      "name",
      "percentage"
      ],
      "type": "object",
      "properties": {
      "code": {
      "type": "string",
      "description": "The code/ID of the tax in the external accounting system.",
      "example": "tax-1"
      },
      "percentage": {
      "type": "number",
      "description": "The tax percentage. For example, 8.05 represents a 8.05% tax rate.",
      "example": 8.05
      },
      "name": {
      "type": "string",
      "description": "The display name of the tax.",
      "example": "Local Sales Tax"
      }
      },
      "description": "Representation of a tax defined in the external accounting system."
      },
      "CustomerSearchResponseExternal": {
      "required": [
      "@result",
      "customers"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "customers": {
      "type": "array",
      "description": "The list of customers that matched the search criteria.",
      "items": {
      "$ref": "#/definitions/AccountingExtensionCustomer"
      }
      }
      },
      "description": "A response to a search for customers."
      },
      "UpdatedProduct": {
      "required": [
      "id",
      "price",
      "properties",
      "syncAction",
      "updatedAt"
      ],
      "type": "object",
      "properties": {
      "syncAction": {
      "type": "string",
      "description": "The operation to be performed.",
      "enum": [
      "CREATE",
      "UPDATE",
      "DELETE"
      ]
      },
      "updatedAt": {
      "type": "string",
      "description": "The timestamp (ISO8601 format) when the product was updated in the external accounting system.",
      "format": "date-time"
      },
      "price": {
      "type": "number",
      "description": "The price of the product."
      },
      "currencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency of the product price."
      },
      "id": {
      "type": "string",
      "description": "The ID of the product in the external accounting system."
      },
      "properties": {
      "type": "object",
      "additionalProperties": {
      "type": "string"
      },
      "description": "A map of key-value product properties to be imported."
      }
      },
      "description": "A request to import external accounting product properties in HubSpot"
      },
      "ResultIdAccountingResponse": {
      "required": [
      "@result",
      "id"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "id": {
      "type": "string",
      "description": "The ID of created entity.",
      "example": "js-1"
      }
      },
      "description": "A response to the creation of an entity (eg. invoice, customer)."
      },
      "AccountingExtensionInvoice": {
      "required": [
      "amountDue",
      "currency",
      "customerName",
      "dueDate",
      "invoiceLink",
      "status"
      ],
      "type": "object",
      "properties": {
      "amountDue": {
      "type": "number",
      "description": "The total amount due.",
      "example": 100.5
      },
      "balance": {
      "type": "number",
      "description": "The remaining outstanding balance due.",
      "example": 50
      },
      "dueDate": {
      "type": "string",
      "description": "The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)",
      "format": "date"
      },
      "invoiceNumber": {
      "type": "string",
      "description": "The invoice number",
      "example": "INV-123"
      },
      "customerId": {
      "type": "string",
      "description": "The ID of the customer that this invoice is for.",
      "example": "cust-123"
      },
      "currency": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency of this invoice.",
      "example": "USD"
      },
      "invoiceLink": {
      "type": "string",
      "description": "A link to the invoice in the external accounting system.",
      "example": "https://myapp.com/invoices/1243a2"
      },
      "customerName": {
      "type": "string",
      "description": "The name of the customer that this invoice is for.",
      "example": "John Smith"
      },
      "status": {
      "type": "string",
      "description": "The currency status of the invoice.",
      "example": "OVERDUE",
      "enum": [
      "CREATED",
      "SENT",
      "PAID",
      "CLOSED",
      "OVERDUE",
      "VOIDED"
      ]
      }
      },
      "description": "Representation of an invoice in the external accounting system."
      },
      "CreateUserAccountRequestExternal": {
      "required": [
      "accountId",
      "accountName",
      "currencyCode"
      ],
      "type": "object",
      "properties": {
      "accountId": {
      "type": "string",
      "description": "The id of the account in your system."
      },
      "accountName": {
      "type": "string",
      "description": "The name of the account in your system. This is normally the name visible to your users."
      },
      "currencyCode": {
      "type": "string",
      "description": "The default currency that this account uses."
      }
      },
      "description": "Information about the account in your external account system."
      },
      "InvoiceCreatePaymentRequest": {
      "required": [
      "amountPaid",
      "currencyCode",
      "externalPaymentId",
      "paymentDateTime"
      ],
      "type": "object",
      "properties": {
      "amountPaid": {
      "type": "number",
      "description": "The amount that this payment is for."
      },
      "currencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency of the payment."
      },
      "paymentDateTime": {
      "type": "string",
      "description": "The datetime that this payment was received.",
      "format": "date-time"
      },
      "externalPaymentId": {
      "type": "string",
      "description": "The id of this payment in the external accounting system."
      }
      }
      },
      "TaxSearchResponse": {
      "required": [
      "taxes"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "taxes": {
      "type": "array",
      "description": "The list of taxes that matched the search criteria",
      "items": {
      "$ref": "#/definitions/Tax"
      }
      }
      },
      "description": "A response to a search for taxes."
      },
      "AccountingExtensionTerm": {
      "required": [
      "id",
      "name"
      ],
      "type": "object",
      "properties": {
      "dueDate": {
      "type": "string",
      "description": "The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)",
      "format": "date"
      },
      "name": {
      "type": "string",
      "description": "The display name of the payment terms.",
      "example": "Net 30"
      },
      "id": {
      "type": "string",
      "description": "The ID of the payment terms in the external accounting system.",
      "example": "net-30"
      },
      "dueDays": {
      "type": "integer",
      "description": "The number of days that these payment terms represent.",
      "format": "int32",
      "example": 30
      }
      },
      "description": "Representation of payment terms that are defined in the external accounting system. One of 'dueDays' or 'dueDate' is required."
      },
      "AccountingAppUrls": {
      "required": [
      "customerUrlTemplate",
      "getInvoicePdfUrl",
      "getInvoiceUrl",
      "invoiceUrlTemplate",
      "productUrlTemplate",
      "searchCustomerUrl"
      ],
      "type": "object",
      "properties": {
      "getInvoiceUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where invoices can be retrieved."
      },
      "searchCustomerUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where a customer search can be performed."
      },
      "getInvoicePdfUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where an invoice PDF can be retrieved."
      },
      "customerUrlTemplate": {
      "type": "string",
      "description": "A template URL that indicates the endpoint where a customer can be fetched by ID. Note that ${CUSTOMER_ID} in this URL will be replaced by the actual customer ID. For example: https://myapp.com/api/customers/${CUSTOMER_ID}"
      },
      "productUrlTemplate": {
      "type": "string",
      "description": "A template URL that indicates the endpoint where a product can be fetched by ID. Note that ${PRODUCT_ID} in this URL will be replaced by the actual product ID. For example: https://myapp.com/api/products/${PRODUCT_ID}"
      },
      "invoiceUrlTemplate": {
      "type": "string",
      "description": "A template URL that indicates the endpoint where an invoice can be fetched by ID. Note that ${INVOICE_ID} in this URL will be replaced by the actual invoice ID. For example: https://myapp.com/api/invoices/${INVOICE_ID}"
      },
      "createInvoiceUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where an invoices can be created."
      },
      "searchInvoiceUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where an invoice search can be performed."
      },
      "searchProductUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where a product search can be performed."
      },
      "getTermsUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where payment terms can be retrieved."
      },
      "createCustomerUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where a new customer can be created."
      },
      "searchTaxUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where a tax search can be performed."
      },
      "exchangeRateUrl": {
      "type": "string",
      "description": "A URL that specifies the endpoint where exchange rates can be queried."
      },
      "searchUrl": {
      "type": "string"
      },
      "searchCountUrl": {
      "type": "string"
      }
      },
      "description": "The URL endpoints that HubSpot will send requests to an external accounting system for certain actions."
      },
      "InvoiceReadResponse": {
      "required": [
      "archived",
      "balanceDue",
      "createdAt",
      "currencyCode",
      "dueDate",
      "externalAccountId",
      "externalRecipientId",
      "id",
      "invoiceStatus",
      "isVoided",
      "totalAmountBilled",
      "updatedAt"
      ],
      "type": "object",
      "properties": {
      "externalInvoiceNumber": {
      "type": "string",
      "description": "The invoice number. Note that this is _not_ the ID of the invoice, but the number that the billed customer will see."
      },
      "totalAmountBilled": {
      "type": "number",
      "description": "The total amount that this invoice is for."
      },
      "balanceDue": {
      "type": "number",
      "description": "The remaining balance due for the invoice."
      },
      "currencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency of the invoice."
      },
      "dueDate": {
      "type": "string",
      "description": "The due date of the invoice",
      "format": "date"
      },
      "externalRecipientId": {
      "type": "string",
      "description": "The id of the customer in the external accounting system that the invoice was sent to."
      },
      "receivedByRecipientDate": {
      "type": "integer",
      "description": "The datetime that that invoice was sent to the customer.",
      "format": "int64"
      },
      "externalCreateDateTime": {
      "type": "integer",
      "description": "The datetime that the invoice was created in the external accounting system.",
      "format": "int64"
      },
      "isVoided": {
      "type": "boolean",
      "description": "Indicated is the invoice has been voided or not."
      },
      "createdAt": {
      "type": "string",
      "description": "The datetime that the invoice was created in HubSpot.",
      "format": "date-time"
      },
      "updatedAt": {
      "type": "string",
      "description": "The datetime that the invoice was last updated in HubSpot.",
      "format": "date-time"
      },
      "archivedAt": {
      "type": "string",
      "format": "date-time"
      },
      "archived": {
      "type": "boolean"
      },
      "externalAccountId": {
      "type": "string",
      "description": "The id of the account in the external accounting system that this invoice is related to."
      },
      "invoiceStatus": {
      "type": "string",
      "description": "The status of the invoice",
      "enum": [
      "CREATED",
      "SENT",
      "PAID",
      "CLOSED",
      "OVERDUE",
      "VOIDED",
      "NONE",
      "UNPAID"
      ]
      },
      "id": {
      "type": "string",
      "description": "The id of this invoice in the external accounting system."
      }
      },
      "description": "The invoice data stored in HubSpot"
      },
      "AccountingAppSettings": {
      "required": [
      "appId",
      "urls"
      ],
      "type": "object",
      "properties": {
      "appId": {
      "type": "integer",
      "description": "The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal.",
      "format": "int32"
      },
      "urls": {
      "$ref": "#/definitions/AccountingAppUrls"
      },
      "features": {
      "$ref": "#/definitions/AccountingFeatures"
      }
      },
      "description": "The URL Settings, which defines the URL endpoints that HubSpot will send requests to an external accounting application for certain actions."
      },
      "InvoiceUpdateResponse": {
      "required": [
      "archived",
      "balanceDue",
      "createdAt",
      "currencyCode",
      "dueDate",
      "externalAccountId",
      "externalRecipientId",
      "id",
      "invoiceStatus",
      "isVoided",
      "totalAmountBilled",
      "updatedAt"
      ],
      "type": "object",
      "properties": {
      "externalInvoiceNumber": {
      "type": "string"
      },
      "totalAmountBilled": {
      "type": "number"
      },
      "balanceDue": {
      "type": "number"
      },
      "currencyCode": {
      "type": "string"
      },
      "dueDate": {
      "type": "string",
      "format": "date"
      },
      "externalRecipientId": {
      "type": "string"
      },
      "receivedByRecipientDate": {
      "type": "integer",
      "format": "int64"
      },
      "externalCreateDateTime": {
      "type": "integer",
      "format": "int64"
      },
      "isVoided": {
      "type": "boolean"
      },
      "createdAt": {
      "type": "string",
      "format": "date-time"
      },
      "updatedAt": {
      "type": "string",
      "format": "date-time"
      },
      "archivedAt": {
      "type": "string",
      "format": "date-time"
      },
      "archived": {
      "type": "boolean"
      },
      "externalAccountId": {
      "type": "string"
      },
      "invoiceStatus": {
      "type": "string",
      "enum": [
      "CREATED",
      "SENT",
      "PAID",
      "CLOSED",
      "OVERDUE",
      "VOIDED",
      "NONE",
      "UNPAID"
      ]
      },
      "id": {
      "type": "string"
      }
      }
      },
      "AccountingExtensionCustomer": {
      "required": [
      "id",
      "name"
      ],
      "type": "object",
      "properties": {
      "emailAddress": {
      "type": "string",
      "description": "The customer's email address",
      "example": "johnsmith@example.com"
      },
      "name": {
      "type": "string",
      "description": "The customer's full name",
      "example": "John Smith"
      },
      "id": {
      "type": "string",
      "description": "The ID of the customer in the external accounting system.",
      "example": "js-1"
      },
      "billingAddress": {
      "$ref": "#/definitions/Address"
      },
      "currencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the currency the customer should be billed in.",
      "example": "USD"
      }
      },
      "description": "Representation of a customer in the external accounting system."
      },
      "InvoicesResponseExternal": {
      "required": [
      "invoices"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "invoices": {
      "type": "array",
      "description": "The list of invoices that were found for the request.",
      "items": {
      "$ref": "#/definitions/AccountingExtensionInvoice"
      }
      }
      },
      "description": "A response to a request for invoices."
      },
      "InvoiceSearchResponse": {
      "required": [
      "invoices"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "invoices": {
      "type": "array",
      "description": "The list of invoices that matched the search criteria.",
      "items": {
      "$ref": "#/definitions/AccountingExtensionInvoice"
      }
      }
      },
      "description": "A response to a search for invoices."
      },
      "UpdatedContact": {
      "required": [
      "emailAddress",
      "id",
      "syncAction",
      "updatedAt"
      ],
      "type": "object",
      "properties": {
      "syncAction": {
      "type": "string",
      "description": "The operation to be performed.",
      "example": "UPDATE",
      "enum": [
      "CREATE",
      "UPDATE",
      "DELETE"
      ]
      },
      "updatedAt": {
      "type": "string",
      "description": "The timestamp (ISO8601 format) when the customer was updated in the external accounting system.",
      "format": "date-time"
      },
      "emailAddress": {
      "type": "string",
      "description": "The customer's email address",
      "example": "johndoe@company.com"
      },
      "id": {
      "type": "string",
      "description": "The ID of the customer in the external accounting system.",
      "example": "acct-app-123"
      },
      "customerType": {
      "type": "string",
      "description": "Designates the type of the customer object.",
      "example": "CONTACT",
      "enum": [
      "CONTACT",
      "COMPANY"
      ]
      }
      },
      "description": "A request to import external accounting contact properties in HubSpot"
      },
      "CreateInvoiceFeature": {
      "required": [
      "enabled",
      "subFeatures"
      ],
      "type": "object",
      "properties": {
      "enabled": {
      "type": "boolean",
      "description": "Indicates if creating invoices in HubSpot is supported for the integration."
      },
      "subFeatures": {
      "$ref": "#/definitions/CreateInvoiceSubFeatures"
      }
      },
      "description": "Indicates what elements of creating invoices in HubSpot is supported for the integration."
      },
      "InvoicePdfResponse": {
      "required": [
      "invoice"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "invoice": {
      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
      "type": "string",
      "description": "The bytes of the invoice PDF.",
      "format": "byte"
      }
      },
      "description": "A response that contains the PDF of an invoice"
      },
      "ActionResponse": {
      "required": [
      "completedAt",
      "startedAt",
      "status"
      ],
      "type": "object",
      "properties": {
      "status": {
      "type": "string",
      "enum": [
      "PENDING",
      "PROCESSING",
      "CANCELED",
      "COMPLETE"
      ]
      },
      "requestedAt": {
      "type": "string",
      "format": "date-time"
      },
      "startedAt": {
      "type": "string",
      "format": "date-time"
      },
      "completedAt": {
      "type": "string",
      "format": "date-time"
      },
      "links": {
      "type": "object",
      "additionalProperties": {
      "type": "string"
      }
      }
      }
      },
      "ExchangeRateResponse": {
      "required": [
      "@result",
      "exchangeRate",
      "sourceCurrencyCode",
      "targetCurrencyCode"
      ],
      "type": "object",
      "properties": {
      "@result": {
      "type": "string",
      "description": "Designates if the response is a success ('OK') or failure ('ERR').",
      "example": "OK",
      "enum": [
      "OK",
      "ERR"
      ]
      },
      "exchangeRate": {
      "type": "number",
      "description": "The exchange rate between the 2 currencies",
      "example": 1.003
      },
      "sourceCurrencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the source currency of the exchange rate.",
      "example": "JPY"
      },
      "targetCurrencyCode": {
      "type": "string",
      "description": "The ISO 4217 currency code that represents the target currency of the exchange rate.",
      "example": "USD"
      }
      },
      "description": "A response to the request for an exchange rate value. It represents the exchange rate from the source currency to the target currency."
      },
      "SyncProductsRequest": {
      "required": [
      "accountId",
      "products"
      ],
      "type": "object",
      "properties": {
      "accountId": {
      "type": "string",
      "description": "The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system."
      },
      "products": {
      "type": "array",
      "description": "A list of products to be imported.",
      "items": {
      "$ref": "#/definitions/UpdatedProduct"
      }
      }
      },
      "description": "A request to import external accounting product properties in HubSpot"
      },
      "TaxType": {
      "required": [
      "code"
      ],
      "type": "object",
      "properties": {
      "code": {
      "type": "string",
      "description": "The code/ID of the tax in the external accounting system.",
      "example": "tax-1"
      },
      "name": {
      "type": "string",
      "description": "The display name of the tax.",
      "example": "Local Sales Tax"
      }
      },
      "description": "Represents a tax in the external accounting system."
      },
      "UnitPrice": {
      "required": [
      "taxIncluded"
      ],
      "type": "object",
      "properties": {
      "amount": {
      "type": "number",
      "description": "The actual unit price amount.",
      "example": 10.99
      },
      "taxIncluded": {
      "type": "boolean",
      "description": "Indicates if the unit price amount already includes taxes."
      }
      },
      "description": "Represents a unit price"
      },
      "SyncContactsRequest": {
      "required": [
      "accountId",
      "contacts"
      ],
      "type": "object",
      "properties": {
      "accountId": {
      "type": "string",
      "description": "The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.",
      "example": "acct-app-123"
      },
      "contacts": {
      "type": "array",
      "description": "A list of contacts to be imported.",
      "items": {
      "$ref": "#/definitions/UpdatedContact"
      }
      }
      },
      "description": "A request to import external accounting contact properties in HubSpot"
      },
      "SettingsPatchRequest": {
        "type": "object",
        "properties": {
        "name": {
        "type": "string",
        "description": "The name of your calling service to display to users."
        },
        "url": {
        "type": "string",
        "description": "The URL to your phone/calling UI, built with the [Calling SDK](#)."
        },
        "height": {
        "type": "integer",
        "description": "The target height of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "width": {
        "type": "integer",
        "description": "The target width of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "isReady": {
        "type": "boolean",
        "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts."
        },
        "supportsCustomObjects": {
        "type": "boolean",
        "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects."
        }
        },
        "description": "Settings update request"
        },
        "SettingsRequest": {
        "required": [
        "name",
        "url"
        ],
        "type": "object",
        "properties": {
        "name": {
        "type": "string",
        "description": "The name of your calling service to display to users."
        },
        "url": {
        "type": "string",
        "description": "The URL to your phone/calling UI, built with the [Calling SDK](#)."
        },
        "height": {
        "type": "integer",
        "description": "The target height of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "width": {
        "type": "integer",
        "description": "The target width of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "isReady": {
        "type": "boolean",
        "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts."
        },
        "supportsCustomObjects": {
        "type": "boolean",
        "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects."
        }
        },
        "description": "Settings create request"    
        },
        "SettingsResponse": {
        "required": [
        "createdAt",
        "height",
        "isReady",
        "name",
        "supportsCustomObjects",
        "updatedAt",
        "url",
        "width"
        ],
        "type": "object",
        "properties": {
        "name": {
        "type": "string",
        "description": "The name of your calling service to display to users."
        },
        "url": {
        "type": "string",
        "description": "The URL to your phone/calling UI, built with the [Calling SDK](#)."
        },
        "height": {
        "type": "integer",
        "description": "The target height of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "width": {
        "type": "integer",
        "description": "The target width of the iframe that will contain your phone/calling UI.",
        "format": "int32"
        },
        "isReady": {
        "type": "boolean",
        "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts."
        },
        "supportsCustomObjects": {
        "type": "boolean",
        "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects."
        },
        "createdAt": {
        "type": "string",
        "description": "When this calling extension was created.",
        "format": "date-time"
        },
        "updatedAt": {
        "type": "string",
        "description": "The last time the settings for this calling extension were modified.",
        "format": "date-time"
        }
        },
        "description": "Current settings state"
        },
        "CollectionResponsePublicImportResponse": {
          "required": [
          "results"
          ],
          "type": "object",
          "properties": {
          "results": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicImportResponse"
          }
          },
          "paging": {
          "$ref": "#/definitions/Paging"
          }
          }
          },
          "PublicObjectListRecord": {
          "required": [
          "listId",
          "objectType"
          ],
          "type": "object",
          "properties": {
          "listId": {
          "type": "string",
          "description": "The ID of the list containing the imported objects."
          },
          "objectType": {
          "type": "string",
          "description": "The type of object contained in the list."
          }
          },
          "description": "A summary detailing which list contains the imported objects."
          },
          "ImportRowCore": {
          "required": [
          "fileId",
          "lineNumber",
          "rowData"
          ],
          "type": "object",
          "properties": {
          "lineNumber": {
          "type": "integer",
          "format": "int32"
          },
          "rowData": {
          "type": "array",
          "items": {
          "type": "string"
          }
          },
          "fileId": {
          "type": "integer",
          "format": "int32"
          },
          "pageName": {
          "type": "string"
          }
          }
          },
          "PublicImportError": {
          "required": [
          "createdAt",
          "errorType",
          "id",
          "knownColumnNumber",
          "sourceData"
          ],
          "type": "object",
          "properties": {
          "errorType": {
          "type": "string",
          "enum": [
          "INCORRECT_NUMBER_OF_COLUMNS",
          "INVALID_OBJECT_ID",
          "INVALID_ASSOCIATION_IDENTIFIER",
          "NO_OBJECT_ID_FROM_ASSOCIATION_IDENTIFIER",
          "MULTIPLE_COMPANIES_WITH_THIS_DOMAIN",
          "PROPERTY_DEFINITION_NOT_FOUND",
          "PROPERTY_VALUE_NOT_FOUND",
          "COULD_NOT_FIND_OWNER",
          "MULTIPLE_OWNERS_FOUND",
          "COULD_NOT_FIND_BUSINESS_UNIT",
          "COULD_NOT_PARSE_NUMBER",
          "COULD_NOT_PARSE_DATE",
          "COULD_NOT_PARSE_TERM",
          "OUTSIDE_VALID_TIME_RANGE",
          "OUTSIDE_VALID_TERM_RANGE",
          "COULD_NOT_PARSE_ROW",
          "INVALID_ENUMERATION_OPTION",
          "AMBIGUOUS_ENUMERATION_OPTION",
          "FAILED_VALIDATION",
          "FAILED_TO_CREATE_ASSOCIATION",
          "FILE_NOT_FOUND",
          "INVALID_COLUMN_CONFIGURATION",
          "INVALID_FILE_TYPE",
          "INVALID_SPREADSHEET",
          "INVALID_SHEET_COUNT",
          "FAILED_TO_PROCESS_OBJECT_WITH_EMPTY_PROPERTY_VALUES",
          "UNKNOWN_BAD_REQUEST",
          "GDPR_BLACKLISTED_EMAIL",
          "DUPLICATE_ASSOCIATION_ID",
          "LIMIT_EXCEEDED",
          "INVALID_ALTERNATE_ID",
          "INVALID_EMAIL",
          "INVALID_DOMAIN",
          "DUPLICATE_ROW_CONTENT",
          "INVALID_NUMBER_SIZE",
          "UNKNOWN_ERROR",
          "FAILED_TO_OPT_OUT_CONTACT",
          "INVALID_REQUIRED_PROPERTY",
          "MISSING_REQUIRED_PROPERTY",
          "DUPLICATE_ALTERNATE_ID",
          "DUPLICATE_OBJECT_ID",
          "DUPLICATE_UNIQUE_PROPERTY_VALUE",
          "BLANK_VALUE_PROVIDED",
          "UNKNOWN_ASSOCIATION_RECORD_ID",
          "INVALID_RECORD_ID",
          "DUPLICATE_RECORD_ID",
          "INVALID_CUSTOM_PROPERTY_VALIDATION",
          "CREATE_ONLY_IMPORT",
          "UPDATE_ONLY_IMPORT",
          "COLUMN_TOO_LARGE"
          ]
          },
          "sourceData": {
          "$ref": "#/definitions/ImportRowCore"
          },
          "objectType": {
          "type": "string",
          "enum": [
          "CONTACT",
          "COMPANY",
          "DEAL",
          "ENGAGEMENT",
          "TICKET",
          "OWNER",
          "PRODUCT",
          "LINE_ITEM",
          "BET_DELIVERABLE_SERVICE",
          "CONTENT",
          "CONVERSATION",
          "BET_ALERT",
          "PORTAL",
          "QUOTE",
          "FORM_SUBMISSION_INBOUNDDB",
          "QUOTA",
          "UNSUBSCRIBE",
          "COMMUNICATION",
          "FEEDBACK_SUBMISSION",
          "ATTRIBUTION",
          "SALESFORCE_SYNC_ERROR",
          "RESTORABLE_CRM_OBJECT",
          "HUB",
          "LANDING_PAGE",
          "PRODUCT_OR_FOLDER",
          "TASK",
          "FORM",
          "MARKETING_EMAIL",
          "AD_ACCOUNT",
          "AD_CAMPAIGN",
          "AD_GROUP",
          "AD",
          "KEYWORD",
          "CAMPAIGN",
          "SOCIAL_CHANNEL",
          "SOCIAL_POST",
          "SITE_PAGE",
          "BLOG_POST",
          "IMPORT",
          "EXPORT",
          "CTA",
          "TASK_TEMPLATE",
          "AUTOMATION_PLATFORM_FLOW",
          "OBJECT_LIST",
          "NOTE",
          "MEETING_EVENT",
          "CALL",
          "EMAIL",
          "PUBLISHING_TASK",
          "CONVERSATION_SESSION",
          "CONTACT_CREATE_ATTRIBUTION",
          "INVOICE",
          "MARKETING_EVENT",
          "CONVERSATION_INBOX",
          "CHATFLOW",
          "MEDIA_BRIDGE",
          "SEQUENCE",
          "SEQUENCE_STEP",
          "FORECAST",
          "SNIPPET",
          "TEMPLATE",
          "DEAL_CREATE_ATTRIBUTION",
          "QUOTE_TEMPLATE",
          "QUOTE_MODULE",
          "QUOTE_MODULE_FIELD",
          "QUOTE_FIELD",
          "SEQUENCE_ENROLLMENT",
          "SUBSCRIPTION",
          "ACCEPTANCE_TEST",
          "SOCIAL_BROADCAST",
          "DEAL_SPLIT",
          "DEAL_REGISTRATION",
          "GOAL_TARGET",
          "GOAL_TARGET_GROUP",
          "PORTAL_OBJECT_SYNC_MESSAGE",
          "FILE_MANAGER_FILE",
          "FILE_MANAGER_FOLDER",
          "SEQUENCE_STEP_ENROLLMENT",
          "APPROVAL",
          "APPROVAL_STEP",
          "CTA_VARIANT",
          "SALES_DOCUMENT",
          "DISCOUNT",
          "FEE",
          "TAX",
          "MARKETING_CALENDAR",
          "PERMISSIONS_TESTING",
          "PRIVACY_SCANNER_COOKIE",
          "DATA_SYNC_STATE",
          "WEB_INTERACTIVE",
          "PLAYBOOK",
          "FOLDER",
          "PLAYBOOK_QUESTION",
          "PLAYBOOK_SUBMISSION",
          "PLAYBOOK_SUBMISSION_ANSWER",
          "COMMERCE_PAYMENT",
          "GSC_PROPERTY",
          "SOX_PROTECTED_DUMMY_TYPE",
          "BLOG_LISTING_PAGE",
          "QUARANTINED_SUBMISSION",
          "PAYMENT_SCHEDULE",
          "PAYMENT_SCHEDULE_INSTALLMENT",
          "MARKETING_CAMPAIGN_UTM",
          "DISCOUNT_TEMPLATE",
          "DISCOUNT_CODE",
          "FEEDBACK_SURVEY",
          "CMS_URL",
          "SALES_TASK",
          "SALES_WORKLOAD",
          "USER",
          "POSTAL_MAIL",
          "SCHEMAS_BACKEND_TEST",
          "PAYMENT_LINK",
          "SUBMISSION_TAG",
          "CAMPAIGN_STEP",
          "SCHEDULING_PAGE",
          "SOX_PROTECTED_TEST_TYPE",
          "ORDER",
          "MARKETING_SMS",
          "PARTNER_ACCOUNT",
          "CAMPAIGN_TEMPLATE",
          "CAMPAIGN_TEMPLATE_STEP",
          "UNKNOWN"
          ]
          },
          "invalidValue": {
          "type": "string"
          },
          "extraContext": {
          "type": "string"
          },
          "objectTypeId": {
          "type": "string"
          },
          "knownColumnNumber": {
          "type": "integer",
          "format": "int32"
          },
          "createdAt": {
          "type": "integer",
          "format": "int32"
          },
          "id": {
          "type": "string"
          }
          }
          },
          "PublicImportMetadata": {
          "required": [
          "counters",
          "fileIds",
          "objectLists"
          ],
          "type": "object",
          "properties": {
          "objectLists": {
          "type": "array",
          "description": "The lists containing the imported objects.",
          "items": {
          "$ref": "#/definitions/PublicObjectListRecord"
          }
          },
          "counters": {
          "type": "object",
          "additionalProperties": {
          "type": "integer",
          "format": "int32"
          },
          "description": "Summarized outcomes of each row a developer attempted to import into HubSpot."
          },
          "fileIds": {
          "type": "array",
          "description": "The IDs of files uploaded in the File Manager API.",
          "items": {
          "type": "string"
          }
          }
          },
          "description": "An object detailing a summary of the import record outputs"
          },
          "CollectionResponsePublicImportErrorForwardPaging": {
          "required": [
          "results"
          ],
          "type": "object",
          "properties": {
          "results": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicImportError"
          }
          },
          "paging": {
          "$ref": "#/definitions/ForwardPaging"
          }
          }
          },
          "PublicImportResponse": {
          "required": [
          "createdAt",
          "id",
          "metadata",
          "optOutImport",
          "state",
          "updatedAt"
          ],
          "type": "object",
          "properties": {
          "state": {
          "type": "string",
          "description": "The status of the import.",
          "enum": [
          "STARTED",
          "PROCESSING",
          "DONE",
          "FAILED",
          "CANCELED",
          "DEFERRED",
          "REVERTED"
          ]
          },
          "importRequestJson": {
          "type": "object",
          "properties": {}
          },
          "createdAt": {
          "type": "string",
          "format": "date-time"
          },
          "metadata": {
          "$ref": "#/definitions/PublicImportMetadata"
          },
          "importName": {
          "type": "string"
          },
          "updatedAt": {
          "type": "string",
          "format": "date-time"
          },
          "optOutImport": {
          "type": "boolean",
          "description": "Whether or not the import is a list of people disqualified from receiving emails."
          },
          "id": {
          "type": "string"
          }
          },
          "description": "A current summary of the import, whether complete or not."
          
          },
          "ObjectTypeDefinitionPatch": {
            "type": "object",
            "properties": {
            "labels": {
            "$ref": "#/definitions/ObjectTypeDefinitionLabels"
            },
            "requiredProperties": {
            "type": "array",
            "description": "The names of properties that should be **required** when creating an object of this type.",
            "items": {
            "type": "string"
            }
            },
            "searchableProperties": {
            "type": "array",
            "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
            "items": {
            "type": "string"
            }
            },
            "primaryDisplayProperty": {
            "type": "string",
            "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "secondaryDisplayProperties": {
            "type": "array",
            "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
            "items": {
            "type": "string"
            }
            },
            "restorable": {
            "type": "boolean"
            }
            },
            "description": "Defines attributes to update on an object type."
            },
            "CollectionResponseObjectSchemaNoPaging": {
            "required": [
            "results"
            ],
            "type": "object",
            "properties": {
            "results": {
            "type": "array",
            "items": {
            "$ref": "#/definitions/ObjectSchema"
            }
            }
            }
            },
            "ObjectTypeDefinition": {
            "required": [
            "archived",
            "fullyQualifiedName",
            "id",
            "labels",
            "name",
            "objectTypeId",
            "requiredProperties",
            "searchableProperties",
            "secondaryDisplayProperties"
            ],
            "type": "object",
            "properties": {
            "labels": {
            "$ref": "#/definitions/ObjectTypeDefinitionLabels"
            },
            "requiredProperties": {
            "type": "array",
            "description": "The names of properties that should be **required** when creating an object of this type.",
            "items": {
            "type": "string"
            }
            },
            "searchableProperties": {
            "type": "array",
            "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
            "items": {
            "type": "string"
            }
            },
            "primaryDisplayProperty": {
            "type": "string",
            "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "secondaryDisplayProperties": {
            "type": "array",
            "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
            "items": {
            "type": "string"
            }
            },
            "archived": {
            "type": "boolean"
            },
            "id": {
            "type": "string",
            "description": "A unique ID for this object type. Will be defined as {meta-type}-{unique ID}."
            },
            "fullyQualifiedName": {
            "type": "string"
            },
            "createdAt": {
            "type": "string",
            "description": "When the object type was created.",
            "format": "date-time"
            },
            "updatedAt": {
            "type": "string",
            "description": "When the object type was last updated.",
            "format": "date-time"
            },
            "objectTypeId": {
            "type": "string"
            },
            "name": {
            "type": "string",
            "description": "A unique name for this object. For internal use only."
            },
            "portalId": {
            "type": "integer",
            "description": "The ID of the account that this object type is specific to.",
            "format": "int32"
            }
            },
            "description": "Defines an object type."
            },
            "OptionInput": {
            "required": [
            "displayOrder",
            "hidden",
            "label",
            "value"
            ],
            "type": "object",
            "properties": {
            "label": {
            "type": "string",
            "description": "A human-readable option label that will be shown in HubSpot."
            },
            "value": {
            "type": "string",
            "description": "The internal value of the option, which must be used when setting the property value through the API."
            },
            "description": {
            "type": "string",
            "description": "A description of the option."
            },
            "displayOrder": {
            "type": "integer",
            "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
            "format": "int32"
            },
            "hidden": {
            "type": "boolean",
            "description": "Hidden options won't be shown in HubSpot."
            }
            },
            "description": "Defines a enumeration property option"
            },
            "ObjectTypePropertyCreate": {
            "required": [
            "fieldType",
            "label",
            "name",
            "type"
            ],
            "type": "object",
            "properties": {
            "name": {
            "type": "string",
            "description": "The internal property name, which must be used when referencing the property from the API."
            },
            "label": {
            "type": "string",
            "description": "A human-readable property label that will be shown in HubSpot."
            },
            "groupName": {
            "type": "string",
            "description": "The name of the group this property belongs to."
            },
            "description": {
            "type": "string",
            "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "options": {
            "type": "array",
            "description": "A list of available options for the property. This field is only required for enumerated properties.",
            "items": {
            "$ref": "#/definitions/OptionInput"
            }
            },
            "displayOrder": {
            "type": "integer",
            "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.",
            "format": "int32"
            },
            "hasUniqueValue": {
            "type": "boolean",
            "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
            },
            "hidden": {
            "type": "boolean"
            },
            "type": {
            "type": "string",
            "description": "The data type of the property.",
            "enum": [
            "string",
            "number",
            "date",
            "datetime",
            "enumeration",
            "bool"
            ]
            },
            "fieldType": {
            "type": "string",
            "description": "Controls how the property appears in HubSpot."
            }
            },
            "description": "Defines a property to create."
            },
            "PropertyModificationMetadata": {
            "required": [
            "archivable",
            "readOnlyDefinition",
            "readOnlyValue"
            ],
            "type": "object",
            "properties": {
            "archivable": {
            "type": "boolean"
            },
            "readOnlyDefinition": {
            "type": "boolean"
            },
            "readOnlyOptions": {
            "type": "boolean"
            },
            "readOnlyValue": {
            "type": "boolean"
            }
            }
            },
            "AssociationDefinitionEgg": {
            "required": [
            "fromObjectTypeId",
            "toObjectTypeId"
            ],
            "type": "object",
            "properties": {
            "fromObjectTypeId": {
            "type": "string",
            "description": "ID of the primary object type to link from."
            },
            "toObjectTypeId": {
            "type": "string",
            "description": "ID of the target object type ID to link to."
            },
            "name": {
            "type": "string",
            "description": "A unique name for this association."
            }
            },
            "description": "Defines an association between two object types."
            },
            "AssociationDefinition": {
            "required": [
            "fromObjectTypeId",
            "id",
            "toObjectTypeId"
            ],
            "type": "object",
            "properties": {
            "fromObjectTypeId": {
            "type": "string",
            "description": "ID of the primary object type to link from."
            },
            "toObjectTypeId": {
            "type": "string",
            "description": "ID of the target object type ID to link to."
            },
            "name": {
            "type": "string",
            "description": "A unique name for this association."
            },
            "id": {
            "type": "string",
            "description": "A unique ID for this association."
            },
            "createdAt": {
            "type": "string",
            "description": "When the association was defined.",
            "format": "date-time"
            },
            "updatedAt": {
            "type": "string",
            "description": "When the association was last updated.",
            "format": "date-time"
            }
            },
            "description": "Defines an association between two object types."
            },
            "ObjectSchema": {
            "required": [
            "archived",
            "associations",
            "fullyQualifiedName",
            "id",
            "labels",
            "name",
            "objectTypeId",
            "properties",
            "requiredProperties",
            "searchableProperties",
            "secondaryDisplayProperties"
            ],
            "type": "object",
            "properties": {
            "labels": {
            "$ref": "#/definitions/ObjectTypeDefinitionLabels"
            },
            "requiredProperties": {
            "type": "array",
            "description": "The names of properties that should be **required** when creating an object of this type.",
            "items": {
            "type": "string"
            }
            },
            "searchableProperties": {
            "type": "array",
            "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
            "items": {
            "type": "string"
            }
            },
            "primaryDisplayProperty": {
            "type": "string",
            "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "secondaryDisplayProperties": {
            "type": "array",
            "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
            "items": {
            "type": "string"
            }
            },
            "archived": {
            "type": "boolean"
            },
            "id": {
            "type": "string",
            "description": "A unique ID for this schema's object type. Will be defined as {meta-type}-{unique ID}."
            },
            "fullyQualifiedName": {
            "type": "string",
            "description": "An assigned unique ID for the object, including portal ID and object name."
            },
            "createdAt": {
            "type": "string",
            "description": "When the object schema was created.",
            "format": "date-time"
            },
            "updatedAt": {
            "type": "string",
            "description": "When the object schema was last updated.",
            "format": "date-time"
            },
            "objectTypeId": {
            "type": "string"
            },
            "properties": {
            "type": "array",
            "description": "Properties defined for this object type.",
            "items": {
            "$ref": "#/definitions/Property"
            }
            },
            "associations": {
            "type": "array",
            "description": "Associations defined for a given object type.",
            "items": {
            "$ref": "#/definitions/AssociationDefinition"
            }
            },
            "name": {
            "type": "string",
            "description": "A unique name for the schema's object type."
            }
            },
            "description": "Defines an object schema, including its properties and associations."
            },
            "ObjectSchemaEgg": {
            "required": [
            "associatedObjects",
            "labels",
            "name",
            "properties",
            "requiredProperties",
            "searchableProperties",
            "secondaryDisplayProperties"
            ],
            "type": "object",
            "properties": {
            "labels": {
            "$ref": "#/definitions/ObjectTypeDefinitionLabels"
            },
            "requiredProperties": {
            "type": "array",
            "description": "The names of properties that should be **required** when creating an object of this type.",
            "items": {
            "type": "string"
            }
            },
            "searchableProperties": {
            "type": "array",
            "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
            "items": {
            "type": "string"
            }
            },
            "primaryDisplayProperty": {
            "type": "string",
            "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "secondaryDisplayProperties": {
            "type": "array",
            "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
            "items": {
            "type": "string"
            }
            },
            "properties": {
            "type": "array",
            "description": "Properties defined for this object type.",
            "items": {
            "$ref": "#/definitions/ObjectTypePropertyCreate"
            }
            },
            "associatedObjects": {
            "type": "array",
            "description": "Associations defined for this object type.",
            "items": {
            "type": "string"
            }
            },
            "name": {
            "type": "string",
            "description": "A unique name for this object. For internal use only."
            }
            },
            "description": "Defines a new object type, its properties, and associations."
            },
            "ObjectTypeDefinitionLabels": {
            "type": "object",
            "properties": {
            "singular": {
            "type": "string",
            "description": "The word for one object."
            },
            "plural": {
            "type": "string",
            "description": "The word for multiple objects."
            }
            },
            "description": "Singular and plural labels for the object. Used in CRM display."
            },
            "PropertyOption": {
            "required": [
            "hidden",
            "label",
            "value"
            ],
            "type": "object",
            "properties": {
            "label": {
            "type": "string",
            "description": "A human-readable option label that will be shown in HubSpot."
            },
            "value": {
            "type": "string",
            "description": "The internal value of the option, which must be used when setting the property value through the API."
            },
            "description": {
            "type": "string",
            "description": "A description of the option."
            },
            "displayOrder": {
            "type": "integer",
            "description": "Options are displayed in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
            "format": "int32"
            },
            "hidden": {
            "type": "boolean",
            "description": "Hidden options will not be displayed in HubSpot."
            }
            },
            "description": "The options available when a property is an enumeration"
            },
            "Property": {
            "required": [
            "description",
            "fieldType",
            "groupName",
            "label",
            "name",
            "options",
            "type"
            ],
            "type": "object",
            "properties": {
            "updatedAt": {
            "type": "string",
            "format": "date-time"
            },
            "createdAt": {
            "type": "string",
            "description": "When the property was created",
            "format": "date-time"
            },
            "archivedAt": {
            "type": "string",
            "description": "When the property was archived.",
            "format": "date-time"
            },
            "name": {
            "type": "string",
            "description": "The internal property name, which must be used when referencing the property via the API."
            },
            "label": {
            "type": "string",
            "description": "A human-readable property label that will be shown in HubSpot."
            },
            "type": {
            "type": "string",
            "description": "The property data type."
            },
            "fieldType": {
            "type": "string",
            "description": "Controls how the property appears in HubSpot."
            },
            "description": {
            "type": "string",
            "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "groupName": {
            "type": "string",
            "description": "The name of the property group the property belongs to."
            },
            "options": {
            "type": "array",
            "description": "A list of valid options for the property. This field is required for enumerated properties, but will be empty for other property types.",
            "items": {
            "$ref": "#/definitions/PropertyOption"
            }
            },
            "createdUserId": {
            "type": "string",
            "description": "The internal ID of the user who created the property in HubSpot. This field may not exist if the property was created outside of HubSpot."
            },
            "updatedUserId": {
            "type": "string",
            "description": "The internal user ID of the user who updated the property in HubSpot. This field may not exist if the property was updated outside of HubSpot."
            },
            "referencedObjectType": {
            "type": "string",
            "description": "If this property is related to other object(s), they will be listed here."
            },
            "displayOrder": {
            "type": "integer",
            "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.",
            "format": "int32"
            },
            "calculated": {
            "type": "boolean",
            "description": "For default properties, true indicates that the property is calculated by a HubSpot process. It has no effect for custom properties."
            },
            "externalOptions": {
            "type": "boolean",
            "description": "For default properties, true indicates that the options are stored externally to the property settings."
            },
            "archived": {
            "type": "boolean",
            "description": "Whether or not the property is archived."
            },
            "hasUniqueValue": {
            "type": "boolean",
            "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
            },
            "hidden": {
            "type": "boolean"
            },
            "hubspotDefined": {
            "type": "boolean",
            "description": "This will be true for default object properties built into HubSpot."
            },
            "showCurrencySymbol": {
            "type": "boolean",
            "description": "Whether the property will display the currency symbol set in the account settings."
            },
            "modificationMetadata": {
            "$ref": "#/definitions/PropertyModificationMetadata"
            },
            "formField": {
            "type": "boolean",
            "description": "Whether or not the property can be used in a HubSpot form."
            }
            },
            "description": "Defines a property"
            },
            "PropertyName":{
              "required":[
                 "name"
              ],
              "type":"object",
              "properties":{
                 "name":{
                    "type":"string",
                    "description":"The name of the property to read or modify."
                 }
              }
           },
           "BatchResponseProperty":{
              "required":[
                 "completedAt",
                 "results",
                 "startedAt",
                 "status"
              ],
              "type":"object",
              "properties":{
                 "status":{
                    "type":"string",
                    "enum":[
                       "PENDING",
                       "PROCESSING",
                       "CANCELED",
                       "COMPLETE"
                    ]
                 },
                 "results":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/Property"
                    }
                 },
                 "numErrors":{
                    "type":"integer",
                    "format":"int32"
                 },
                 "errors":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/StandardError"
                    }
                 },
                 "requestedAt":{
                    "type":"string",
                    "format":"date-time"
                 },
                 "startedAt":{
                    "type":"string",
                    "format":"date-time"
                 },
                 "completedAt":{
                    "type":"string",
                    "format":"date-time"
                 },
                 "links":{
                    "type":"object",
                    "additionalProperties":{
                       "type":"string"
                    }
                 }
              }
           },
           "CollectionResponseProperty":{
              "required":[
                 "results"
              ],
              "type":"object",
              "properties":{
                 "results":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/Property"
                    }
                 },
                 "paging":{
                    "$ref":"#/definitions/Paging"
                 }
              }
           },
           "PropertyGroup":{
              "required":[
                 "archived",
                 "displayOrder",
                 "label",
                 "name"
              ],
              "type":"object",
              "properties":{
                 "name":{
                    "type":"string",
                    "description":"The internal property group name, which must be used when referencing the property group via the API."
                 },
                 "label":{
                    "type":"string",
                    "description":"A human-readable label that will be shown in HubSpot."
                 },
                 "displayOrder":{
                    "type":"integer",
                    "description":"Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
                    "format":"int32"
                 },
                 "archived":{
                    "type":"boolean"
                 }
              },
              "description":"An ID for a group of properties"
           },
           "PropertyCreate":{
              "required":[
                 "fieldType",
                 "groupName",
                 "label",
                 "name",
                 "type"
              ],
              "type":"object",
              "properties":{
                 "name":{
                    "type":"string",
                    "description":"The internal property name, which must be used when referencing the property via the API."
                 },
                 "label":{
                    "type":"string",
                    "description":"A human-readable property label that will be shown in HubSpot."
                 },
                 "type":{
                    "type":"string",
                    "description":"The data type of the property.",
                    "enum":[
                       "string",
                       "number",
                       "date",
                       "datetime",
                       "enumeration"
                    ]
                 },
                 "fieldType":{
                    "type":"string",
                    "description":"Controls how the property appears in HubSpot.",
                    "enum":[
                       "textarea",
                       "text",
                       "date",
                       "file",
                       "number",
                       "select",
                       "radio",
                       "checkbox",
                       "booleancheckbox"
                    ]
                 },
                 "groupName":{
                    "type":"string",
                    "description":"The name of the property group the property belongs to."
                 },
                 "description":{
                    "type":"string",
                    "description":"A description of the property that will be shown as help text in HubSpot."
                 },
                 "options":{
                    "type":"array",
                    "description":"A list of valid options for the property. This field is required for enumerated properties.",
                    "items":{
                       "$ref":"#/definitions/OptionInput"
                    }
                 },
                 "displayOrder":{
                    "type":"integer",
                    "description":"Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.",
                    "format":"int32"
                 },
                 "hasUniqueValue":{
                    "type":"boolean",
                    "description":"Whether or not the property's value must be unique. Once set, this can't be changed."
                 },
                 "hidden":{
                    "type":"boolean",
                    "description":"If true, the property won't be visible and can't be used in HubSpot."
                 },
                 "formField":{
                    "type":"boolean",
                    "description":"Whether or not the property can be used in a HubSpot form."
                 }
              }
           },
           "BatchInputPropertyCreate":{
              "required":[
                 "inputs"
              ],
              "type":"object",
              "properties":{
                 "inputs":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/PropertyCreate"
                    }
                 }
              }
           },
           "PropertyUpdate":{
              "type":"object",
              "properties":{
                 "label":{
                    "type":"string",
                    "description":"A human-readable property label that will be shown in HubSpot."
                 },
                 "type":{
                    "type":"string",
                    "description":"The data type of the property.",
                    "enum":[
                       "string",
                       "number",
                       "date",
                       "datetime",
                       "enumeration"
                    ]
                 },
                 "fieldType":{
                    "type":"string",
                    "description":"Controls how the property appears in HubSpot.",
                    "enum":[
                       "textarea",
                       "text",
                       "date",
                       "file",
                       "number",
                       "select",
                       "radio",
                       "checkbox",
                       "booleancheckbox"
                    ]
                 },
                 "groupName":{
                    "type":"string",
                    "description":"The name of the property group the property belongs to."
                 },
                 "description":{
                    "type":"string",
                    "description":"A description of the property that will be shown as help text in HubSpot."
                 },
                 "options":{
                    "type":"array",
                    "description":"A list of valid options for the property.",
                    "items":{
                       "$ref":"#/definitions/OptionInput"
                    }
                 },
                 "displayOrder":{
                    "type":"integer",
                    "description":"Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values.",
                    "format":"int32"
                 },
                 "hidden":{
                    "type":"boolean",
                    "description":"If true, the property won't be visible and can't be used in HubSpot."
                 },
                 "formField":{
                    "type":"boolean",
                    "description":"Whether or not the property can be used in a HubSpot form."
                 }
              }
           },
           "BatchReadInputPropertyName":{
              "required":[
                 "archived",
                 "inputs"
              ],
              "type":"object",
              "properties":{
                 "inputs":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/PropertyName"
                    }
                 },
                 "archived":{
                    "type":"boolean"
                 }
              }
           },
           "PropertyGroupCreate":{
              "required":[
                 "label",
                 "name"
              ],
              "type":"object",
              "properties":{
                 "name":{
                    "type":"string",
                    "description":"The internal property group name, which must be used when referencing the property group via the API."
                 },
                 "label":{
                    "type":"string",
                    "description":"A human-readable label that will be shown in HubSpot."
                 },
                 "displayOrder":{
                    "type":"integer",
                    "description":"Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
                    "format":"int32"
                 }
              }
           },
           "BatchInputPropertyName":{
              "required":[
                 "inputs"
              ],
              "type":"object",
              "properties":{
                 "inputs":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/PropertyName"
                    }
                 }
              }
           },
           "CollectionResponsePropertyGroup":{
              "required":[
                 "results"
              ],
              "type":"object",
              "properties":{
                 "results":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/PropertyGroup"
                    }
                 },
                 "paging":{
                    "$ref":"#/definitions/Paging"
                 }
              }
           },
           "PropertyGroupUpdate":{
              "type":"object",
              "properties":{
                 "label":{
                    "type":"string",
                    "description":"A human-readable label that will be shown in HubSpot."
                 },
                 "displayOrder":{
                    "type":"integer",
                    "description":"Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
                    "format":"int32"
                 }
              }
           },
         "PublicOwner":{
            "required":[
               "archived",
               "createdAt",
               "id",
               "updatedAt"
            ],
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "userId":{
                  "type":"integer",
                  "format":"int32"
               },
               "createdAt":{
                  "type":"string",
                  "format":"date-time"
               },
               "updatedAt":{
                  "type":"string",
                  "format":"date-time"
               },
               "archived":{
                  "type":"boolean"
               },
               "teams":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/PublicTeam"
                  }
               }
            }
         },
         "PublicTeam":{
            "required":[
               "id",
               "name",
               "primary"
            ],
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "primary":{
                  "type":"boolean"
               }
            }
         },
         "CollectionResponsePublicOwnerForwardPaging":{
            "required":[
               "results"
            ],
            "type":"object",
            "properties":{
               "results":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/PublicOwner"
                  }
               },
               "paging":{
                  "$ref":"#/definitions/ForwardPaging"
               }
            }
         },
         "PublicObjectId": {
          "required": [
          "id"
          ],
          "type": "object",
          "properties": {
          "id": {
          "type": "string",
          "description": "The unique ID that identifies an object."
          }
          }
          },
          "PublicAssociationMulti": {
          "required": [
          "from",
          "to"
          ],
          "type": "object",
          "properties": {
          "from": {
          "$ref": "#/definitions/PublicObjectId"
          },
          "to": {
          "type": "array",
          "description": "The IDs of objects that are associated with the object identified by the ID in 'from'.",
          "items": {
          "$ref": "#/definitions/AssociatedId"
          }
          }
          }
          },
          "PublicAssociation": {
          "required": [
          "from",
          "to",
          "type"
          ],
          "type": "object",
          "properties": {
          "from": {
          "$ref": "#/definitions/PublicObjectId"
          },
          "to": {
          "$ref": "#/definitions/PublicObjectId"
          },
          "type": {
          "type": "string"
          }
          }
          },
          "CollectionResponsePublicAssociationDefiniton": {
          "required": [
          "results"
          ],
          "type": "object",
          "properties": {
          "results": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicAssociationDefiniton"
          }
          },
          "paging": {
          "$ref": "#/definitions/Paging"
          }
          }
          },
          "BatchInputPublicObjectId": {
          "required": [
          "inputs"
          ],
          "type": "object",
          "properties": {
          "inputs": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicObjectId"
          }
          }
          }
          },
          "BatchResponsePublicAssociation": {
          "required": [
          "completedAt",
          "results",
          "startedAt",
          "status"
          ],
          "type": "object",
          "properties": {
          "results": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicAssociation"
          }
          },
          "numErrors": {
          "type": "integer",
          "format": "int32"
          },
          "errors": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/StandardError"
          }
          },
          "status": {
          "type": "string",
          "enum": [
          "PENDING",
          "PROCESSING",
          "CANCELED",
          "COMPLETE"
          ]
          },
          "requestedAt": {
          "type": "string",
          "format": "date-time"
          },
          "startedAt": {
          "type": "string",
          "format": "date-time"
          },
          "completedAt": {
          "type": "string",
          "format": "date-time"
          }
          }
          },
          "PublicAssociationDefiniton": {
          "required": [
          "id",
          "name"
          ],
          "type": "object",
          "properties": {
          "id": {
          "type": "string"
          },
          "name": {
          "type": "string"
          }
          }
          },
          "BatchResponsePublicAssociationMulti": {
          "required": [
          "completedAt",
          "results",
          "startedAt",
          "status"
          ],
          "type": "object",
          "properties": {
          "results": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicAssociationMulti"
          }
          },
          "numErrors": {
          "type": "integer",
          "format": "int32"
          },
          "errors": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/StandardError"
          }
          },
          "status": {
          "type": "string",
          "enum": [
          "PENDING",
          "PROCESSING",
          "CANCELED",
          "COMPLETE"
          ]
          },
          "requestedAt": {
          "type": "string",
          "format": "date-time"
          },
          "startedAt": {
          "type": "string",
          "format": "date-time"
          },
          "completedAt": {
          "type": "string",
          "format": "date-time"
          }
          }
          },
          "BatchInputPublicAssociation": {
          "required": [
          "inputs"
          ],
          "type": "object",
          "properties": {
          "inputs": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/PublicAssociation"
          }
          }
          }
          },
          "TimelineEvent": {
            "required": [
            "eventTemplateId",
            "tokens"
            ],
            "type": "object",
            "properties": {
            "eventTemplateId": {
            "type": "string",
            "description": "The event template ID."
            },
            "email": {
            "type": "string",
            "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
            },
            "objectId": {
            "type": "string",
            "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
            },
            "utk": {
            "type": "string",
            "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
            },
            "domain": {
            "type": "string",
            "description": "The event domain (often paired with utk)."
            },
            "timestamp": {
            "type": "string",
            "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
            "format": "date-time"
            },
            "tokens": {
            "type": "object",
            "additionalProperties": {
            "type": "string"
            },
            "description": "A collection of token keys and values associated with the template tokens."
            },
            "extraData": {
            "type": "object",
            "properties": {},
            "description": "Additional event-specific data that can be interpreted by the template's markdown."
            },
            "timelineIFrame": {
            "$ref": "#/definitions/TimelineEventIFrame"
            },
            "id": {
            "type": "string",
            "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
            }
            },
            "description": "The state of the timeline event."
            },
            "TimelineEventIFrame": {
            "required": [
            "headerLabel",
            "height",
            "linkLabel",
            "url",
            "width"
            ],
            "type": "object",
            "properties": {
            "linkLabel": {
            "type": "string",
            "description": "The text displaying the link that will display the iframe."
            },
            "headerLabel": {
            "type": "string",
            "description": "The label of the modal window that displays the iframe contents."
            },
            "url": {
            "type": "string",
            "description": "The URI of the iframe contents."
            },
            "width": {
            "type": "integer",
            "description": "The width of the modal window in pixels.",
            "format": "int32"
            },
            "height": {
            "type": "integer",
            "description": "The height of the modal window in pixels.",
            "format": "int32"
            }
            }
            },
            "EventDetail": {
            "required": [
            "details"
            ],
            "type": "object",
            "properties": {
            "details": {
            "type": "string",
            "description": "The details Markdown rendered as HTML."
            }
            },
            "description": "The details Markdown rendered as HTML."
            },
            "TimelineEventTemplateCreateRequest": {
            "required": [
            "name",
            "objectType",
            "tokens"
            ],
            "type": "object",
            "properties": {
            "name": {
            "type": "string",
            "description": "The template name."
            },
            "headerTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
            },
            "detailTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
            },
            "tokens": {
            "type": "array",
            "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplateToken"
            }
            },
            "objectType": {
            "type": "string",
            "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported."
            }
            },
            "description": "State of the template definition being created."
            },
            "TimelineEventTemplateUpdateRequest": {
            "required": [
            "id",
            "name",
            "tokens"
            ],
            "type": "object",
            "properties": {
            "name": {
            "type": "string",
            "description": "The template name."
            },
            "headerTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
            },
            "detailTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
            },
            "tokens": {
            "type": "array",
            "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplateToken"
            }
            },
            "id": {
            "type": "string",
            "description": "The template ID."
            }
            },
            "description": "State of the template definition being updated."
            },
            "CollectionResponseTimelineEventTemplateNoPaging": {
            "required": [
            "results"
            ],
            "type": "object",
            "properties": {
            "results": {
            "type": "array",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplate"
            }
            }
            }
            },
            "BatchResponseTimelineEventResponse": {
            "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
            ],
            "type": "object",
            "properties": {
            "status": {
            "type": "string",
            "description": "The status of the batch response. Should always be COMPLETED if processed.",
            "enum": [
            "PENDING",
            "PROCESSING",
            "CANCELED",
            "COMPLETE"
            ]
            },
            "results": {
            "type": "array",
            "description": "Successfully created events.",
            "items": {
            "$ref": "#/definitions/TimelineEventResponse"
            }
            },
            "requestedAt": {
            "type": "string",
            "description": "The time the request occurred.",
            "format": "date-time"
            },
            "startedAt": {
            "type": "string",
            "description": "The time the request began processing.",
            "format": "date-time"
            },
            "completedAt": {
            "type": "string",
            "description": "The time the request was completed.",
            "format": "date-time"
            },
            "links": {
            "type": "object",
            "additionalProperties": {
            "type": "string"
            }
            }
            },
            "description": "The state of the batch event request."
            },
            "BatchInputTimelineEvent": {
            "required": [
            "inputs"
            ],
            "type": "object",
            "properties": {
            "inputs": {
            "type": "array",
            "description": "A collection of timeline events we want to create.",
            "items": {
            "$ref": "#/definitions/TimelineEvent"
            }
            }
            },
            "description": "Used to create timeline events in batches."
            },
            "TimelineEventTemplate": {
            "required": [
            "id",
            "name",
            "objectType",
            "tokens"
            ],
            "type": "object",
            "properties": {
            "name": {
            "type": "string",
            "description": "The template name."
            },
            "headerTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
            },
            "detailTemplate": {
            "type": "string",
            "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
            },
            "tokens": {
            "type": "array",
            "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplateToken"
            }
            },
            "id": {
            "type": "string",
            "description": "The template ID."
            },
            "objectType": {
            "type": "string",
            "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported."
            },
            "createdAt": {
            "type": "string",
            "description": "The date and time that the Event Template was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
            "format": "date-time"
            },
            "updatedAt": {
            "type": "string",
            "description": "The date and time that the Event Template was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
            "format": "date-time"
            }
            },
            "description": "The current state of the template definition."
            },
            "TimelineEventTemplateTokenOption": {
            "required": [
            "label",
            "value"
            ],
            "type": "object",
            "properties": {
            "value": {
            "type": "string"
            },
            "label": {
            "type": "string"
            }
            }
            },
            "TimelineEventTemplateToken": {
            "required": [
            "label",
            "name",
            "options",
            "type"
            ],
            "type": "object",
            "properties": {
            "label": {
            "type": "string",
            "description": "Used for list segmentation and reporting."
            },
            "objectPropertyName": {
            "type": "string",
            "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
            },
            "options": {
            "type": "array",
            "description": "If type is `enumeration`, we should have a list of options to choose from.",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplateTokenOption"
            }
            },
            "name": {
            "type": "string",
            "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
            },
            "type": {
            "type": "string",
            "description": "The data type of the token. You can currently choose from [string, number, date, enumeration].",
            "enum": [
            "date",
            "enumeration",
            "number",
            "string"
            ]
            },
            "createdAt": {
            "type": "string",
            "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
            "format": "date-time"
            },
            "updatedAt": {
            "type": "string",
            "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
            "format": "date-time"
            }
            },
            "description": "State of the token definition."
            },
            "TimelineEventResponse": {
            "required": [
            "eventTemplateId",
            "id",
            "objectType",
            "tokens"
            ],
            "type": "object",
            "properties": {
            "id": {
            "type": "string",
            "description": "Identifier for the event. This should be unique to the app and event template. If you use the same ID for different CRM objects, the last to be processed will win and the first will not have a record. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
            },
            "eventTemplateId": {
            "type": "string",
            "description": "The event template ID."
            },
            "email": {
            "type": "string",
            "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
            },
            "objectId": {
            "type": "string",
            "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
            },
            "utk": {
            "type": "string",
            "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
            },
            "domain": {
            "type": "string",
            "description": "The event domain (often paired with utk)."
            },
            "timestamp": {
            "type": "string",
            "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
            "format": "date-time"
            },
            "tokens": {
            "type": "object",
            "additionalProperties": {
            "type": "string"
            },
            "description": "A collection of token keys and values associated with the template tokens."
            },
            "extraData": {
            "type": "object",
            "properties": {},
            "description": "Additional event-specific data that can be interpreted by the template's markdown."
            },
            "timelineIFrame": {
            "$ref": "#/definitions/TimelineEventIFrame"
            },
            "objectType": {
            "type": "string",
            "description": "The ObjectType associated with the EventTemplate."
            },
            "createdAt": {
            "type": "string",
            "format": "date-time"
            }
            },
            "description": "The current state of the timeline event."
            },
            "TimelineEventTemplateTokenUpdateRequest": {
            "required": [
            "label",
            "options"
            ],
            "type": "object",
            "properties": {
            "label": {
            "type": "string",
            "description": "Used for list segmentation and reporting."
            },
            "objectPropertyName": {
            "type": "string",
            "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
            },
            "options": {
            "type": "array",
            "description": "If type is `enumeration`, we should have a list of options to choose from.",
            "items": {
            "$ref": "#/definitions/TimelineEventTemplateTokenOption"
            }
            }
            },
            "description": "State of the token definition for update requests."
            },
            "BatchResponseTimelineEventResponseWithErrors": {
            "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
            ],
            "type": "object",
            "properties": {
            "status": {
            "type": "string",
            "enum": [
            "PENDING",
            "PROCESSING",
            "CANCELED",
            "COMPLETE"
            ]
            },
            "results": {
            "type": "array",
            "items": {
            "$ref": "#/definitions/TimelineEventResponse"
            }
            },
            "numErrors": {
            "type": "integer",
            "format": "int32"
            },
            "errors": {
            "type": "array",
            "items": {
            "$ref": "#/definitions/StandardError"
            }
            },
            "requestedAt": {
            "type": "string",
            "format": "date-time"
            },
            "startedAt": {
            "type": "string",
            "format": "date-time"
            },
            "completedAt": {
            "type": "string",
            "format": "date-time"
            },
            "links": {
            "type": "object",
            "additionalProperties": {
            "type": "string"
            }
            }
            }
            },
            "PublicGdprDeleteInput":{
              "required":[
                 "objectId"
              ],
              "type":"object",
              "properties":{
                 "objectId":{
                    "type":"string"
                 },
                 "idProperty":{
                    "type":"string"
                 }
              }
           },
           "CollectionResponseAssociatedIdForwardPaging":{
            "required":[
               "results"
            ],
            "type":"object",
            "properties":{
               "results":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/AssociatedId"
                  }
               },
               "paging":{
                  "$ref":"#/definitions/ForwardPaging"
               }
            }
         },
         "ExternalSettings":{
          "required":[
             "createMeetingUrl"
          ],
          "type":"object",
          "properties":{
             "createMeetingUrl":{
                "type":"string",
                "description":"The URL that HubSpot will send requests to create a new video conference."
             },
             "updateMeetingUrl":{
                "type":"string",
                "description":"The URL that HubSpot will send updates to existing meetings. Typically called when the user changes the topic or times of a meeting."
             },
             "deleteMeetingUrl":{
                "type":"string",
                "description":"The URL that HubSpot will send notifications of meetings that have been deleted in HubSpot."
             },
             "userVerifyUrl":{
                "type":"string",
                "description":"The URL that HubSpot will use to verify that a user exists in the video conference application."
             }
          },
          "description":"The URLs of the various actions provided by the video conferencing application. All URLs must use the `https` protocol."
       },
       "WebhooksThrottlingSettings":{
        "required":[
           "maxConcurrentRequests",
           "period"
        ],
        "type":"object",
        "properties":{
           "maxConcurrentRequests":{
              "type":"integer",
              "description":"The maximum number of HTTP requests HubSpot will attempt to make to your app in a given time frame determined by `period`.",
              "format":"int32"
           },
           "period":{
              "type":"string",
              "description":"Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).",
              "enum":[
                 "SECONDLY",
                 "ROLLING_MINUTE"
              ]
           }
        },
        "description":"Configuration details for webhook throttling."
     },
     "WebhooksBatchResponseSubscriptionResponse":{
        "required":[
           "completedAt",
           "results",
           "startedAt",
           "status"
        ],
        "type":"object",
        "properties":{
           "status":{
              "type":"string",
              "enum":[
                 "PENDING",
                 "PROCESSING",
                 "CANCELED",
                 "COMPLETE"
              ]
           },
           "results":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/WebhooksSubscriptionResponse"
              }
           },
           "requestedAt":{
              "type":"string",
              "format":"date-time"
           },
           "startedAt":{
              "type":"string",
              "format":"date-time"
           },
           "completedAt":{
              "type":"string",
              "format":"date-time"
           },
           "links":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              }
           }
        }
     },
     "WebhooksSubscriptionListResponse":{
        "required":[
           "results"
        ],
        "type":"object",
        "properties":{
           "results":{
              "type":"array",
              "description":"List of event subscriptions for your app",
              "items":{
                 "$ref":"#/definitions/WebhooksSubscriptionResponse"
              }
           }
        },
        "description":"List of event subscriptions for your app"
     },
     "WebhooksSettingsChangeRequest":{
        "required":[
           "targetUrl",
           "throttling"
        ],
        "type":"object",
        "properties":{
           "targetUrl":{
              "type":"string",
              "description":"A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads."
           },
           "throttling":{
              "$ref":"#/definitions/WebhooksThrottlingSettings"
           }
        },
        "description":"New or updated webhook settings for an app."
     },
     "WebhooksSubscriptionPatchRequest":{
        "type":"object",
        "properties":{
           "active":{
              "type":"boolean",
              "description":"Determines if the subscription is active or paused."
           }
        },
        "description":"Updated details for the subscription."
     },
     "WebhooksBatchResponseSubscriptionResponseWithErrors":{
        "required":[
           "completedAt",
           "results",
           "startedAt",
           "status"
        ],
        "type":"object",
        "properties":{
           "status":{
              "type":"string",
              "enum":[
                 "PENDING",
                 "PROCESSING",
                 "CANCELED",
                 "COMPLETE"
              ]
           },
           "results":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/WebhooksSubscriptionResponse"
              }
           },
           "numErrors":{
              "type":"integer",
              "format":"int32"
           },
           "errors":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/StandardError"
              }
           },
           "requestedAt":{
              "type":"string",
              "format":"date-time"
           },
           "startedAt":{
              "type":"string",
              "format":"date-time"
           },
           "completedAt":{
              "type":"string",
              "format":"date-time"
           },
           "links":{
              "type":"object",
              "additionalProperties":{
                 "type":"string"
              }
           }
        }
     },
     "WebhooksSettingsResponse":{
        "required":[
           "createdAt",
           "targetUrl",
           "throttling"
        ],
        "type":"object",
        "properties":{
           "targetUrl":{
              "type":"string",
              "description":"A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads."
           },
           "throttling":{
              "$ref":"#/definitions/WebhooksThrottlingSettings"
           },
           "createdAt":{
              "type":"string",
              "description":"When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
              "format":"date-time"
           },
           "updatedAt":{
              "type":"string",
              "description":"When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
              "format":"date-time"
           }
        },
        "description":"Webhook settings for an app."
     },
     "WebhooksBatchInputSubscriptionBatchUpdateRequest":{
        "required":[
           "inputs"
        ],
        "type":"object",
        "properties":{
           "inputs":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/WebhooksSubscriptionBatchUpdateRequest"
              }
           }
        }
     },
     "WebhooksSubscriptionBatchUpdateRequest":{
        "required":[
           "active",
           "id"
        ],
        "type":"object",
        "properties":{
           "id":{
              "type":"integer",
              "format":"int32"
           },
           "active":{
              "type":"boolean"
           }
        }
     },
     "WebhooksSubscriptionResponse":{
        "required":[
           "active",
           "createdAt",
           "eventType",
           "id"
        ],
        "type":"object",
        "properties":{
           "eventType":{
              "type":"string",
              "description":"Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
              "enum":[
                 "contact.propertyChange",
                 "company.propertyChange",
                 "deal.propertyChange",
                 "ticket.propertyChange",
                 "product.propertyChange",
                 "line_item.propertyChange",
                 "contact.creation",
                 "contact.deletion",
                 "contact.privacyDeletion",
                 "company.creation",
                 "company.deletion",
                 "deal.creation",
                 "deal.deletion",
                 "ticket.creation",
                 "ticket.deletion",
                 "product.creation",
                 "product.deletion",
                 "line_item.creation",
                 "line_item.deletion",
                 "conversation.creation",
                 "conversation.deletion",
                 "conversation.newMessage",
                 "conversation.privacyDeletion",
                 "conversation.propertyChange"
              ]
           },
           "propertyName":{
              "type":"string",
              "description":"The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`."
           },
           "active":{
              "type":"boolean",
              "description":"Determines if the subscription is active or paused."
           },
           "id":{
              "type":"string",
              "description":"The unique ID of the subscription."
           },
           "createdAt":{
              "type":"string",
              "description":"When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
              "format":"date-time"
           },
           "updatedAt":{
              "type":"string",
              "description":"When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
              "format":"date-time"
           }
        },
        "description":"Complete details for an event subscription."
     },
     "WebhooksSubscriptionCreateRequest":{
        "required":[
           "eventType"
        ],
        "type":"object",
        "properties":{
           "eventType":{
              "type":"string",
              "description":"Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
              "enum":[
                 "contact.propertyChange",
                 "company.propertyChange",
                 "deal.propertyChange",
                 "ticket.propertyChange",
                 "product.propertyChange",
                 "line_item.propertyChange",
                 "contact.creation",
                 "contact.deletion",
                 "contact.privacyDeletion",
                 "company.creation",
                 "company.deletion",
                 "deal.creation",
                 "deal.deletion",
                 "ticket.creation",
                 "ticket.deletion",
                 "product.creation",
                 "product.deletion",
                 "line_item.creation",
                 "line_item.deletion",
                 "conversation.creation",
                 "conversation.deletion",
                 "conversation.newMessage",
                 "conversation.privacyDeletion",
                 "conversation.propertyChange"
              ]
           },
           "propertyName":{
              "type":"string",
              "description":"The internal name of the property to monitor for changes. Only applies when `eventType` is `propertyChange`."
           },
           "active":{
              "type":"boolean",
              "description":"Determines if the subscription is active or paused. Defaults to false."
           }
        },
        "description":"New webhook settings for an app."
     }
  }
}