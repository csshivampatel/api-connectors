{
  "openapi": "3.0.1",
  "info": {
    "title": "NetSuite REST Record API",
    "description": "NetSuite REST Record API generated 2024-05-24 at 12:32:20 UTC for account TSTDRV1303059, user joe.klug@peregrineconnect.com with role Neuron ESB Integration.",
    "termsOfService": "http://www.netsuite.com/portal/resource/terms-of-service.shtml",
    "contact": {
      "name": "Oracle NetSuite",
      "url": "http://www.netsuite.com",
      "email": "info@netsuite.com"
    },
    "version": "v1",
    "x-framework": {
      "name": "oracle-netsuite-suitetalk-rest"
    }
  },
  "servers": [
    {
      "url": "https://tstdrv1303059.suitetalk.api.netsuite.com/services/rest/record/v1"
    }
  ],
  "paths": {
    "/campaign": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Insert record.",
        "operationId": "campaignPOST",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Inserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/campaign/{id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get record.",
        "operationId": "campaignGET",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expandSubResources",
            "in": "query",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "simpleEnumFormat",
            "in": "query",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "examples": {
              "multiple fields": {
                "value": "field1,field2"
              },
              "single field": {
                "value": "field"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved record.",
            "headers": {
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "summary": "Insert or update record.",
        "operationId": "campaignPUT",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "External identifier.",
            "schema": {
              "type": "string",
              "pattern": "eid:(.+)"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Upserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Campaign"
        ],
        "summary": "Remove record.",
        "operationId": "campaignDELETE",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed record."
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "summary": "Update record.",
        "operationId": "campaignPATCH",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "nsResourceCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nsResource"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "nsResource": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Internal identifier",
            "type": "string"
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "externalId": {
            "title": "External identifier",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          }
        }
      },
      "campaign-campaignDripCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign-campaignDripElement"
            }
          }
        }
      },
      "campaign-defaultEventCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign-defaultEventElement"
            }
          }
        }
      },
      "nsError": {
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "readOnly": true,
            "description": "A URI reference to the documentation about the problem type.",
            "format": "URI"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "readOnly": true,
            "description": "A human-readable description of the problem type."
          },
          "status": {
            "title": "Status",
            "type": "integer",
            "readOnly": true,
            "description": "The HTTP status code generated by the server the request originates from.",
            "format": "int32"
          },
          "o:errorDetails": {
            "type": "array",
            "readOnly": true,
            "description": "An array containing one or more problem types.",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "title": "Detail",
                  "type": "string",
                  "readOnly": true,
                  "description": "A detailed, human-readable description of the problem occurrence."
                },
                "o:errorPath": {
                  "title": "Error Path",
                  "type": "string",
                  "readOnly": true,
                  "description": "The JSON path that indicates where the problem occurs within the request body.",
                  "format": "JSONPath"
                },
                "o:errorUrl": {
                  "title": "Error URL",
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI of the first element in the request URL where the problem occurs.",
                  "format": "URI"
                },
                "o:errorHeader": {
                  "title": "Error Header",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the HTTP header where the problem occurs."
                },
                "o:errorQueryParam": {
                  "title": "Error Query Parameter",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the query parameter where the problem occurs."
                },
                "o:errorCode": {
                  "title": "Error Code",
                  "type": "string",
                  "readOnly": true,
                  "description": "The application-specific error code. Similar problem types are grouped together."
                }
              }
            }
          }
        }
      },
      "campaign-campaignEmailCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign-campaignEmailElement"
            }
          }
        }
      },
      "nsLink": {
        "type": "object",
        "properties": {
          "rel": {
            "title": "Relationship",
            "type": "string",
            "readOnly": true
          },
          "href": {
            "title": "Hypertext Reference",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "campaign-campaignDirectMailCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign-campaignDirectMailElement"
            }
          }
        }
      },
      "campaign-campaignEmailElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "timeScheduled": {
            "title": "Time",
            "type": "string",
            "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
            "nullable": true
          },
          "cost": {
            "title": "Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "title": "Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "NOTSTART",
                  "PROGRESS",
                  "EXECUTE",
                  "SENT",
                  "FAILED"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "promoCode": {
            "$ref": "#/components/schemas/nsResource"
          },
          "channel": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscription": {
            "$ref": "#/components/schemas/nsResource"
          },
          "template": {
            "$ref": "#/components/schemas/nsResource"
          },
          "campaignGroup": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "campaign-campaignDripElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "cost": {
            "title": "Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "promoCode": {
            "$ref": "#/components/schemas/nsResource"
          },
          "channel": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscription": {
            "$ref": "#/components/schemas/nsResource"
          },
          "template": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "campaignCollection": {
        "type": "object",
        "properties": {
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "title": "Items",
            "type": "array",
            "description": "An array field that represents a collection of elements, for example, sublist lines, multiselect items, or search results.",
            "items": {
              "$ref": "#/components/schemas/campaign"
            }
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "campaign-campaignDirectMailElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "cost": {
            "title": "Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "title": "Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "NOTSTART",
                  "COMPLETE",
                  "EXECUTE",
                  "PROGRESS"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "promoCode": {
            "$ref": "#/components/schemas/nsResource"
          },
          "campaignGroup": {
            "$ref": "#/components/schemas/nsResource"
          },
          "channel": {
            "$ref": "#/components/schemas/nsResource"
          },
          "template": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscription": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "campaign-defaultEventElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "dScheduled": {
            "title": "Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "title": "Status",
            "type": "string",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          }
        },
        "x-ns-filterable": []
      },
      "campaign": {
        "type": "object",
        "properties": {
          "isinactive": {
            "title": "Inactive",
            "type": "boolean",
            "description": "Check this box to inactivate this campaign."
          },
          "conversions": {
            "title": "Number of Purchasers",
            "type": "integer",
            "description": "This is the number of leads or prospects that have become customers as a result of this campaign.",
            "format": "int64",
            "nullable": true
          },
          "campaignId": {
            "title": "ID",
            "type": "string",
            "description": "The campaign ID is determined in one of the following ways: * If you use auto-generated numbers for campaigns, this ID is generated when you save the campaign. * If you do not use auto-generated numbers for campaigns, enter a campaign ID. Campaign IDs make it easier to identify campaigns on reports and lists.",
            "nullable": true
          },
          "isDefaultLeadSource": {
            "title": "Default Lead Source",
            "type": "boolean"
          },
          "expectedRevenue": {
            "title": "Projected Income",
            "type": "number",
            "description": "Enter the amount of revenue that is predicted that this marketing campaign will generate.",
            "format": "double",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "title": "Start Date",
            "type": "string",
            "description": "Enter or select the date this campaign begins.",
            "format": "date",
            "nullable": true
          },
          "costPerCustomer": {
            "title": "Cost Per Lead",
            "type": "number",
            "description": "The cost per new customer for this campaign is calculated here. Cost per customer is calculated by dividing the total cost of the campaign by the number of new customers your business gained as a result of this campaign. The number of new customers is calculated by counting the transactions entered with this campaign&apos;s promotion code.",
            "format": "double",
            "nullable": true
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Enter a title for this campaign. You can enter up to 99 characters in this field.",
            "nullable": true
          },
          "roi": {
            "title": "Return on Investment",
            "type": "number",
            "description": "The return on investment of this campaign is calculated here. Return on investment is calculated by deducting the cost of the campaign from the total revenue generated and dividing the difference by the campaign&apos;s cost.",
            "format": "double",
            "nullable": true
          },
          "leadsGenerated": {
            "title": "Leads Generated",
            "type": "integer",
            "description": "This is the number of new leads generated by this campaign.",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Enter the paid keyword you are tracking with this campaign.",
            "nullable": true
          },
          "profit": {
            "title": "Profit",
            "type": "number",
            "description": "This is the profit earned by this campaign. Profit is calculated by deducting the cost of the campaign from the total revenue.",
            "format": "double",
            "nullable": true
          },
          "eventNumber": {
            "title": "Number",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cost": {
            "title": "Total Cost",
            "type": "number",
            "description": "This cost is calculated by adding the base cost of the campaign to the cost of each individual campaign event. You cannot edit the amount in this field. This amount is deducted from the revenue generated by this campaign to determine the return on investment.",
            "format": "double",
            "nullable": true
          },
          "uniqueVisitors": {
            "title": "Unique Visitors",
            "type": "integer",
            "description": "This is the number of unique visitors that have visited your website as a result of this campaign.",
            "format": "int64",
            "nullable": true
          },
          "message": {
            "title": "Description",
            "type": "string",
            "description": "Enter a description for this campaign. This description only appears on the campaign record.",
            "nullable": true
          },
          "url": {
            "title": "URL",
            "type": "string",
            "description": "Enter the URL for the campaign landing page or online customer form associated with this campaign. If you enter a campaign ID or if you autonumber your campaigns, NetSuite automatically appends the URL to include the leadsource parameter. This is the destination URL you provide to search engine services for paid keywords.",
            "nullable": true
          },
          "totalRevenue": {
            "title": "Revenue",
            "type": "number",
            "description": "This field shows the total sales of transactions associated with this campaign.",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "title": "End Date",
            "type": "string",
            "description": "Enter or select the date this campaign ends.",
            "format": "date",
            "nullable": true
          },
          "baseCost": {
            "title": "Cost",
            "type": "number",
            "description": "Enter the cost of this campaign apart from the cost of any specific campaign events. The base cost is added to the cost of individual campaign events to determine the total cost of the campaign.",
            "format": "double",
            "nullable": true
          },
          "customForm": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "56",
                  "-130"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "autoName": {
            "title": "Auto",
            "type": "boolean",
            "description": "Clear this box if you want to enter an ID for this campaign."
          },
          "convCostPerCustomer": {
            "title": "Cost per Purchaser",
            "type": "number",
            "description": "The cost per customer conversion for this campaign is calculated here. This is calculated by dividing the cost of the campaign by the number of transactions entered with this campaign&apos;s promotion code.",
            "format": "double",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "offer": {
            "$ref": "#/components/schemas/nsResource"
          },
          "vertical": {
            "$ref": "#/components/schemas/nsResource"
          },
          "category": {
            "$ref": "#/components/schemas/nsResource"
          },
          "family": {
            "$ref": "#/components/schemas/nsResource"
          },
          "searchEngine": {
            "$ref": "#/components/schemas/nsResource"
          },
          "promotionCode": {
            "$ref": "#/components/schemas/nsResource"
          },
          "defaultEvent": {
            "$ref": "#/components/schemas/campaign-defaultEventCollection"
          },
          "campaignEvent": {
            "$ref": "#/components/schemas/campaign-campaignEventCollection"
          },
          "campaignDirectMail": {
            "$ref": "#/components/schemas/campaign-campaignDirectMailCollection"
          },
          "campaignEmail": {
            "$ref": "#/components/schemas/campaign-campaignEmailCollection"
          },
          "audience": {
            "$ref": "#/components/schemas/nsResource"
          },
          "item": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/nsResourceCollection"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custevent_medium": {
            "$ref": "#/components/schemas/nsResource"
          },
          "campaignDrip": {
            "$ref": "#/components/schemas/campaign-campaignDripCollection"
          }
        },
        "x-ns-filterable": []
      },
      "campaign-campaignEventElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "cost": {
            "title": "Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "title": "Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "NOTSTART",
                  "COMPLETE",
                  "EXECUTE",
                  "PROGRESS"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "campaignGroup": {
            "$ref": "#/components/schemas/nsResource"
          },
          "channel": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscription": {
            "$ref": "#/components/schemas/nsResource"
          },
          "promoCode": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "campaign-campaignEventCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign-campaignEventElement"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth_1.0_authorization": {
        "type": "apiKey",
        "description": "OAuth 1.0 - https://tools.ietf.org/html/rfc5849",
        "name": "authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "OAuth_1.0_authorization": []
    }
  ]
}