{
  "openapi": "3.0.1",
  "info": {
    "title": "NetSuite REST Record API",
    "description": "NetSuite REST Record API generated 2024-05-24 at 11:18:33 UTC for account TSTDRV1303059, user joe.klug@peregrineconnect.com with role Neuron ESB Integration.",
    "termsOfService": "http://www.netsuite.com/portal/resource/terms-of-service.shtml",
    "contact": {
      "name": "Oracle NetSuite",
      "url": "http://www.netsuite.com",
      "email": "info@netsuite.com"
    },
    "version": "v1",
    "x-framework": {
      "name": "oracle-netsuite-suitetalk-rest"
    }
  },
  "servers": [
    {
      "url": "https://tstdrv1303059.suitetalk.api.netsuite.com/services/rest/record/v1"
    }
  ],
  "paths": {
    "/vendor": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get list of records.",
        "operationId": "vendorGET",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query that is used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit used to specify the number of results on a single page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset used for selecting a specific page of results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of records.",
            "content": {
              "application/vnd.oracle.resource+json; type=collection": {
                "schema": {
                  "$ref": "#/components/schemas/vendorCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Insert record.",
        "operationId": "vendorPOST",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Inserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get record.",
        "operationId": "vendorGET2",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expandSubResources",
            "in": "query",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "simpleEnumFormat",
            "in": "query",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "examples": {
              "multiple fields": {
                "value": "field1,field2"
              },
              "single field": {
                "value": "field"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved record.",
            "headers": {
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/vendor"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Insert or update record.",
        "operationId": "vendorPUT",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "External identifier.",
            "schema": {
              "type": "string",
              "pattern": "eid:(.+)"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Upserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Remove record.",
        "operationId": "vendorDELETE",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed record."
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Vendor"
        ],
        "summary": "Update record.",
        "operationId": "vendorPATCH",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{id}/!transform/vendorBill": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Transform to vendorBill.",
        "operationId": "vendorBill",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/nsResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Transformed record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/nsResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{id}/!transform/purchaseOrder": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Transform to purchaseOrder.",
        "operationId": "purchaseOrder",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/nsResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Transformed record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/nsResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{id}/!transform/vendorPayment": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Transform to vendorPayment.",
        "operationId": "vendorPayment",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/nsResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Transformed record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/nsResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{id}/!transform/customer": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Transform to customer.",
        "operationId": "customer",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/nsResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Transformed record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/nsResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "vendor-subscriptionMessageHistoryCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-subscriptionMessageHistoryElement"
            }
          }
        }
      },
      "nsResourceCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nsResource"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "nsResource": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Internal identifier",
            "type": "string"
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "externalId": {
            "title": "External identifier",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          }
        }
      },
      "nsError": {
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "readOnly": true,
            "description": "A URI reference to the documentation about the problem type.",
            "format": "URI"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "readOnly": true,
            "description": "A human-readable description of the problem type."
          },
          "status": {
            "title": "Status",
            "type": "integer",
            "readOnly": true,
            "description": "The HTTP status code generated by the server the request originates from.",
            "format": "int32"
          },
          "o:errorDetails": {
            "type": "array",
            "readOnly": true,
            "description": "An array containing one or more problem types.",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "title": "Detail",
                  "type": "string",
                  "readOnly": true,
                  "description": "A detailed, human-readable description of the problem occurrence."
                },
                "o:errorPath": {
                  "title": "Error Path",
                  "type": "string",
                  "readOnly": true,
                  "description": "The JSON path that indicates where the problem occurs within the request body.",
                  "format": "JSONPath"
                },
                "o:errorUrl": {
                  "title": "Error URL",
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI of the first element in the request URL where the problem occurs.",
                  "format": "URI"
                },
                "o:errorHeader": {
                  "title": "Error Header",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the HTTP header where the problem occurs."
                },
                "o:errorQueryParam": {
                  "title": "Error Query Parameter",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the query parameter where the problem occurs."
                },
                "o:errorCode": {
                  "title": "Error Code",
                  "type": "string",
                  "readOnly": true,
                  "description": "The application-specific error code. Similar problem types are grouped together."
                }
              }
            }
          }
        }
      },
      "nsLink": {
        "type": "object",
        "properties": {
          "rel": {
            "title": "Relationship",
            "type": "string",
            "readOnly": true
          },
          "href": {
            "title": "Hypertext Reference",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "vendor-subscriptionsElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "subscribed": {
            "title": "Subscribed",
            "type": "boolean"
          },
          "lastModifiedDate": {
            "title": "Last Modified",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "subscription": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "vendor-ratesElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "rate": {
            "title": "Hourly Rate",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "entityCurrency": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "vendor": {
        "type": "object",
        "properties": {
          "isJobResourceVend": {
            "title": "Job Resource",
            "type": "boolean",
            "description": "Check this box to enable this vendor to be chosen as a resource on tasks and jobs. As a job resource, a vendor can be assigned to complete a task or to manage a project. Clear this box if you do not want this vendor assigned as a job resource. Note: If you use NetSuite OneWorld, you cannot share a vendor with multiple subsidiaries and define the vendor as a resource on tasks and jobs."
          },
          "custentity_2663_payment_method": {
            "title": "EFT Bill Payment",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "description": "Returns the vendor&apos;s external ID, if one is assigned.",
            "nullable": true
          },
          "emailTransactions": {
            "title": "Email Transactions",
            "type": "boolean",
            "description": "Set a preferred transaction delivery method for this vendor. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the vendor on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this vendor is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this vendor is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this vendor is selected. Once you enter these settings on the vendor record, these boxes are checked by default for transactions created from the vendor record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new vendor records at Setup &gt; Company &gt; Printing, Fax and Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Vendors Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Update &gt; Mass Updates &gt; General and click Vendor."
          },
          "entityId": {
            "title": "Entity ID",
            "type": "string",
            "description": "In the Supplier ID field, enter your supplier&apos;s name as it should appear in all lists. If you use Auto-Generated Numbering, this field fills with the vendor number or code.",
            "nullable": true
          },
          "emailPreference": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "PDF",
                  "HTML",
                  "DEFAULT"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "subsidiaryEdition": {
            "title": "Edition",
            "type": "string",
            "nullable": true
          },
          "purchaseOrderAmount": {
            "title": "Vendor Bill - Purchase Order Amount Tolerance",
            "type": "number",
            "description": "Enter the tolerance limit for the discrepancy between the amount on the vendor bill and purchase order.",
            "format": "float",
            "nullable": true
          },
          "isAutogeneratedRepresentingEntity": {
            "title": "Is Autogenerated Representing Entity",
            "type": "boolean",
            "description": "This field indicates that this entity was automatically generated by NetSuite to represent a specific subsidiary."
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "Assign a password to give this vendor access to NetSuite. The Password Criteria panel will help you ensure you create a password that meets the password policy in effect in your account. You will need to tell the user the password you assign. For more information, see the help topic NetSuite Password Requirements.",
            "nullable": true
          },
          "receiptQuantity": {
            "title": "Vendor Bill - Item Receipt Quantity Tolerance",
            "type": "number",
            "description": "Enter the tolerance limit for the discrepancy between the quantity on the vendor bill and item receipt.",
            "format": "float",
            "nullable": true
          },
          "balance": {
            "title": "Balance (Base)",
            "type": "number",
            "description": "The vendor&apos;s current accounts payable balance due appears here.",
            "format": "double",
            "nullable": true
          },
          "mobilePhone": {
            "title": "Mobile Phone",
            "type": "string",
            "nullable": true
          },
          "printOnCheckAs": {
            "title": "Print on Check As",
            "type": "string",
            "description": "What you enter here prints on the Pay to the Order of line of a check instead of what you entered in the Vendor field.",
            "nullable": true
          },
          "balancePrimary": {
            "title": "Balance",
            "type": "number",
            "description": "This is a read-only calculated field that returns the vendor&apos;s current accounts payable balance in the specified currency.",
            "format": "double",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "fax": {
            "title": "Fax",
            "type": "string",
            "description": "Enter a fax number for this record. You should enter the fax number exactly as it must be dialed. If a &apos;1&apos; is required to fax to this number, be sure to include it at the beginning of the number. The number you enter here automatically appears in the To Be Faxed field of transactions when you select this customer. To fax NetSuite forms, an administrator must first set up fax service at Setup &gt; Company &gt; Printing, Fax and Email Preferences.",
            "nullable": true
          },
          "unbilledOrders": {
            "title": "Unbilled Orders (Base)",
            "type": "number",
            "description": "This field displays the total amount of orders that have been entered but not yet billed. If you have enabled the preference Vendor Credit Limit Includes Orders, then this total is included in credit limit calculations. Set this preference at Setup &gt; Accounting &gt; Preferences &gt; Accounting Preferences &gt; General.",
            "format": "double",
            "nullable": true
          },
          "custentity_my_brn": {
            "title": "BRN",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "unbilledOrdersPrimary": {
            "title": "Unbilled Orders",
            "type": "number",
            "description": "This field displays the total amount of orders that have been entered but not yet billed in the specified currency.",
            "format": "double",
            "nullable": true
          },
          "altPhone": {
            "title": "Alt. Phone",
            "type": "string",
            "description": "Enter an optional alternate phone number for this record. Phone numbers can be entered in the following formats:999-999-9999, 1-999-999-9999, (999) 999-9999, 1(999) 999-9999 or 999-999-9999 ext 9999 .",
            "nullable": true
          },
          "faxTransactions": {
            "title": "Fax Transactions",
            "type": "boolean",
            "description": "Set a preferred transaction delivery method for this vendor. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the vendor on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this vendor is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this vendor is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this vendor is selected. Once you enter these settings on the vendor record, these boxes are checked by default for transactions created from the vendor record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new vendor records at Setup &gt; Company &gt; Printing, Fax and Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Vendors Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Update &gt; Mass Updates &gt; General and click Vendor."
          },
          "custentity_rss_linkedin": {
            "title": "LinkedIn",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "dateCreated": {
            "title": "Date Created",
            "type": "string",
            "description": "The date this record was created displays here.",
            "format": "date-time",
            "nullable": true
          },
          "globalSubscriptionStatus": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "lastName": {
            "title": "Last Name",
            "type": "string",
            "description": "Optionally enter a last name here.",
            "nullable": true
          },
          "altEmail": {
            "title": "Alt. Email",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "description": "Enter a phone number for your vendor. It will appear on the Vendor List report. This field is required for the Online Bill Pay feature.",
            "nullable": true
          },
          "receiptQuantityDiff": {
            "title": "Vendor Bill - Item Receipt Quantity Difference",
            "type": "number",
            "description": "Enter the difference limit for the discrepancy between the quantity on the vendor bill and item receipt.",
            "format": "float",
            "nullable": true
          },
          "requirePwdChange": {
            "title": "Require Password Change On Next Login",
            "type": "boolean",
            "description": "Check this box to require this user to change their password on their next login to NetSuite. When the user next logs in, they see the Change Password page and cannot access other NetSuite pages until a new password is created and saved. Requiring this action protects your account from unauthorized access using generic passwords and prepares your account for an audit. The Require Password Change on Next Login box never displays as checked. When you check this box and save the record, an internal flag is set. When the password change occurs, the flag is cleared. If you later check the box again and save the record, the internal flag is reset to require another password change."
          },
          "phoneticName": {
            "title": "Furigana",
            "type": "string",
            "description": "Enter the furigana character you want to use to sort this record.",
            "nullable": true
          },
          "companyName": {
            "title": "Company Name",
            "type": "string",
            "description": "In the Company name field, enter the supplier&apos;s legal name. If you use Auto-Generated Numbering, you should enter the vendor name here to ensure that it appears along with the code in lists.",
            "nullable": true
          },
          "purchaseOrderQuantityDiff": {
            "title": "Vendor Bill - Purchase Order Quantity Difference",
            "type": "number",
            "description": "Enter the difference limit for the discrepancy between the quantity on the vendor bill and purchase order.",
            "format": "float",
            "nullable": true
          },
          "custentity_sii_id": {
            "title": "ID Number in the country of residence",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custentity_tax_contact_first": {
            "title": "Tax Contact First Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "salutation": {
            "title": "Mr./Ms...",
            "type": "string",
            "nullable": true
          },
          "defaultAddress": {
            "title": "Default Address",
            "type": "string",
            "description": "This field automatically shows the default billing address that you enter and add using the Address subtab.",
            "nullable": true
          },
          "isInactive": {
            "title": "Vendor is Inactive",
            "type": "boolean",
            "description": "When you check this box, this vendor will no longer appear on a list unless you check the Show Inactives box at the bottom of the list page."
          },
          "firstName": {
            "title": "First Name",
            "type": "string",
            "description": "Optionally enter a first name here.",
            "nullable": true
          },
          "openingBalance": {
            "title": "Opening Balance",
            "type": "number",
            "description": "Enter the opening balance of your account with this vendor.",
            "format": "double",
            "nullable": true
          },
          "homePhone": {
            "title": "Home Phone",
            "type": "string",
            "nullable": true
          },
          "custentity_rss_website": {
            "title": "Website",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "legalName": {
            "title": "Legal Name",
            "type": "string",
            "description": "Enter the legal name for this vendor for financial purposes. If you entered a name in the Company Name field, that name appears here.",
            "nullable": true
          },
          "title": {
            "title": "Job Title",
            "type": "string",
            "nullable": true
          },
          "custentity_2663_email_address_notif": {
            "title": "Email Address for Payment Notification",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "laborCost": {
            "title": "Labor Cost",
            "type": "number",
            "description": "Enter the cost of labor for this vendor in order to be able to calculate profitability on jobs.",
            "format": "double",
            "nullable": true
          },
          "custentity_tax_reg_no": {
            "title": "Tax Number",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "giveAccess": {
            "title": "Login Access",
            "type": "boolean",
            "description": "Check this box to give your vendor access to NetSuite. On the Roles subtab, assign a role to customize the level of access. You can assign multiple roles. To let your vendor view prior transactions and purchase orders, select the Vendor Center role."
          },
          "defaultShippingAddress": {
            "title": "Default Shipping Address",
            "type": "string",
            "description": "Returns the vendor&apos;s default shipping address, if one is entered on the vendor record.",
            "nullable": true
          },
          "isPerson": {
            "title": "Is Individual",
            "type": "boolean",
            "description": "Next to Type, select to identify the supplier as a Company or Individual."
          },
          "custentity_rss_yoe": {
            "title": "Years Of Experience",
            "type": "number",
            "format": "float",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "custentity_4599_sg_uen": {
            "title": "UEN",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "purchaseOrderQuantity": {
            "title": "Vendor Bill - Purchase Order Quantity Tolerance",
            "type": "number",
            "description": "Enter the tolerance limit for the discrepancy between the quantity on the vendor bill and purchase order",
            "format": "float",
            "nullable": true
          },
          "password2": {
            "title": "Confirm Password",
            "type": "string",
            "description": "Reenter the password in this field to verify that you entered the same password twice.",
            "nullable": true
          },
          "email": {
            "title": "Vendor Email",
            "type": "string",
            "description": "Enter the e-mail address of your vendor. If you allow your vendors online access, this becomes part of their access code.",
            "nullable": true
          },
          "openingBalanceDate": {
            "title": "Opening Balance Date",
            "type": "string",
            "description": "Enter the date of the balance entered in the Opening Balance field",
            "format": "date",
            "nullable": true
          },
          "comments": {
            "title": "Comments",
            "type": "string",
            "description": "Enter any other information you wish to track for this vendor.",
            "nullable": true
          },
          "accountNumber": {
            "title": "Account Number",
            "type": "string",
            "description": "If your vendors assign account numbers to you, enter one here. This number will later appear in these places: * In the Vendor # field on purchase orders * In the Memo field on checks",
            "nullable": true
          },
          "custentity_tax_contact_last": {
            "title": "Tax Contact Last Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "description": "Returns the date on which the vendor record was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "middleName": {
            "title": "Middle Name",
            "type": "string",
            "description": "Returns the vendor&apos;s middle name or initial, if one is entered on the vendor record.",
            "nullable": true
          },
          "printTransactions": {
            "title": "Print Transactions",
            "type": "boolean",
            "description": "Set a preferred transaction delivery method for this vendor. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the vendor on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this vendor is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this vendor is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this vendor is selected. Once you enter these settings on the vendor record, these boxes are checked by default for transactions created from the vendor record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new vendor records at Setup &gt; Company &gt; Printing, Fax and Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Vendors Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Update &gt; Mass Updates &gt; General and click Vendor."
          },
          "receiptAmount": {
            "title": "Vendor Bill - Item Receipt Amount Tolerance",
            "type": "number",
            "description": "Enter the tolerance limit for the discrepancy between the amount on the vendor bill and item receipt.",
            "format": "float",
            "nullable": true
          },
          "url": {
            "title": "URL",
            "type": "string",
            "description": "Enter a URL for this vendor&apos;s Web address. When you return to this record for viewing, this address is a link.",
            "nullable": true
          },
          "customForm": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "70",
                  "9",
                  "-20",
                  "-23"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "autoName": {
            "title": "Auto",
            "type": "boolean",
            "description": "Clear this box to manually enter a name for this record. If you leave this box marked, NetSuite assigns a name or number for this record based on your settings at Setup &gt; Company &gt; Auto-Generated Numbers."
          },
          "sendEmail": {
            "title": "Send New Access Notification Email",
            "type": "boolean",
            "description": "Check this box to automatically send an email notifying the vendor that you have given limited access to your NetSuite account. The standard NetSuite email message also contains a link to let the user create a password. If you do not check this box, you must check the Manually Assign or Change Password box. You must create the password, and tell the user the password, and when and how to log in. For security reasons, do not send the password by email."
          },
          "creditLimit": {
            "title": "Credit Limit",
            "type": "number",
            "description": "Enter an optional credit limit for your purchases from this vendor. If you have a NetSuite OneWorld account, enter the global credit limit for this vendor and any assigned subsidiary. This value can exceed the sum of the vendor and subsidiary credit limits. This credit limit sets a maximum currency amount that should be spent using credit without making a payment. The value displays in the vendor’s primary currency. The default is no value, or no credit limit. You can place the vendor on hold by entering 0 (zero.) Any new purchase order or vendor bill transaction displays a warning message. You cannot enter a negative value. NetSuite validates the transaction amounts on purchase orders and vendor bills against the global credit limit specified in the Credit Limit field. NetSuite does not include individual subsidiary credit limits in the global credit limit validation.",
            "format": "double",
            "nullable": true
          },
          "custentity_tax_contact_middle": {
            "title": "Tax Contact Middle Name",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "defaultVendorPaymentAccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "currencyList": {
            "$ref": "#/components/schemas/vendor-currencyListCollection"
          },
          "expenseAccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscriptions": {
            "$ref": "#/components/schemas/vendor-subscriptionsCollection"
          },
          "billingClass": {
            "$ref": "#/components/schemas/nsResource"
          },
          "roles": {
            "$ref": "#/components/schemas/vendor-rolesCollection"
          },
          "contactList": {
            "$ref": "#/components/schemas/nsResourceCollection"
          },
          "terms": {
            "$ref": "#/components/schemas/nsResource"
          },
          "currency": {
            "$ref": "#/components/schemas/nsResource"
          },
          "category": {
            "$ref": "#/components/schemas/nsResource"
          },
          "openingBalanceAccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custentity_sii_id_type": {
            "$ref": "#/components/schemas/nsResource"
          },
          "defaultBankAccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subsidiary": {
            "$ref": "#/components/schemas/nsResource"
          },
          "image": {
            "$ref": "#/components/schemas/nsResource"
          },
          "rates": {
            "$ref": "#/components/schemas/vendor-ratesCollection"
          },
          "workCalendar": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custentity_ra_approver": {
            "$ref": "#/components/schemas/nsResource"
          },
          "payablesAccount": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custentity_2663_eft_file_format": {
            "$ref": "#/components/schemas/nsResource"
          },
          "addressBook": {
            "$ref": "#/components/schemas/vendor-addressBookCollection"
          },
          "contact": {
            "$ref": "#/components/schemas/nsResource"
          },
          "representingSubsidiary": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custentity_tax_contact": {
            "$ref": "#/components/schemas/nsResource"
          },
          "subscriptionMessageHistory": {
            "$ref": "#/components/schemas/vendor-subscriptionMessageHistoryCollection"
          },
          "incoterm": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "vendor-subscriptionMessageHistoryElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          }
        },
        "x-ns-filterable": []
      },
      "vendorCollection": {
        "type": "object",
        "properties": {
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "title": "Items",
            "type": "array",
            "description": "An array field that represents a collection of elements, for example, sublist lines, multiselect items, or search results.",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "vendor-addressBookElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "internalId": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "defaultBilling": {
            "title": "Default Billing",
            "type": "boolean"
          },
          "addressBookAddress_text": {
            "title": "Address",
            "type": "string",
            "nullable": true
          },
          "defaultShipping": {
            "title": "Default Shipping",
            "type": "boolean"
          },
          "label": {
            "title": "Label",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "addressId": {
            "title": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "addressBookAddress": {
            "$ref": "#/components/schemas/vendor-addressBook-addressBookAddress"
          }
        },
        "x-ns-filterable": []
      },
      "vendor-rolesElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "ssoOnly": {
            "type": "string",
            "nullable": true
          },
          "wsOnly": {
            "type": "string",
            "nullable": true
          },
          "masterRole": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deviceidOnly": {
            "type": "string",
            "nullable": true
          },
          "billingWarn": {
            "title": "<A href='/app/billing/billingterms.nl?user=T'>Charges may apply</a>",
            "type": "string",
            "nullable": true
          },
          "centerType": {
            "type": "string",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "selectedRole": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "vendor-rolesCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-rolesElement"
            }
          }
        }
      },
      "vendor-currencyListCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-currencyListElement"
            }
          }
        }
      },
      "vendor-currencyListElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "balance": {
            "title": "Balance",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unbilledOrders": {
            "title": "Unbilled Orders",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": []
      },
      "vendor-ratesCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-ratesElement"
            }
          }
        }
      },
      "vendor-subscriptionsCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-subscriptionsElement"
            }
          }
        }
      },
      "vendor-addressBook-addressBookAddress": {
        "type": "object",
        "properties": {
          "zip": {
            "title": "Zip",
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "PR",
                  "PS",
                  "PT",
                  "PW",
                  "PY",
                  "QA",
                  "AD",
                  "AE",
                  "AF",
                  "AG",
                  "AI",
                  "AL",
                  "AM",
                  "AN",
                  "AO",
                  "AQ",
                  "AR",
                  "AS",
                  "AT",
                  "RE",
                  "AU",
                  "AW",
                  "AX",
                  "AZ",
                  "RO",
                  "BA",
                  "BB",
                  "RS",
                  "BD",
                  "BE",
                  "RU",
                  "BF",
                  "BG",
                  "RW",
                  "BH",
                  "BI",
                  "BJ",
                  "BL",
                  "BM",
                  "BN",
                  "BO",
                  "SA",
                  "BQ",
                  "SB",
                  "BR",
                  "SC",
                  "BS",
                  "SD",
                  "BT",
                  "SE",
                  "BV",
                  "SG",
                  "BW",
                  "SH",
                  "SI",
                  "BY",
                  "SJ",
                  "BZ",
                  "SK",
                  "SL",
                  "SM",
                  "SN",
                  "SO",
                  "CA",
                  "SR",
                  "CC",
                  "SS",
                  "CD",
                  "ST",
                  "CF",
                  "SV",
                  "CG",
                  "CH",
                  "SX",
                  "CI",
                  "SY",
                  "SZ",
                  "CK",
                  "CL",
                  "CM",
                  "CN",
                  "CO",
                  "CR",
                  "TC",
                  "CS",
                  "TD",
                  "CU",
                  "TF",
                  "CV",
                  "TG",
                  "CW",
                  "TH",
                  "CX",
                  "CY",
                  "TJ",
                  "CZ",
                  "TK",
                  "TL",
                  "TM",
                  "TN",
                  "TO",
                  "TR",
                  "TT",
                  "DE",
                  "TV",
                  "TW",
                  "DJ",
                  "TZ",
                  "DK",
                  "DM",
                  "DO",
                  "UA",
                  "UG",
                  "DZ",
                  "UM",
                  "EA",
                  "EC",
                  "US",
                  "EE",
                  "EG",
                  "EH",
                  "UY",
                  "UZ",
                  "VA",
                  "ER",
                  "VC",
                  "ES",
                  "ET",
                  "VE",
                  "VG",
                  "VI",
                  "VN",
                  "VU",
                  "FI",
                  "FJ",
                  "FK",
                  "FM",
                  "FO",
                  "FR",
                  "WF",
                  "GA",
                  "GB",
                  "WS",
                  "GD",
                  "GE",
                  "GF",
                  "GG",
                  "GH",
                  "GI",
                  "GL",
                  "GM",
                  "GN",
                  "GP",
                  "GQ",
                  "GR",
                  "GS",
                  "GT",
                  "GU",
                  "GW",
                  "GY",
                  "XK",
                  "HK",
                  "HM",
                  "HN",
                  "HR",
                  "HT",
                  "YE",
                  "HU",
                  "IC",
                  "ID",
                  "YT",
                  "IE",
                  "IL",
                  "IM",
                  "IN",
                  "IO",
                  "ZA",
                  "IQ",
                  "IR",
                  "IS",
                  "IT",
                  "ZM",
                  "JE",
                  "ZW",
                  "JM",
                  "JO",
                  "JP",
                  "KE",
                  "KG",
                  "KH",
                  "KI",
                  "KM",
                  "KN",
                  "KP",
                  "KR",
                  "KW",
                  "KY",
                  "KZ",
                  "LA",
                  "LB",
                  "LC",
                  "LI",
                  "LK",
                  "LR",
                  "LS",
                  "LT",
                  "LU",
                  "LV",
                  "LY",
                  "MA",
                  "MC",
                  "MD",
                  "ME",
                  "MF",
                  "MG",
                  "MH",
                  "MK",
                  "ML",
                  "MM",
                  "MN",
                  "MO",
                  "MP",
                  "MQ",
                  "MR",
                  "MS",
                  "MT",
                  "MU",
                  "MV",
                  "MW",
                  "MX",
                  "MY",
                  "MZ",
                  "NA",
                  "NC",
                  "NE",
                  "NF",
                  "NG",
                  "NI",
                  "NL",
                  "NO",
                  "NP",
                  "NR",
                  "NU",
                  "NZ",
                  "OM",
                  "PA",
                  "PE",
                  "PF",
                  "PG",
                  "PH",
                  "PK",
                  "PL",
                  "PM",
                  "PN"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "addr2": {
            "title": "Address 2",
            "type": "string",
            "nullable": true
          },
          "city": {
            "title": "City",
            "type": "string",
            "nullable": true
          },
          "addr1": {
            "title": "Address 1",
            "type": "string",
            "nullable": true
          },
          "lastModifiedDate": {
            "title": "Last Modified Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addr3": {
            "title": "Address 3",
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "addrPhone": {
            "title": "Phone",
            "type": "string",
            "nullable": true
          },
          "addressee": {
            "title": "Addressee",
            "type": "string",
            "nullable": true
          },
          "attention": {
            "title": "Attention",
            "type": "string",
            "nullable": true
          },
          "override": {
            "title": "Override",
            "type": "boolean"
          },
          "state": {
            "title": "State/Province",
            "type": "string",
            "nullable": true
          },
          "addrText": {
            "title": "Address",
            "type": "string",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          }
        },
        "x-ns-filterable": []
      },
      "vendor-addressBookCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor-addressBookElement"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth_1.0_authorization": {
        "type": "apiKey",
        "description": "OAuth 1.0 - https://tools.ietf.org/html/rfc5849",
        "name": "authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "OAuth_1.0_authorization": []
    }
  ]
}