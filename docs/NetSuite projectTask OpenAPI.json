{
  "openapi": "3.0.1",
  "info": {
    "title": "NetSuite REST Record API",
    "description": "NetSuite REST Record API generated 2024-05-24 at 12:35:05 UTC for account TSTDRV1303059, user joe.klug@peregrineconnect.com with role Neuron ESB Integration.",
    "termsOfService": "http://www.netsuite.com/portal/resource/terms-of-service.shtml",
    "contact": {
      "name": "Oracle NetSuite",
      "url": "http://www.netsuite.com",
      "email": "info@netsuite.com"
    },
    "version": "v1",
    "x-framework": {
      "name": "oracle-netsuite-suitetalk-rest"
    }
  },
  "servers": [
    {
      "url": "https://tstdrv1303059.suitetalk.api.netsuite.com/services/rest/record/v1"
    }
  ],
  "paths": {
    "/projectTask": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Get list of records.",
        "operationId": "projectTaskGET",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query that is used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit used to specify the number of results on a single page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The offset used for selecting a specific page of results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of records.",
            "content": {
              "application/vnd.oracle.resource+json; type=collection": {
                "schema": {
                  "$ref": "#/components/schemas/projectTaskCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Insert record.",
        "operationId": "projectTaskPOST",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/projectTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Inserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    },
    "/projectTask/{id}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Get record.",
        "operationId": "projectTaskGET2",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expandSubResources",
            "in": "query",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "simpleEnumFormat",
            "in": "query",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "examples": {
              "multiple fields": {
                "value": "field1,field2"
              },
              "single field": {
                "value": "field"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved record.",
            "headers": {
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.oracle.resource+json; type=singular": {
                "schema": {
                  "$ref": "#/components/schemas/projectTask"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Insert or update record.",
        "operationId": "projectTaskPUT",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "External identifier.",
            "schema": {
              "type": "string",
              "pattern": "eid:(.+)"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/projectTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Upserted record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Remove record.",
        "operationId": "projectTaskDELETE",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed record."
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Update record.",
        "operationId": "projectTaskPATCH",
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "in": "header",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Internal identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "in": "header",
            "description": "Sets the strictness of property name validation.",
            "schema": {
              "type": "string",
              "default": "Warning",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "in": "header",
            "description": "Sets the strictness of property value validation.",
            "schema": {
              "type": "string",
              "default": "Error",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ]
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "examples": {
              "multiple sublists": {
                "value": "sublist1,subrecord.sublist2"
              },
              "sublist on subrecord": {
                "value": "subrecord.sublist"
              },
              "single sublist": {
                "value": "sublist"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "in": "query",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/vnd.oracle.resource+json; type=singular": {
              "schema": {
                "$ref": "#/components/schemas/projectTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated record.",
            "headers": {
              "X-NetSuite-PropertyValidation": {
                "description": "The description of a property validation failure.",
                "schema": {
                  "type": "string"
                }
              },
              "X-NetSuite-Warning": {
                "description": "Warning messages that occurred during processing.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/vnd.oracle.resource+json; type=error": {
                "schema": {
                  "$ref": "#/components/schemas/nsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "nsResourceCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nsResource"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "nsResource": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Internal identifier",
            "type": "string"
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "externalId": {
            "title": "External identifier",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          }
        }
      },
      "projectTask-assigneeElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "cost": {
            "title": "Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCost": {
            "title": "Unit Cost",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "price": {
            "title": "Price",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "units": {
            "title": "Units",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "calculatedWork": {
            "title": "Calculated Work",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "plannedWork": {
            "title": "Planned Work",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "unitPrice": {
            "title": "Unit Price",
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "serviceItem": {
            "$ref": "#/components/schemas/nsResource"
          },
          "billingClass": {
            "$ref": "#/components/schemas/nsResource"
          },
          "resource": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/nsResource"
              }
            ]
          }
        },
        "x-ns-filterable": []
      },
      "nsError": {
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "readOnly": true,
            "description": "A URI reference to the documentation about the problem type.",
            "format": "URI"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "readOnly": true,
            "description": "A human-readable description of the problem type."
          },
          "status": {
            "title": "Status",
            "type": "integer",
            "readOnly": true,
            "description": "The HTTP status code generated by the server the request originates from.",
            "format": "int32"
          },
          "o:errorDetails": {
            "type": "array",
            "readOnly": true,
            "description": "An array containing one or more problem types.",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "title": "Detail",
                  "type": "string",
                  "readOnly": true,
                  "description": "A detailed, human-readable description of the problem occurrence."
                },
                "o:errorPath": {
                  "title": "Error Path",
                  "type": "string",
                  "readOnly": true,
                  "description": "The JSON path that indicates where the problem occurs within the request body.",
                  "format": "JSONPath"
                },
                "o:errorUrl": {
                  "title": "Error URL",
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI of the first element in the request URL where the problem occurs.",
                  "format": "URI"
                },
                "o:errorHeader": {
                  "title": "Error Header",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the HTTP header where the problem occurs."
                },
                "o:errorQueryParam": {
                  "title": "Error Query Parameter",
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the query parameter where the problem occurs."
                },
                "o:errorCode": {
                  "title": "Error Code",
                  "type": "string",
                  "readOnly": true,
                  "description": "The application-specific error code. Similar problem types are grouped together."
                }
              }
            }
          }
        }
      },
      "nsLink": {
        "type": "object",
        "properties": {
          "rel": {
            "title": "Relationship",
            "type": "string",
            "readOnly": true
          },
          "href": {
            "title": "Hypertext Reference",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "projectTask": {
        "type": "object",
        "properties": {
          "endDateBaseline": {
            "title": "End Date Baseline",
            "type": "string",
            "description": "The date in the End Date field when the baseline was set.",
            "format": "date-time",
            "nullable": true
          },
          "custevent_msprojconstraintdate": {
            "title": "MS Project Constraint Date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "eventId": {
            "title": "Project Task ID",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "plannedworkbaseline": {
            "title": "Planned Work Baseline",
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "title": {
            "title": "Name",
            "type": "string",
            "description": "Enter a name for the project task.",
            "nullable": true
          },
          "calculatedworkbaseline": {
            "title": "Calculated Work Baseline",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "custevent_msprojconstraint": {
            "title": "MS Project Constraint",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "msprojresources": {
            "title": "MS Project Resource Names",
            "type": "string",
            "nullable": true
          },
          "id": {
            "title": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "custevent9": {
            "title": "Task Notes",
            "type": "string",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "msprojschedwork": {
            "title": "MS Project Scheduled Work",
            "type": "string",
            "nullable": true
          },
          "nonBillableTask": {
            "title": "Non-billable",
            "type": "boolean",
            "description": "Check this box to designate this task as non-billable. When time is entered against this task, it is automatically marked as non-billable and cannot be changed to billable."
          },
          "custevent7": {
            "title": "Hours Worked",
            "type": "number",
            "format": "float",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "constraintType": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "ALAP",
                  "FIXEDSTART",
                  "ASAP"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "actualWork": {
            "title": "Actual Work",
            "type": "string",
            "description": "Indicates the actual time entered against the task.",
            "nullable": true
          },
          "msprojpreds": {
            "title": "MS Project Predecessors",
            "type": "string",
            "nullable": true
          },
          "custevent_uploadedbymsproj": {
            "title": "Uploaded from MS Project",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "priority": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "HIGH",
                  "MEDIUM",
                  "LOW"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "plannedwork": {
            "title": "Planned Work",
            "type": "string",
            "description": "Total planned work entered for the assigned resources. Time tracked against this task outside of the planned work is not added to this total.",
            "nullable": true
          },
          "message": {
            "title": "Comments",
            "type": "string",
            "description": "Enter any comments for the task.",
            "nullable": true
          },
          "finishByDate": {
            "title": "Finish No Later Than",
            "type": "string",
            "description": "Select the date this task must be finished by. This constraint takes precedence over task relationships and start dates are adjusted according to the fixed end date of a task with a Finish No Later Than constraint.",
            "format": "date",
            "nullable": true
          },
          "custevent_msprojmanual": {
            "title": "MS Project Manually Scheduled",
            "type": "boolean",
            "x-ns-custom-field": true
          },
          "percentTimeComplete": {
            "title": "Percent Complete",
            "type": "number",
            "description": "Shows the percent of planned project task time that has been completed. Percent Complete is calculated as follows: [Actual Work / Estimated Work] Percent Complete is 100% when the task status is Completed and Estimated Work is set to Actual Work.",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "title": "End Date",
            "type": "string",
            "description": "Indicates the estimated date when work for this task will be completed. NetSuite derives this date from the estimated work and other task dependencies. This date can change over the life of the project if the amount of work, resources assigned, or task dependencies change. When the task status is Completed, the end date is the date of the last time entry entered against the task.",
            "format": "date-time",
            "nullable": true
          },
          "customForm": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "129",
                  "-170"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "custevent_msprojstartdate": {
            "title": "MS Project Start Date",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "msprojuid": {
            "title": "MS Project UID",
            "type": "string",
            "nullable": true
          },
          "custevent_msprojenddate": {
            "title": "MS Project End Date",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-ns-custom-field": true
          },
          "startDateBaseline": {
            "title": "Start Date Baseline",
            "type": "string",
            "description": "The date in the State Date field when the baseline was set.",
            "format": "date-time",
            "nullable": true
          },
          "calculatedwork": {
            "title": "Calculated Work",
            "type": "number",
            "description": "Total work calculated by NetSuite based on the planned and actual time entered by assigned resources. This field cannot be manually edited.",
            "format": "float",
            "nullable": true
          },
          "remainingWork": {
            "title": "Remaining Work",
            "type": "string",
            "description": "Remaining Work is calculated as: [Estimated Work - Actual Work] Before work starts on a task, Remainng Work is the same as Estimated Work. When a task is marked Completed, Estimated Work is set to equal Actual Work and Remaining Work is 0.",
            "nullable": true
          },
          "msprojoutlinenum": {
            "title": "MS Project Outline Number",
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "NOTSTART",
                  "PROGRESS",
                  "COMPLETE"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "startDateTime": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/nsResource"
          },
          "parent": {
            "$ref": "#/components/schemas/projectTask"
          },
          "assignee": {
            "$ref": "#/components/schemas/projectTask-assigneeCollection"
          },
          "insertBefore": {
            "$ref": "#/components/schemas/projectTask"
          },
          "project": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/nsResource"
              }
            ]
          },
          "predecessor": {
            "$ref": "#/components/schemas/projectTask-predecessorCollection"
          },
          "contact": {
            "$ref": "#/components/schemas/nsResource"
          },
          "custevent8": {
            "$ref": "#/components/schemas/nsResource"
          },
          "msprojserviceitem": {
            "$ref": "#/components/schemas/nsResource"
          }
        },
        "x-ns-filterable": [
          "endDateBaseline",
          "custevent_msprojconstraintdate",
          "parent",
          "eventId",
          "plannedworkbaseline",
          "externalId",
          "project",
          "title",
          "calculatedworkbaseline",
          "contact",
          "custevent_msprojconstraint",
          "id",
          "custevent9",
          "nonBillableTask",
          "custevent8",
          "custevent7",
          "owner",
          "constraintType",
          "actualWork",
          "custevent_uploadedbymsproj",
          "priority",
          "plannedwork",
          "message",
          "finishByDate",
          "custevent_msprojmanual",
          "percentTimeComplete",
          "endDate",
          "custevent_msprojstartdate",
          "custevent_msprojenddate",
          "startDateBaseline",
          "calculatedwork",
          "remainingWork",
          "status",
          "startDateTime"
        ]
      },
      "projectTask-predecessorElement": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "endDate": {
            "title": "End Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lagdays": {
            "title": "Lag Time",
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "startDate": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "title": "Internal identifier",
                "type": "string",
                "enum": [
                  "FS",
                  "SS",
                  "FF",
                  "SF"
                ]
              },
              "refName": {
                "title": "Reference Name",
                "type": "string"
              }
            }
          },
          "refName": {
            "title": "Reference Name",
            "type": "string"
          },
          "predecessor": {
            "$ref": "#/components/schemas/projectTask"
          }
        },
        "x-ns-filterable": []
      },
      "projectTaskCollection": {
        "type": "object",
        "properties": {
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "title": "Items",
            "type": "array",
            "description": "An array field that represents a collection of elements, for example, sublist lines, multiselect items, or search results.",
            "items": {
              "$ref": "#/components/schemas/projectTask"
            }
          },
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          }
        }
      },
      "projectTask-predecessorCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/projectTask-predecessorElement"
            }
          }
        }
      },
      "projectTask-assigneeCollection": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/nsLink"
            }
          },
          "totalResults": {
            "title": "Total Results",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "hasMore": {
            "title": "Has More Results",
            "type": "boolean",
            "readOnly": true
          },
          "offset": {
            "title": "Query Offset",
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/projectTask-assigneeElement"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth_1.0_authorization": {
        "type": "apiKey",
        "description": "OAuth 1.0 - https://tools.ietf.org/html/rfc5849",
        "name": "authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "OAuth_1.0_authorization": []
    }
  ]
}